android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    boolean startActivities(android.app.Activity,android.content.Intent[]) -> startActivities
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivities(android.app.Activity,android.content.Intent[]) -> startActivities
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mDestroyed -> mDestroyed
    boolean mRemoved -> mRemoved
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState() -> restoreViewState
    void setIndex(int) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void performStart() -> performStart
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.app.HCSparseArray mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragmentIndex(int) -> invalidateSupportFragmentIndex
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.app.HCSparseArray loaders -> loaders
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    java.lang.String makeFragmentName(int,int) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.HCSparseArray -> android.support.v4.app.HCSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch(int[],int,int,int) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealIntArraySize(int) -> idealIntArraySize
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.HCSparseArray mLoaders -> mLoaders
    android.support.v4.app.HCSparseArray mInactiveLoaders -> mInactiveLoaders
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.app.Notification getNotification() -> getNotification
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder) -> getNotification
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder) -> getNotification
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder) -> getNotification
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> registerContentObserver
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$MenuVersionImpl -> android.support.v4.view.MenuCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    int[] ATTRS -> ATTRS
    int SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    boolean mScrolling -> mScrolling
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mTouchSlop -> mTouchSlop
    float mInitialMotionX -> mInitialMotionX
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    void addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll() -> completeScroll
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$100() -> access$100
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    java.lang.Object getParent(java.lang.Object) -> getParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    java.lang.Object getParent(java.lang.Object) -> getParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    java.lang.Object getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
cn.sharesdk.framework.CustomPlatform -> cn.sharesdk.framework.CustomPlatform:
    void initDevInfo(java.lang.String) -> initDevInfo
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getPlatformId() -> getPlatformId
    int getCustomPlatformId() -> getCustomPlatformId
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.b.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    void getFriendList(int,int,java.lang.String) -> getFriendList
    java.util.HashMap getFollowings(int,int,java.lang.String) -> getFollowings
    java.util.HashMap getFollowers(int,int,java.lang.String) -> getFollowers
    java.util.HashMap getBilaterals(int,int,java.lang.String) -> getBilaterals
    java.util.HashMap filterFriendshipInfo(int,java.util.HashMap) -> filterFriendshipInfo
    boolean hasShareCallback() -> hasShareCallback
cn.sharesdk.framework.Platform -> cn.sharesdk.framework.Platform:
    int ACTION_AUTHORIZING -> ACTION_AUTHORIZING
    int ACTION_GETTING_FRIEND_LIST -> ACTION_GETTING_FRIEND_LIST
    int ACTION_SENDING_DIRECT_MESSAGE -> ACTION_SENDING_DIRECT_MESSAGE
    int ACTION_FOLLOWING_USER -> ACTION_FOLLOWING_USER
    int ACTION_TIMELINE -> ACTION_TIMELINE
    int ACTION_USER_INFOR -> ACTION_USER_INFOR
    int ACTION_SHARE -> ACTION_SHARE
    int ACTION_GETTING_BILATERAL_LIST -> ACTION_GETTING_BILATERAL_LIST
    int ACTION_GETTING_FOLLOWER_LIST -> ACTION_GETTING_FOLLOWER_LIST
    int ACTION_CUSTOMER -> ACTION_CUSTOMER
    int CUSTOMER_ACTION_MASK -> CUSTOMER_ACTION_MASK
    int SHARE_TEXT -> SHARE_TEXT
    int SHARE_IMAGE -> SHARE_IMAGE
    int SHARE_WEBPAGE -> SHARE_WEBPAGE
    int SHARE_MUSIC -> SHARE_MUSIC
    int SHARE_VIDEO -> SHARE_VIDEO
    int SHARE_APPS -> SHARE_APPS
    int SHARE_FILE -> SHARE_FILE
    int SHARE_EMOJI -> SHARE_EMOJI
    cn.sharesdk.framework.f a -> a
    android.content.Context context -> context
    cn.sharesdk.framework.PlatformDb db -> db
    cn.sharesdk.framework.PlatformActionListener listener -> listener
    void a() -> a
    void initDevInfo(java.lang.String) -> initDevInfo
    void copyDevinfo(java.lang.String,java.lang.String) -> copyDevinfo
    void copyNetworkDevinfo(int,int) -> copyNetworkDevinfo
    java.lang.String getDevinfo(java.lang.String) -> getDevinfo
    java.lang.String getDevinfo(java.lang.String,java.lang.String) -> getDevinfo
    java.lang.String getNetworkDevinfo(java.lang.String,java.lang.String) -> getNetworkDevinfo
    java.lang.String getNetworkDevinfo(int,java.lang.String,java.lang.String) -> getNetworkDevinfo
    android.content.Context getContext() -> getContext
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getId() -> getId
    int getPlatformId() -> getPlatformId
    int getSortId() -> getSortId
    void setPlatformActionListener(cn.sharesdk.framework.PlatformActionListener) -> setPlatformActionListener
    cn.sharesdk.framework.PlatformActionListener getPlatformActionListener() -> getPlatformActionListener
    boolean isAuthValid() -> isAuthValid
    boolean isClientValid() -> isClientValid
    boolean isValid() -> isValid
    void SSOSetting(boolean) -> SSOSetting
    boolean isSSODisable() -> isSSODisable
    boolean b() -> b
    void authorize() -> authorize
    void authorize(java.lang.String[]) -> authorize
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void innerAuthorize(int,java.lang.Object) -> innerAuthorize
    void share(cn.sharesdk.framework.Platform$ShareParams) -> share
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void followFriend(java.lang.String) -> followFriend
    void follow(java.lang.String) -> follow
    void getTimeLine(java.lang.String,int,int) -> getTimeLine
    void timeline(int,int,java.lang.String) -> timeline
    void showUser(java.lang.String) -> showUser
    void userInfor(java.lang.String) -> userInfor
    void listFriend(int,int,java.lang.String) -> listFriend
    void getFriendList(int,int,java.lang.String) -> getFriendList
    java.util.HashMap getFollowings(int,int,java.lang.String) -> getFollowings
    java.util.HashMap getFollowers(int,int,java.lang.String) -> getFollowers
    java.util.HashMap getBilaterals(int,int,java.lang.String) -> getBilaterals
    java.util.HashMap filterFriendshipInfo(int,java.util.HashMap) -> filterFriendshipInfo
    void customerProtocol(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> customerProtocol
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    void afterRegister(int,java.lang.Object) -> afterRegister
    cn.sharesdk.framework.PlatformDb getDb() -> getDb
    void removeAccount() -> removeAccount
    void removeAccount(boolean) -> removeAccount
    java.lang.String getShortLintk(java.lang.String,boolean) -> getShortLintk
    cn.sharesdk.framework.b.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.lang.String uploadImageToFileServer(java.lang.String) -> uploadImageToFileServer
    java.lang.String uploadImageToFileServer(android.graphics.Bitmap) -> uploadImageToFileServer
    boolean hasShareCallback() -> hasShareCallback
cn.sharesdk.framework.Platform$ShareParams -> cn.sharesdk.framework.Platform$ShareParams:
    java.lang.String text -> text
    java.lang.String imagePath -> imagePath
cn.sharesdk.framework.PlatformActionListener -> cn.sharesdk.framework.PlatformActionListener:
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.PlatformDb -> cn.sharesdk.framework.PlatformDb:
    java.lang.String DB_NAME -> DB_NAME
    android.content.SharedPreferences db -> db
    java.lang.String platformNname -> platformNname
    int platformVersion -> platformVersion
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    java.lang.String getToken() -> getToken
    void putToken(java.lang.String) -> putToken
    java.lang.String getTokenSecret() -> getTokenSecret
    void putTokenSecret(java.lang.String) -> putTokenSecret
    long getExpiresIn() -> getExpiresIn
    void putExpiresIn(long) -> putExpiresIn
    long getExpiresTime() -> getExpiresTime
    int getPlatformVersion() -> getPlatformVersion
    java.lang.String getPlatformNname() -> getPlatformNname
    void putUserId(java.lang.String) -> putUserId
    java.lang.String getUserId() -> getUserId
    java.lang.String getUserName() -> getUserName
    java.lang.String getUserIcon() -> getUserIcon
    void removeAccount() -> removeAccount
    java.lang.String exportData() -> exportData
    void importData(java.lang.String) -> importData
    boolean isValid() -> isValid
    java.lang.String getUserGender() -> getUserGender
cn.sharesdk.framework.ReflectablePlatformActionListener -> cn.sharesdk.framework.ReflectablePlatformActionListener:
    int a -> a
    android.os.Handler$Callback b -> b
    int c -> c
    android.os.Handler$Callback d -> d
    int e -> e
    android.os.Handler$Callback f -> f
    void setOnCompleteCallback(int,android.os.Handler$Callback) -> setOnCompleteCallback
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void setOnErrorCallback(int,android.os.Handler$Callback) -> setOnErrorCallback
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void setOnCancelCallback(int,android.os.Handler$Callback) -> setOnCancelCallback
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.Service -> cn.sharesdk.framework.Service:
    android.content.Context a -> a
    java.lang.String b -> b
    void a(android.content.Context) -> a
    android.content.Context getContext() -> getContext
    void a(java.lang.String) -> a
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getDeviceKey() -> getDeviceKey
    int getServiceVersionInt() -> getServiceVersionInt
    java.lang.String getServiceVersionName() -> getServiceVersionName
    void onBind() -> onBind
    void onUnbind() -> onUnbind
    android.content.Context a(cn.sharesdk.framework.Service) -> a
cn.sharesdk.framework.Service$ServiceEvent -> cn.sharesdk.framework.Service$ServiceEvent:
    int PLATFORM -> PLATFORM
    cn.sharesdk.framework.Service service -> service
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    java.util.HashMap filterShareContent(int,cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
cn.sharesdk.framework.ShareSDK -> cn.sharesdk.framework.ShareSDK:
    cn.sharesdk.framework.n a -> a
    boolean b -> b
    void initSDK(android.content.Context) -> initSDK
    void initSDK(android.content.Context,boolean) -> initSDK
    void initSDK(android.content.Context,java.lang.String) -> initSDK
    void initSDK(android.content.Context,java.lang.String,boolean) -> initSDK
    void stopSDK(android.content.Context) -> stopSDK
    void stopSDK() -> stopSDK
    void c() -> c
    void registerService(java.lang.Class) -> registerService
    void unregisterService(java.lang.Class) -> unregisterService
    cn.sharesdk.framework.Service getService(java.lang.Class) -> getService
    void registerPlatform(java.lang.Class) -> registerPlatform
    void unregisterPlatform(java.lang.Class) -> unregisterPlatform
    java.lang.String getSDKVersionName() -> getSDKVersionName
    int getSDKVersionCode() -> getSDKVersionCode
    void setConnTimeout(int) -> setConnTimeout
    void setReadTimeout(int) -> setReadTimeout
    void removeCookieOnAuthorize(boolean) -> removeCookieOnAuthorize
    void deleteCache() -> deleteCache
    cn.sharesdk.framework.Platform[] getPlatformList(android.content.Context) -> getPlatformList
    cn.sharesdk.framework.Platform[] getPlatformList() -> getPlatformList
    cn.sharesdk.framework.Platform getPlatform(android.content.Context,java.lang.String) -> getPlatform
    cn.sharesdk.framework.Platform getPlatform(java.lang.String) -> getPlatform
    void logDemoEvent(int,cn.sharesdk.framework.Platform) -> logDemoEvent
    void logApiEvent(java.lang.String,int) -> logApiEvent
    void setPlatformDevInfo(java.lang.String,java.util.HashMap) -> setPlatformDevInfo
    java.lang.String platformIdToName(int) -> platformIdToName
    int platformNameToId(java.lang.String) -> platformNameToId
    boolean isRemoveCookieOnAuthorize() -> isRemoveCookieOnAuthorize
    void closeDebug() -> closeDebug
    boolean isDebug() -> isDebug
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    boolean a(java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(android.graphics.Bitmap) -> a
cn.sharesdk.framework.TitleLayout -> cn.sharesdk.framework.TitleLayout:
    android.widget.ImageView btnBack -> btnBack
    android.widget.TextView tvTitle -> tvTitle
    android.widget.TextView btnRight -> btnRight
    void init(android.content.Context) -> init
    android.widget.ImageView getBtnBack() -> getBtnBack
    android.widget.TextView getTvTitle() -> getTvTitle
    android.widget.TextView getBtnRight() -> getBtnRight
cn.sharesdk.framework.a -> cn.sharesdk.framework.a:
    cn.sharesdk.framework.PlatformActionListener a -> a
    java.util.HashMap b -> b
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a() -> a
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform$ShareParams) -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void a(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void b(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> b
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(cn.sharesdk.framework.Platform,int,java.lang.Object) -> a
    java.lang.String a(cn.sharesdk.framework.Platform) -> a
    java.lang.String b(cn.sharesdk.framework.Platform) -> b
    java.lang.String a(cn.sharesdk.framework.PlatformDb,java.lang.String[]) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.a,cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.a) -> a
    java.lang.String a(cn.sharesdk.framework.a,cn.sharesdk.framework.Platform) -> a
    void a(cn.sharesdk.framework.a,int,cn.sharesdk.framework.Platform) -> a
cn.sharesdk.framework.a.a -> cn.sharesdk.framework.a.a:
    cn.sharesdk.framework.a.a a -> a
    cn.sharesdk.framework.a.a a() -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.lang.String,int) -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut,java.lang.String,int) -> b
    void a(java.lang.String,java.util.ArrayList,com.mob.tools.network.HTTPPart,com.mob.tools.network.RawNetworkCallback,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut,java.lang.String,int) -> b
    void a(java.lang.String,int) -> a
cn.sharesdk.framework.authorize.AuthorizeAdapter -> cn.sharesdk.framework.authorize.AuthorizeAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    java.lang.String platform -> platform
    android.widget.RelativeLayout rlBody -> rlBody
    boolean popUpAnimationDisable -> popUpAnimationDisable
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setPlatformName(java.lang.String) -> setPlatformName
    java.lang.String getPlatformName() -> getPlatformName
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onResize(int,int,int,int) -> onResize
    void onDestroy() -> onDestroy
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void disablePopUpAnimation() -> disablePopUpAnimation
    boolean isPopUpAnimationDisable() -> isPopUpAnimationDisable
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void hideShareSDKLogo() -> hideShareSDKLogo
cn.sharesdk.framework.authorize.AuthorizeHelper -> cn.sharesdk.framework.authorize.AuthorizeHelper:
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.authorize.AuthorizeListener -> cn.sharesdk.framework.authorize.AuthorizeListener:
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.framework.authorize.RegisterView -> cn.sharesdk.framework.authorize.RegisterView:
    cn.sharesdk.framework.TitleLayout a -> a
    android.widget.RelativeLayout b -> b
    android.webkit.WebView c -> c
    android.widget.TextView d -> d
    void a(android.content.Context) -> a
    int b(android.content.Context) -> b
    android.view.View a() -> a
    void a(boolean) -> a
    android.webkit.WebView b() -> b
    cn.sharesdk.framework.TitleLayout c() -> c
    android.widget.RelativeLayout d() -> d
    android.widget.TextView a(cn.sharesdk.framework.authorize.RegisterView) -> a
cn.sharesdk.framework.authorize.ResizeLayout -> cn.sharesdk.framework.authorize.ResizeLayout:
    cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener a -> a
    void a(cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener -> cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener:
    void OnResize(int,int,int,int) -> OnResize
cn.sharesdk.framework.authorize.SSOListener -> cn.sharesdk.framework.authorize.SSOListener:
    void onFailed(java.lang.Throwable) -> onFailed
    void onCancel() -> onCancel
    void onComplete(android.os.Bundle) -> onComplete
cn.sharesdk.framework.authorize.a -> cn.sharesdk.framework.authorize.a:
    cn.sharesdk.framework.authorize.AuthorizeHelper a -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeHelper) -> a
    void show(android.content.Context,android.content.Intent) -> show
    cn.sharesdk.framework.authorize.AuthorizeHelper a() -> a
cn.sharesdk.framework.authorize.b -> cn.sharesdk.framework.authorize.b:
    cn.sharesdk.framework.authorize.g a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c -> c
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
cn.sharesdk.framework.authorize.c -> cn.sharesdk.framework.authorize.c:
    cn.sharesdk.framework.authorize.RegisterView a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.d -> cn.sharesdk.framework.authorize.d:
    int a -> a
    cn.sharesdk.framework.authorize.RegisterView b -> b
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
cn.sharesdk.framework.authorize.e -> cn.sharesdk.framework.authorize.e:
    cn.sharesdk.framework.authorize.f c -> c
    cn.sharesdk.framework.authorize.SSOListener b -> b
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    void onCreate() -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onNewIntent(android.content.Intent) -> onNewIntent
cn.sharesdk.framework.authorize.f -> cn.sharesdk.framework.authorize.f:
    cn.sharesdk.framework.authorize.e a -> a
    int b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    void a() -> a
    void a(int) -> a
    void a(int,int,android.content.Intent) -> a
    void a(android.content.Intent) -> a
cn.sharesdk.framework.authorize.g -> cn.sharesdk.framework.authorize.g:
    cn.sharesdk.framework.authorize.AuthorizeAdapter c -> c
    cn.sharesdk.framework.authorize.RegisterView d -> d
    android.webkit.WebView e -> e
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.framework.authorize.AuthorizeAdapter c() -> c
    void onCreate() -> onCreate
    cn.sharesdk.framework.authorize.RegisterView b() -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void OnResize(int,int,int,int) -> OnResize
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    android.app.Activity a(cn.sharesdk.framework.authorize.g) -> a
    android.app.Activity b(cn.sharesdk.framework.authorize.g) -> b
cn.sharesdk.framework.authorize.g$a -> cn.sharesdk.framework.authorize.g$a:
    float[] a -> a
    float getInterpolation(float) -> getInterpolation
cn.sharesdk.framework.authorize.h -> cn.sharesdk.framework.authorize.h:
    cn.sharesdk.framework.authorize.g a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.i -> cn.sharesdk.framework.authorize.i:
    cn.sharesdk.framework.authorize.h a -> a
    void run() -> run
cn.sharesdk.framework.authorize.j -> cn.sharesdk.framework.authorize.j:
    cn.sharesdk.framework.authorize.g a -> a
    void run() -> run
cn.sharesdk.framework.b -> cn.sharesdk.framework.b:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.util.HashMap c -> c
    cn.sharesdk.framework.a d -> d
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.b.a -> cn.sharesdk.framework.b.a:
    cn.sharesdk.framework.b.a a -> a
    cn.sharesdk.framework.b.c b -> b
    cn.sharesdk.framework.b.a.e c -> c
    boolean d -> d
    cn.sharesdk.framework.b.a a(android.content.Context,java.lang.String) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(boolean) -> a
    void a(cn.sharesdk.framework.b.b.c) -> a
    void a(cn.sharesdk.framework.b.b.b) -> a
    void a(cn.sharesdk.framework.b.b.f) -> a
    java.lang.String a(java.lang.String,cn.sharesdk.framework.b.b) -> a
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(android.graphics.Bitmap,cn.sharesdk.framework.b.b) -> a
    void e() -> e
    java.lang.String d(java.lang.String) -> d
    boolean a(java.lang.String,boolean) -> a
    java.lang.String a(java.lang.String,int,boolean,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,int,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(android.graphics.Bitmap) -> a
    java.util.HashMap f() -> f
    java.util.HashMap g() -> g
    void a(java.util.HashMap) -> a
    java.util.HashMap b(java.lang.String) -> b
    boolean a(int,int) -> a
    void h() -> h
cn.sharesdk.framework.b.a.a -> cn.sharesdk.framework.b.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
cn.sharesdk.framework.b.a.b -> cn.sharesdk.framework.b.a.b:
    android.content.Context a -> a
    cn.sharesdk.framework.b.a.a b -> b
    cn.sharesdk.framework.b.a.b c -> c
    cn.sharesdk.framework.b.a.b a(android.content.Context) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
cn.sharesdk.framework.b.a.c -> cn.sharesdk.framework.b.a.c:
    java.lang.String a -> a
    java.util.ArrayList b -> b
cn.sharesdk.framework.b.a.d -> cn.sharesdk.framework.b.a.d:
    int a -> a
    int b -> b
    int c -> c
    long a(android.content.Context,java.lang.String,long) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context) -> a
cn.sharesdk.framework.b.a.e -> cn.sharesdk.framework.b.a.e:
    android.content.Context a -> a
    com.mob.tools.utils.SharePrefrenceHelper b -> b
    cn.sharesdk.framework.b.a.e c -> c
    cn.sharesdk.framework.b.a.e a(android.content.Context) -> a
    long a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    int e() -> e
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String e(java.lang.String) -> e
    void f(java.lang.String) -> f
    java.lang.String f() -> f
    void g(java.lang.String) -> g
    java.lang.String g() -> g
    void a(long) -> a
    java.lang.Long h() -> h
    void a(boolean) -> a
    boolean i() -> i
    void b(long) -> b
    java.lang.Long j() -> j
    void b(boolean) -> b
    boolean k() -> k
    void b(java.lang.String,java.lang.String) -> b
    java.lang.String h(java.lang.String) -> h
    void a(java.lang.String,java.lang.Long) -> a
    long i(java.lang.String) -> i
    void a(java.lang.String,int) -> a
    int j(java.lang.String) -> j
    void a(java.lang.String,java.lang.Object) -> a
    java.lang.Object k(java.lang.String) -> k
cn.sharesdk.framework.b.b -> cn.sharesdk.framework.b.b:
    cn.sharesdk.framework.b.b a -> a
    cn.sharesdk.framework.b.b b -> b
    cn.sharesdk.framework.b.b[] c -> c
    cn.sharesdk.framework.b.b[] values() -> values
    cn.sharesdk.framework.b.b valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.b.b.a -> cn.sharesdk.framework.b.b.a:
    int c -> c
    long d -> d
    int a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.b.b.b -> cn.sharesdk.framework.b.b.b:
    int n -> n
    long o -> o
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.b.b.c -> cn.sharesdk.framework.b.b.c:
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    long e() -> e
    long d() -> d
    void a(long) -> a
    void f() -> f
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.b.b.d -> cn.sharesdk.framework.b.b.d:
    int d -> d
    long n -> n
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.b.b.e -> cn.sharesdk.framework.b.b.e:
    int b -> b
    long c -> c
    long a -> a
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.b.b.f -> cn.sharesdk.framework.b.b.f:
    int p -> p
    long q -> q
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.sharesdk.framework.b.b.f$a d -> d
    java.lang.String n -> n
    java.lang.String[] o -> o
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.b.b.f$a -> cn.sharesdk.framework.b.b.f$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.util.ArrayList f -> f
    java.util.HashMap g -> g
    java.lang.String toString() -> toString
cn.sharesdk.framework.b.b.g -> cn.sharesdk.framework.b.b.g:
    int a -> a
    long b -> b
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.b.c -> cn.sharesdk.framework.b.c:
    java.lang.String a -> a
    android.content.Context b -> b
    cn.sharesdk.framework.b.a.e c -> c
    com.mob.tools.utils.DeviceHelper d -> d
    com.mob.tools.network.NetworkHelper e -> e
    com.mob.tools.utils.Hashon f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    boolean i -> i
    java.util.HashMap j -> j
    void j() -> j
    void a(java.lang.String) -> a
    void a(java.util.HashMap) -> a
    java.lang.String k() -> k
    java.util.HashMap a() -> a
    java.lang.String l() -> l
    long b() -> b
    java.lang.String m() -> m
    java.util.HashMap c() -> c
    java.lang.String n() -> n
    void b(java.util.HashMap) -> b
    java.lang.String d(java.util.HashMap) -> d
    java.util.HashMap d() -> d
    void b(java.lang.String) -> b
    java.lang.String e() -> e
    java.lang.String o() -> o
    java.util.HashMap c(java.lang.String) -> c
    java.lang.String p() -> p
    boolean a(java.lang.String,boolean) -> a
    java.lang.String q() -> q
    java.util.HashMap a(java.lang.String,java.util.ArrayList,int,java.lang.String) -> a
    java.lang.String e(java.lang.String) -> e
    java.lang.String r() -> r
    java.util.HashMap f() -> f
    void a(cn.sharesdk.framework.b.b.c) -> a
    java.util.ArrayList g() -> g
    void a(java.util.ArrayList) -> a
    java.util.HashMap h() -> h
    void c(java.util.HashMap) -> c
    java.util.HashMap d(java.lang.String) -> d
    void a(int,int) -> a
    java.lang.String b(int,int) -> b
    void i() -> i
    java.lang.String a(cn.sharesdk.framework.b.c) -> a
cn.sharesdk.framework.b.d -> cn.sharesdk.framework.b.d:
    cn.sharesdk.framework.b.c a -> a
    int getSdkver() -> getSdkver
    java.lang.String getProductTag() -> getProductTag
    java.lang.String getProductAppkey() -> getProductAppkey
cn.sharesdk.framework.b.e -> cn.sharesdk.framework.b.e:
    cn.sharesdk.framework.b.e a -> a
    android.content.Context b -> b
    com.mob.tools.utils.DeviceHelper c -> c
    cn.sharesdk.framework.b.a d -> d
    java.lang.String e -> e
    android.os.Handler f -> f
    boolean g -> g
    int h -> h
    boolean i -> i
    long j -> j
    boolean k -> k
    java.io.File l -> l
    com.mob.tools.utils.FileLocker m -> m
    cn.sharesdk.framework.b.e a(android.content.Context,java.lang.String) -> a
    void a(android.os.Handler) -> a
    void a(boolean) -> a
    void a(int) -> a
    void onStart(android.os.Message) -> onStart
    void onStop(android.os.Message) -> onStop
    void a(cn.sharesdk.framework.b.b.c) -> a
    void b(cn.sharesdk.framework.b.b.c) -> b
    void onMessage(android.os.Message) -> onMessage
    void c(cn.sharesdk.framework.b.b.c) -> c
    void a() -> a
    boolean b() -> b
    void c() -> c
    void d() -> d
cn.sharesdk.framework.c -> cn.sharesdk.framework.c:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.lang.Object c -> c
    cn.sharesdk.framework.a d -> d
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.d -> cn.sharesdk.framework.d:
    java.lang.String TEXT -> TEXT
    java.lang.String IMAGE_PATH -> IMAGE_PATH
    java.lang.String FILE_PATH -> FILE_PATH
    java.lang.String TITLE -> TITLE
    java.lang.String NOTEBOOK -> NOTEBOOK
    java.lang.String STACK -> STACK
    java.lang.String TAGS -> TAGS
    java.lang.String IS_PUBLIC -> IS_PUBLIC
    java.lang.String IS_FRIEND -> IS_FRIEND
    java.lang.String IS_FAMILY -> IS_FAMILY
    java.lang.String SAFETY_LEVEL -> SAFETY_LEVEL
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String HIDDEN -> HIDDEN
    java.lang.String VENUE_NAME -> VENUE_NAME
    java.lang.String VENUE_DESCRIPTION -> VENUE_DESCRIPTION
    java.lang.String LATITUDE -> LATITUDE
    java.lang.String LONGITUDE -> LONGITUDE
    java.lang.String IMAGE_URL -> IMAGE_URL
    java.lang.String COMMENT -> COMMENT
    java.lang.String TITLE_URL -> TITLE_URL
    java.lang.String URL -> URL
    java.lang.String ADDRESS -> ADDRESS
    java.lang.String SITE -> SITE
    java.lang.String SITE_URL -> SITE_URL
    java.lang.String GROPU_ID -> GROPU_ID
    java.lang.String EXT_INFO -> EXT_INFO
    java.lang.String SHARE_TYPE -> SHARE_TYPE
    java.lang.String MUSIC_URL -> MUSIC_URL
    java.lang.String IMAGE_DATA -> IMAGE_DATA
    java.lang.String AUTHOR -> AUTHOR
    java.lang.String SCENCE -> SCENCE
    java.lang.String CUSTOM_FLAG -> CUSTOM_FLAG
    java.lang.String EXECUTE_URL -> EXECUTE_URL
    java.lang.String INSTALL_URL -> INSTALL_URL
    java.lang.String IS_SHARE_TENCENT_WEIBO -> IS_SHARE_TENCENT_WEIBO
    java.lang.String IMAGE_ARRAY -> IMAGE_ARRAY
    java.util.HashMap params -> params
    void set(java.lang.String,java.lang.Object) -> set
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setImagePath(java.lang.String) -> setImagePath
    java.lang.String getImagePath() -> getImagePath
    void setImageUrl(java.lang.String) -> setImageUrl
    java.lang.String getImageUrl() -> getImageUrl
    void setFilePath(java.lang.String) -> setFilePath
    java.lang.String getFilePath() -> getFilePath
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getNotebook() -> getNotebook
    void setNotebook(java.lang.String) -> setNotebook
    java.lang.String getStack() -> getStack
    void setStack(java.lang.String) -> setStack
    java.lang.String[] getTags() -> getTags
    void setTags(java.lang.String[]) -> setTags
    boolean isPublic() -> isPublic
    void setPublic(boolean) -> setPublic
    boolean isFriend() -> isFriend
    void setFriend(boolean) -> setFriend
    boolean isFamily() -> isFamily
    void setFamily(boolean) -> setFamily
    int getSafetyLevel() -> getSafetyLevel
    void setSafetyLevel(int) -> setSafetyLevel
    int getContentType() -> getContentType
    void setContentType(int) -> setContentType
    int getHidden() -> getHidden
    void setHidden(int) -> setHidden
    void setVenueName(java.lang.String) -> setVenueName
    java.lang.String getVenueName() -> getVenueName
    java.lang.String getVenueDescription() -> getVenueDescription
    void setVenueDescription(java.lang.String) -> setVenueDescription
    float getLatitude() -> getLatitude
    void setLatitude(float) -> setLatitude
    float getLongitude() -> getLongitude
    void setLongitude(float) -> setLongitude
    java.lang.String getTitleUrl() -> getTitleUrl
    void setTitleUrl(java.lang.String) -> setTitleUrl
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    java.lang.String getMusicUrl() -> getMusicUrl
    void setMusicUrl(java.lang.String) -> setMusicUrl
    java.lang.String getSite() -> getSite
    void setSite(java.lang.String) -> setSite
    java.lang.String getSiteUrl() -> getSiteUrl
    void setSiteUrl(java.lang.String) -> setSiteUrl
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getAuthor() -> getAuthor
    void setAuthor(java.lang.String) -> setAuthor
    android.graphics.Bitmap getImageData() -> getImageData
    void setImageData(android.graphics.Bitmap) -> setImageData
    int getShareType() -> getShareType
    void setShareType(int) -> setShareType
    int getScence() -> getScence
    void setScence(int) -> setScence
    java.lang.String getExtInfo() -> getExtInfo
    void setExtInfo(java.lang.String) -> setExtInfo
    java.lang.String[] getCustomFlag() -> getCustomFlag
    void setCustomFlag(java.lang.String[]) -> setCustomFlag
    java.lang.String getExecuteUrl() -> getExecuteUrl
    void setExecuteUrl() -> setExecuteUrl
    java.lang.String getInstallUrl() -> getInstallUrl
    void setInstallUrl() -> setInstallUrl
    boolean isShareTencentWeibo() -> isShareTencentWeibo
    void setShareTencentWeibo(boolean) -> setShareTencentWeibo
    java.lang.String[] getImageArray() -> getImageArray
    void setImageArray(java.lang.String[]) -> setImageArray
cn.sharesdk.framework.e -> cn.sharesdk.framework.e:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    int c() -> c
    void b(cn.sharesdk.framework.authorize.AuthorizeListener) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.f -> cn.sharesdk.framework.f:
    cn.sharesdk.framework.Platform a -> a
    android.content.Context b -> b
    cn.sharesdk.framework.PlatformDb c -> c
    cn.sharesdk.framework.a d -> d
    int e -> e
    int f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    void a(java.lang.String) -> a
    int a() -> a
    int b() -> b
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener c() -> c
    boolean d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean f() -> f
    boolean j() -> j
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
    void a(int,java.lang.Object) -> a
    void b(int,java.lang.Object) -> b
    void c(int,java.lang.Object) -> c
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,int,int) -> a
    void c(java.lang.String) -> c
    void a(int,int,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> a
    cn.sharesdk.framework.PlatformDb g() -> g
    void h() -> h
    java.lang.String a(java.lang.String,boolean) -> a
    java.lang.String k() -> k
    cn.sharesdk.framework.PlatformActionListener i() -> i
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    boolean a(cn.sharesdk.framework.f) -> a
    cn.sharesdk.framework.Platform b(cn.sharesdk.framework.f) -> b
cn.sharesdk.framework.g -> cn.sharesdk.framework.g:
    int a -> a
    java.lang.Object b -> b
    cn.sharesdk.framework.f c -> c
    void run() -> run
cn.sharesdk.framework.h -> cn.sharesdk.framework.h:
    java.lang.String[] a -> a
    cn.sharesdk.framework.f b -> b
    void run() -> run
cn.sharesdk.framework.i -> cn.sharesdk.framework.i:
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_HOST_LOOKUP -> ERROR_HOST_LOOKUP
    int ERROR_UNSUPPORTED_AUTH_SCHEME -> ERROR_UNSUPPORTED_AUTH_SCHEME
    int ERROR_AUTHENTICATION -> ERROR_AUTHENTICATION
    int ERROR_PROXY_AUTHENTICATION -> ERROR_PROXY_AUTHENTICATION
    int ERROR_CONNECT -> ERROR_CONNECT
    int ERROR_IO -> ERROR_IO
    int ERROR_TIMEOUT -> ERROR_TIMEOUT
    int ERROR_REDIRECT_LOOP -> ERROR_REDIRECT_LOOP
    int ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    int ERROR_FAILED_SSL_HANDSHAKE -> ERROR_FAILED_SSL_HANDSHAKE
    int ERROR_BAD_URL -> ERROR_BAD_URL
    int ERROR_FILE -> ERROR_FILE
    int ERROR_FILE_NOT_FOUND -> ERROR_FILE_NOT_FOUND
    int ERROR_TOO_MANY_REQUESTS -> ERROR_TOO_MANY_REQUESTS
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message) -> onTooManyRedirects
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message) -> onFormResubmission
    void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean) -> doUpdateVisitedHistory
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> shouldOverrideKeyEvent
    void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> onUnhandledKeyEvent
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
cn.sharesdk.framework.j -> cn.sharesdk.framework.j:
    android.webkit.SslErrorHandler a -> a
    cn.sharesdk.framework.i b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
cn.sharesdk.framework.k -> cn.sharesdk.framework.k:
    android.webkit.SslErrorHandler a -> a
    cn.sharesdk.framework.i b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
cn.sharesdk.framework.l -> cn.sharesdk.framework.l:
    boolean a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.util.ArrayList a() -> a
    android.content.pm.PackageInfo e() -> e
    java.util.ArrayList a(android.content.pm.PackageInfo) -> a
    java.util.ArrayList f() -> f
    void a(java.util.ArrayList) -> a
    void a(android.os.Handler,boolean,int) -> a
    void b() -> b
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    void a(cn.sharesdk.framework.n) -> a
    java.lang.String a(int,java.lang.String,java.util.HashMap) -> a
    boolean a(java.util.HashMap,java.util.HashMap) -> a
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(android.graphics.Bitmap) -> a
    java.lang.String c() -> c
    int d() -> d
    void a(int,int,java.util.HashMap) -> a
cn.sharesdk.framework.m -> cn.sharesdk.framework.m:
    cn.sharesdk.framework.l a -> a
    int a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.sharesdk.framework.n -> cn.sharesdk.framework.n:
    cn.sharesdk.framework.n$a a -> a
    android.content.Context b -> b
    java.util.HashMap c -> c
    java.util.ArrayList d -> d
    java.util.HashMap e -> e
    java.util.HashMap f -> f
    java.util.HashMap g -> g
    java.util.HashMap h -> h
    java.util.HashMap i -> i
    java.lang.String j -> j
    boolean k -> k
    java.lang.String l -> l
    boolean m -> m
    boolean n -> n
    void a(boolean) -> a
    void startThread() -> startThread
    void h() -> h
    void i() -> i
    void onStart(android.os.Message) -> onStart
    void j() -> j
    void k() -> k
    void l() -> l
    void onStop(android.os.Message) -> onStop
    void onMessage(android.os.Message) -> onMessage
    void a(java.lang.Class) -> a
    void b(java.lang.Class) -> b
    cn.sharesdk.framework.Service c(java.lang.Class) -> c
    void d(java.lang.Class) -> d
    void e(java.lang.Class) -> e
    cn.sharesdk.framework.Platform a(java.lang.String) -> a
    cn.sharesdk.framework.Platform[] a() -> a
    java.lang.String b() -> b
    int c() -> c
    void a(int) -> a
    void b(int) -> b
    void b(boolean) -> b
    boolean d() -> d
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String c(int) -> c
    int b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String) -> a
    boolean e() -> e
    boolean f() -> f
    boolean a(java.util.HashMap) -> a
    boolean a(cn.sharesdk.framework.b.a,java.util.HashMap,java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(android.graphics.Bitmap) -> a
    void g() -> g
    boolean a(cn.sharesdk.framework.n,cn.sharesdk.framework.b.a,java.util.HashMap,java.util.HashMap) -> a
cn.sharesdk.framework.n$a -> cn.sharesdk.framework.n$a:
    cn.sharesdk.framework.n$a a -> a
    cn.sharesdk.framework.n$a b -> b
    cn.sharesdk.framework.n$a c -> c
    cn.sharesdk.framework.n$a[] d -> d
    cn.sharesdk.framework.n$a[] values() -> values
    cn.sharesdk.framework.n$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.o -> cn.sharesdk.framework.o:
    cn.sharesdk.framework.n a -> a
    void run() -> run
cn.sharesdk.framework.p -> cn.sharesdk.framework.p:
    cn.sharesdk.framework.b.a a -> a
    cn.sharesdk.framework.n b -> b
    void run() -> run
cn.sharesdk.framework.q -> cn.sharesdk.framework.q:
    android.widget.ImageView a -> a
    cn.sharesdk.framework.TitleLayout b -> b
    void setVisibility(int) -> setVisibility
cn.sharesdk.framework.utils.Escaper -> cn.sharesdk.framework.utils.Escaper:
    java.lang.String escape(java.lang.String) -> escape
    java.lang.Appendable escape(java.lang.Appendable) -> escape
cn.sharesdk.framework.utils.ShareSDKR -> cn.sharesdk.framework.utils.ShareSDKR:
    int getResId(android.content.Context,java.lang.String,java.lang.String) -> getResId
    int getBitmapRes(android.content.Context,java.lang.String) -> getBitmapRes
    int getStringRes(android.content.Context,java.lang.String) -> getStringRes
    int getStringArrayRes(android.content.Context,java.lang.String) -> getStringArrayRes
    int getLayoutRes(android.content.Context,java.lang.String) -> getLayoutRes
    int getStyleRes(android.content.Context,java.lang.String) -> getStyleRes
    int getIdRes(android.content.Context,java.lang.String) -> getIdRes
    int getColorRes(android.content.Context,java.lang.String) -> getColorRes
    int getRawRes(android.content.Context,java.lang.String) -> getRawRes
    int getPluralsRes(android.content.Context,java.lang.String) -> getPluralsRes
    int getAnimRes(android.content.Context,java.lang.String) -> getAnimRes
cn.sharesdk.framework.utils.a -> cn.sharesdk.framework.utils.a:
    cn.sharesdk.framework.utils.a$b a -> a
    cn.sharesdk.framework.utils.b b -> b
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    cn.sharesdk.framework.utils.a$b a() -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList) -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.a$a) -> a
    java.util.ArrayList b(java.lang.String,java.util.ArrayList) -> b
    java.util.ArrayList b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.a$a) -> b
    java.util.ArrayList c(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.a$a) -> c
    void a(java.lang.String,java.lang.String) -> a
    java.util.ArrayList a(java.lang.String,java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.a$a) -> a
    java.lang.String a(java.lang.String) -> a
    java.util.ArrayList a(long,java.util.ArrayList,java.lang.String) -> a
    java.lang.String b(java.util.ArrayList) -> b
    java.util.ArrayList a(long,java.lang.String) -> a
    java.util.ArrayList a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.a$1 -> cn.sharesdk.framework.utils.a$1:
    int[] a -> a
cn.sharesdk.framework.utils.a$a -> cn.sharesdk.framework.utils.a$a:
    cn.sharesdk.framework.utils.a$a a -> a
    cn.sharesdk.framework.utils.a$a b -> b
    cn.sharesdk.framework.utils.a$a[] c -> c
    cn.sharesdk.framework.utils.a$a[] values() -> values
    cn.sharesdk.framework.utils.a$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.utils.a$b -> cn.sharesdk.framework.utils.a$b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
cn.sharesdk.framework.utils.b -> cn.sharesdk.framework.utils.b:
    char[] a -> a
    char[] b -> b
    boolean c -> c
    boolean[] d -> d
    boolean[] a(java.lang.String) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    char[] a(int) -> a
cn.sharesdk.framework.utils.c -> cn.sharesdk.framework.utils.c:
    java.lang.Object a(java.lang.Object) -> a
cn.sharesdk.framework.utils.d -> cn.sharesdk.framework.utils.d:
    java.lang.String getSDKTag() -> getSDKTag
    com.mob.tools.log.NLog a(android.content.Context,int,java.lang.String) -> a
    com.mob.tools.log.NLog a() -> a
cn.sharesdk.framework.utils.e -> cn.sharesdk.framework.utils.e:
    int a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.utils.d c -> c
    int getSDKVersion() -> getSDKVersion
    java.lang.String getSDKTag() -> getSDKTag
    java.lang.String getAppkey() -> getAppkey
cn.sharesdk.framework.utils.f -> cn.sharesdk.framework.utils.f:
    java.lang.ThreadLocal a -> a
    char[] a(int) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String a(java.lang.String,int) -> a
    java.lang.Appendable escape(java.lang.Appendable) -> escape
    int b(java.lang.CharSequence,int,int) -> b
    char[] a(char[],int,int) -> a
cn.sharesdk.framework.utils.g -> cn.sharesdk.framework.utils.g:
    int a -> a
    char[] b -> b
    java.lang.Appendable c -> c
    cn.sharesdk.framework.utils.f d -> d
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(char) -> append
    void a(char[],int) -> a
cn.sharesdk.framework.utils.h -> cn.sharesdk.framework.utils.h:
    char[] a() -> a
    java.lang.Object initialValue() -> initialValue
cn.sharesdk.framework.utils.i -> cn.sharesdk.framework.utils.i:
    java.util.HashMap a(java.lang.String) -> a
cn.sharesdk.framework.utils.i$a -> cn.sharesdk.framework.utils.i$a:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap a() -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
cn.sharesdk.onekeyshare.OnekeySharePage -> cn.sharesdk.onekeyshare.a:
cn.sharesdk.onekeyshare.OnekeyShareTheme -> cn.sharesdk.onekeyshare.OnekeyShareTheme:
    cn.sharesdk.onekeyshare.OnekeyShareTheme CLASSIC -> CLASSIC
    int value -> value
    cn.sharesdk.onekeyshare.OnekeyShareThemeImpl impl -> impl
    cn.sharesdk.onekeyshare.OnekeyShareTheme[] ENUM$VALUES -> ENUM$VALUES
    int getValue() -> getValue
    cn.sharesdk.onekeyshare.OnekeyShareThemeImpl getImpl() -> getImpl
    cn.sharesdk.onekeyshare.OnekeyShareTheme fromValue(int) -> fromValue
    cn.sharesdk.onekeyshare.OnekeyShareTheme[] values() -> values
    cn.sharesdk.onekeyshare.OnekeyShareTheme valueOf(java.lang.String) -> valueOf
cn.sharesdk.onekeyshare.OnekeyShareThemeImpl -> cn.sharesdk.onekeyshare.b:
    cn.sharesdk.framework.PlatformActionListener callback -> a
    android.content.Context context -> b
    void toast(java.lang.String) -> a
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.OnekeyShareThemeImpl$1 -> cn.sharesdk.onekeyshare.c:
    cn.sharesdk.onekeyshare.OnekeyShareThemeImpl this$0 -> a
    java.lang.String val$resOrName -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.themes.classic.ClassicTheme -> cn.sharesdk.onekeyshare.themes.classic.a:
cn.sharesdk.onekeyshare.themes.classic.FriendAdapter -> cn.sharesdk.onekeyshare.themes.classic.b:
    cn.sharesdk.onekeyshare.themes.classic.FriendListPage activity -> a
    boolean hasNext -> b
    cn.sharesdk.framework.Platform platform -> c
    int pageCount -> d
    int curPage -> e
    java.util.ArrayList follows -> f
    java.util.HashMap map -> g
    cn.sharesdk.onekeyshare.themes.classic.PRTHeader llHeader -> h
    float ratio -> i
    void setRatio(float) -> a
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void setPlatform(cn.sharesdk.framework.Platform) -> a
    void next() -> a
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    cn.sharesdk.onekeyshare.themes.classic.FriendAdapter$Following getItem(int) -> a
    long getItemId(int) -> getItemId
    int getCount() -> getCount
    android.view.View getHeaderView() -> getHeaderView
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onReversed() -> onReversed
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    int access$1(cn.sharesdk.onekeyshare.themes.classic.FriendAdapter) -> a
    java.util.ArrayList access$2(cn.sharesdk.onekeyshare.themes.classic.FriendAdapter) -> b
    cn.sharesdk.onekeyshare.themes.classic.FriendListPage access$3(cn.sharesdk.onekeyshare.themes.classic.FriendAdapter) -> c
cn.sharesdk.onekeyshare.themes.classic.FriendAdapter$1 -> cn.sharesdk.onekeyshare.themes.classic.c:
    cn.sharesdk.onekeyshare.themes.classic.FriendAdapter this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.themes.classic.FriendAdapter$2 -> cn.sharesdk.onekeyshare.themes.classic.d:
    cn.sharesdk.onekeyshare.themes.classic.FriendAdapter this$0 -> a
    cn.sharesdk.onekeyshare.themes.classic.FriendAdapter$FollowersResult val$followersResult -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.themes.classic.FriendAdapter$3 -> cn.sharesdk.onekeyshare.themes.classic.e:
    cn.sharesdk.onekeyshare.themes.classic.FriendAdapter this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.themes.classic.FriendAdapter$FollowersResult -> cn.sharesdk.onekeyshare.themes.classic.f:
    java.util.ArrayList list -> a
    boolean hasNextPage -> b
cn.sharesdk.onekeyshare.themes.classic.FriendAdapter$Following -> cn.sharesdk.onekeyshare.themes.classic.g:
    boolean checked -> a
    java.lang.String screenName -> b
    java.lang.String description -> c
    java.lang.String uid -> d
    java.lang.String icon -> e
    java.lang.String atName -> f
cn.sharesdk.onekeyshare.themes.classic.FriendListItem -> cn.sharesdk.onekeyshare.themes.classic.FriendListItem:
    int DESIGN_AVATAR_WIDTH -> DESIGN_AVATAR_WIDTH
    int DESIGN_AVATAR_PADDING -> DESIGN_AVATAR_PADDING
    int DESIGN_ITEM_HEIGHT -> DESIGN_ITEM_HEIGHT
    int DESIGN_ITEM_PADDING -> DESIGN_ITEM_PADDING
    android.widget.ImageView ivCheck -> ivCheck
    com.mob.tools.gui.AsyncImageView aivIcon -> aivIcon
    android.widget.TextView tvName -> tvName
    android.graphics.Bitmap bmChd -> bmChd
    android.graphics.Bitmap bmUnch -> bmUnch
    void update(cn.sharesdk.onekeyshare.themes.classic.FriendAdapter$Following,boolean) -> update
cn.sharesdk.onekeyshare.themes.classic.FriendListPage -> cn.sharesdk.onekeyshare.themes.classic.h:
    cn.sharesdk.framework.Platform platform -> a
    android.widget.LinearLayout llPage -> b
    android.widget.RelativeLayout rlTitle -> c
    android.widget.TextView tvCancel -> d
    android.widget.TextView tvConfirm -> e
    cn.sharesdk.onekeyshare.themes.classic.FriendAdapter adapter -> f
    void onCreate() -> onCreate
    float getRatio() -> a
    int getDesignTitleHeight() -> b
cn.sharesdk.onekeyshare.themes.classic.IndicatorView -> cn.sharesdk.onekeyshare.themes.classic.IndicatorView:
    int DESIGN_INDICATOR_RADIUS -> DESIGN_INDICATOR_RADIUS
    int DESIGN_INDICATOR_DISTANCE -> DESIGN_INDICATOR_DISTANCE
    int DESIGN_BOTTOM_HEIGHT -> DESIGN_BOTTOM_HEIGHT
    int count -> count
    int current -> current
    void setScreenCount(int) -> setScreenCount
    void onScreenChange(int,int) -> onScreenChange
    void onDraw(android.graphics.Canvas) -> onDraw
cn.sharesdk.onekeyshare.themes.classic.PRTHeader -> cn.sharesdk.onekeyshare.themes.classic.PRTHeader:
    int DESIGN_SCREEN_WIDTH -> DESIGN_SCREEN_WIDTH
    int DESIGN_AVATAR_WIDTH -> DESIGN_AVATAR_WIDTH
    int DESIGN_AVATAR_PADDING -> DESIGN_AVATAR_PADDING
    android.widget.TextView tvHeader -> tvHeader
    cn.sharesdk.onekeyshare.themes.classic.RotateImageView ivArrow -> ivArrow
    android.widget.ProgressBar pbRefreshing -> pbRefreshing
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void reverse() -> reverse
cn.sharesdk.onekeyshare.themes.classic.RotateImageView -> cn.sharesdk.onekeyshare.themes.classic.RotateImageView:
    float rotation -> rotation
    void setRotation(float) -> setRotation
    void onDraw(android.graphics.Canvas) -> onDraw
cn.sharesdk.onekeyshare.themes.classic.XView -> cn.sharesdk.onekeyshare.themes.classic.XView:
    float ratio -> ratio
    void setRatio(float) -> setRatio
    void onDraw(android.graphics.Canvas) -> onDraw
cn.sharesdk.sina.weibo.SinaWeibo -> cn.sharesdk.sina.weibo.SinaWeibo:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    void initDevInfo(java.lang.String) -> initDevInfo
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getPlatformId() -> getPlatformId
    void setNetworkDevinfo() -> setNetworkDevinfo
    boolean isClientValid() -> isClientValid
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doAuthorize(java.lang.String[]) -> doAuthorize
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    cn.sharesdk.framework.b.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.util.HashMap getFollowings(int,int,java.lang.String) -> getFollowings
    java.util.HashMap getBilaterals(int,int,java.lang.String) -> getBilaterals
    java.util.HashMap getFollowers(int,int,java.lang.String) -> getFollowers
    java.util.HashMap filterFriendshipInfo(int,java.util.HashMap) -> filterFriendshipInfo
    boolean hasShareCallback() -> hasShareCallback
    cn.sharesdk.framework.PlatformDb a(cn.sharesdk.sina.weibo.SinaWeibo) -> a
    cn.sharesdk.framework.PlatformDb b(cn.sharesdk.sina.weibo.SinaWeibo) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.sina.weibo.SinaWeibo) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.sina.weibo.SinaWeibo) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.sina.weibo.SinaWeibo) -> e
    void a(cn.sharesdk.sina.weibo.SinaWeibo,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener f(cn.sharesdk.sina.weibo.SinaWeibo) -> f
    cn.sharesdk.framework.PlatformActionListener g(cn.sharesdk.sina.weibo.SinaWeibo) -> g
    cn.sharesdk.framework.PlatformActionListener h(cn.sharesdk.sina.weibo.SinaWeibo) -> h
    cn.sharesdk.framework.PlatformActionListener i(cn.sharesdk.sina.weibo.SinaWeibo) -> i
cn.sharesdk.sina.weibo.SinaWeibo$ShareParams -> cn.sharesdk.sina.weibo.SinaWeibo$ShareParams:
    java.lang.String imageUrl -> imageUrl
    float longitude -> longitude
    float latitude -> latitude
cn.sharesdk.sina.weibo.a -> cn.sharesdk.sina.weibo.a:
    long a -> a
    boolean b -> b
    java.lang.String c -> c
    cn.sharesdk.framework.Platform$ShareParams d -> d
    cn.sharesdk.framework.authorize.AuthorizeListener e -> e
    void onCreate() -> onCreate
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onNewIntent(android.content.Intent) -> onNewIntent
    void a(int,java.lang.String) -> a
    void b() -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    boolean a(android.app.Activity,java.lang.String,java.lang.String,android.os.Bundle) -> a
    boolean c() -> c
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String d() -> d
    com.sina.weibo.sdk.api.TextObject e() -> e
    com.sina.weibo.sdk.api.WebpageObject f() -> f
    com.sina.weibo.sdk.api.ImageObject g() -> g
    byte[] a(android.content.Context,android.graphics.Bitmap) -> a
    byte[] b(android.content.Context,java.lang.String) -> b
    byte[] a(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
    int a(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int) -> a
    void a(cn.sharesdk.sina.weibo.a) -> a
cn.sharesdk.sina.weibo.b -> cn.sharesdk.sina.weibo.b:
    cn.sharesdk.sina.weibo.a a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.sina.weibo.c -> cn.sharesdk.sina.weibo.c:
    cn.sharesdk.sina.weibo.g a -> a
    cn.sharesdk.sina.weibo.SinaWeibo b -> b
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.sina.weibo.d -> cn.sharesdk.sina.weibo.d:
    boolean d -> d
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.Platform,java.lang.String) -> a
    android.content.Intent b(java.lang.String) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener a(cn.sharesdk.sina.weibo.d) -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b(cn.sharesdk.sina.weibo.d) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c(cn.sharesdk.sina.weibo.d) -> c
cn.sharesdk.sina.weibo.e -> cn.sharesdk.sina.weibo.e:
    cn.sharesdk.framework.Platform a -> a
    java.lang.String b -> b
    cn.sharesdk.sina.weibo.d c -> c
    void run() -> run
cn.sharesdk.sina.weibo.f -> cn.sharesdk.sina.weibo.f:
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    void a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    void a() -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    boolean a(java.lang.String,java.lang.String) -> a
    boolean b(android.content.Intent) -> b
    void a(int,int,android.content.Intent) -> a
    void c(android.content.Intent) -> c
    void d(android.content.Intent) -> d
cn.sharesdk.sina.weibo.g -> cn.sharesdk.sina.weibo.g:
    cn.sharesdk.sina.weibo.g b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String[] g -> g
    cn.sharesdk.framework.a.a h -> h
    android.content.Context i -> i
    cn.sharesdk.sina.weibo.g a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void b(java.lang.String) -> b
    java.util.HashMap c(java.lang.String) -> c
    boolean a() -> a
    boolean b() -> b
    void a(cn.sharesdk.framework.Platform$ShareParams,cn.sharesdk.framework.PlatformActionListener) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap b(java.lang.String,java.lang.String,float,float) -> b
    java.util.HashMap a(java.lang.String,float,float) -> a
    java.util.HashMap d(java.lang.String) -> d
    java.util.HashMap a(int,int,java.lang.String) -> a
    java.util.HashMap b(int,int,java.lang.String) -> b
    java.util.HashMap c(int,int,java.lang.String) -> c
    java.util.HashMap d(int,int,java.lang.String) -> d
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    void a(cn.sharesdk.sina.weibo.g,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    cn.sharesdk.framework.Platform a(cn.sharesdk.sina.weibo.g) -> a
    cn.sharesdk.framework.Platform b(cn.sharesdk.sina.weibo.g) -> b
    cn.sharesdk.framework.Platform c(cn.sharesdk.sina.weibo.g) -> c
cn.sharesdk.sina.weibo.h -> cn.sharesdk.sina.weibo.h:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.sina.weibo.g b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.sina.weibo.i -> cn.sharesdk.sina.weibo.i:
    cn.sharesdk.framework.PlatformActionListener a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.sina.weibo.g c -> c
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.sina.weibo.j -> cn.sharesdk.sina.weibo.j:
    android.net.Uri a -> a
    cn.sharesdk.sina.weibo.j b -> b
    cn.sharesdk.sina.weibo.j$a c -> c
    android.content.Context d -> d
    cn.sharesdk.sina.weibo.j a(android.content.Context) -> a
    java.lang.String a() -> a
    int b() -> b
    cn.sharesdk.sina.weibo.j$a b(android.content.Context) -> b
    cn.sharesdk.sina.weibo.j$a c(android.content.Context) -> c
    cn.sharesdk.sina.weibo.j$a d(android.content.Context) -> d
    cn.sharesdk.sina.weibo.j$a a(java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.pm.Signature[],java.lang.String) -> a
cn.sharesdk.sina.weibo.j$a -> cn.sharesdk.sina.weibo.j$a:
    java.lang.String a -> a
    int b -> b
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void a(int) -> a
    int b() -> b
    boolean c() -> c
    java.lang.String toString() -> toString
    void a(cn.sharesdk.sina.weibo.j$a,java.lang.String) -> a
    void a(cn.sharesdk.sina.weibo.j$a,int) -> a
cn.sharesdk.tencent.qq.QQ -> cn.sharesdk.tencent.qq.QQ:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    boolean c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    boolean isClientValid() -> isClientValid
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.b.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.lang.String uploadImageToFileServer(java.lang.String) -> uploadImageToFileServer
    java.util.HashMap getFollowings(int,int,java.lang.String) -> getFollowings
    java.util.HashMap getFollowers(int,int,java.lang.String) -> getFollowers
    java.util.HashMap getBilaterals(int,int,java.lang.String) -> getBilaterals
    java.util.HashMap filterFriendshipInfo(int,java.util.HashMap) -> filterFriendshipInfo
    boolean hasShareCallback() -> hasShareCallback
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qq.QQ) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.qq.QQ) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.tencent.qq.QQ) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.tencent.qq.QQ) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.tencent.qq.QQ) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.tencent.qq.QQ) -> f
    cn.sharesdk.framework.PlatformDb g(cn.sharesdk.tencent.qq.QQ) -> g
    cn.sharesdk.framework.PlatformDb h(cn.sharesdk.tencent.qq.QQ) -> h
    cn.sharesdk.framework.PlatformDb i(cn.sharesdk.tencent.qq.QQ) -> i
    void a(cn.sharesdk.tencent.qq.QQ,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener j(cn.sharesdk.tencent.qq.QQ) -> j
    cn.sharesdk.framework.PlatformActionListener k(cn.sharesdk.tencent.qq.QQ) -> k
    cn.sharesdk.framework.PlatformActionListener l(cn.sharesdk.tencent.qq.QQ) -> l
    cn.sharesdk.framework.PlatformActionListener m(cn.sharesdk.tencent.qq.QQ) -> m
    cn.sharesdk.framework.PlatformActionListener n(cn.sharesdk.tencent.qq.QQ) -> n
    cn.sharesdk.framework.PlatformActionListener o(cn.sharesdk.tencent.qq.QQ) -> o
    cn.sharesdk.framework.PlatformActionListener p(cn.sharesdk.tencent.qq.QQ) -> p
    cn.sharesdk.framework.PlatformActionListener q(cn.sharesdk.tencent.qq.QQ) -> q
cn.sharesdk.tencent.qq.QQ$ShareParams -> cn.sharesdk.tencent.qq.QQ$ShareParams:
    java.lang.String title -> title
    java.lang.String titleUrl -> titleUrl
    java.lang.String imageUrl -> imageUrl
    java.lang.String musicUrl -> musicUrl
cn.sharesdk.tencent.qq.QQClientNotExistException -> cn.sharesdk.tencent.qq.QQClientNotExistException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qq.QQWebShareAdapter -> cn.sharesdk.tencent.qq.QQWebShareAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    android.widget.RelativeLayout rlBody -> rlBody
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
cn.sharesdk.tencent.qq.TencentSSOClientNotInstalledException -> cn.sharesdk.tencent.qq.TencentSSOClientNotInstalledException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qq.a -> cn.sharesdk.tencent.qq.a:
    cn.sharesdk.tencent.qq.e a -> a
    cn.sharesdk.tencent.qq.QQ b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qq.b -> cn.sharesdk.tencent.qq.b:
    cn.sharesdk.framework.Platform$ShareParams a -> a
    cn.sharesdk.tencent.qq.QQ b -> b
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qq.c -> cn.sharesdk.tencent.qq.c:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(java.lang.String) -> a
    void a(java.util.HashMap) -> a
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
cn.sharesdk.tencent.qq.d -> cn.sharesdk.tencent.qq.d:
    java.lang.String a -> a
    cn.sharesdk.tencent.qq.c b -> b
    void run() -> run
cn.sharesdk.tencent.qq.e -> cn.sharesdk.tencent.qq.e:
    java.lang.String[] b -> b
    cn.sharesdk.tencent.qq.e c -> c
    java.lang.String d -> d
    java.lang.String[] e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    cn.sharesdk.tencent.qq.e a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    void b(java.lang.String) -> b
    java.util.HashMap c(java.lang.String) -> c
    void d(java.lang.String) -> d
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    java.lang.String b() -> b
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    java.util.HashMap e(java.lang.String) -> e
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,cn.sharesdk.framework.PlatformActionListener,boolean,int) -> a
    boolean a() -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> a
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> b
    void a(cn.sharesdk.tencent.qq.e,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.tencent.qq.f -> cn.sharesdk.tencent.qq.f:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.tencent.qq.e b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qq.g -> cn.sharesdk.tencent.qq.g:
    java.lang.String d -> d
    java.lang.String e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void a(int,int,android.content.Intent) -> a
cn.sharesdk.tencent.qq.h -> cn.sharesdk.tencent.qq.h:
    java.lang.String a -> a
    cn.sharesdk.framework.Platform b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.PlatformActionListener) -> a
    void onCreate() -> onCreate
cn.sharesdk.tencent.qq.i -> cn.sharesdk.tencent.qq.i:
    cn.sharesdk.framework.Platform a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    void onCreate() -> onCreate
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> b
    int[] a() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.app.Activity a(cn.sharesdk.tencent.qq.i) -> a
    void a(cn.sharesdk.tencent.qq.i,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
cn.sharesdk.tencent.qq.j -> cn.sharesdk.tencent.qq.j:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    cn.sharesdk.tencent.qq.i i -> i
    void run() -> run
cn.sharesdk.tencent.qq.k -> cn.sharesdk.tencent.qq.k:
    java.lang.String a -> a
    cn.sharesdk.framework.PlatformActionListener b -> b
    java.lang.String c -> c
    cn.sharesdk.tencent.qq.QQWebShareAdapter d -> d
    cn.sharesdk.framework.authorize.RegisterView e -> e
    android.webkit.WebView f -> f
    boolean g -> g
    boolean h -> h
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void b(java.lang.String) -> b
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.tencent.qq.QQWebShareAdapter b() -> b
    void onCreate() -> onCreate
    cn.sharesdk.framework.authorize.RegisterView a() -> a
    void c(java.lang.String) -> c
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onFinish() -> onFinish
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qq.k) -> a
    java.lang.String b(cn.sharesdk.tencent.qq.k) -> b
    void a(cn.sharesdk.tencent.qq.k,java.lang.String) -> a
    boolean a(cn.sharesdk.tencent.qq.k,boolean) -> a
    android.app.Activity c(cn.sharesdk.tencent.qq.k) -> c
    android.app.Activity d(cn.sharesdk.tencent.qq.k) -> d
    android.app.Activity e(cn.sharesdk.tencent.qq.k) -> e
    android.app.Activity f(cn.sharesdk.tencent.qq.k) -> f
cn.sharesdk.tencent.qq.l -> cn.sharesdk.tencent.qq.l:
    cn.sharesdk.tencent.qq.k a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.tencent.qq.m -> cn.sharesdk.tencent.qq.m:
    cn.sharesdk.tencent.qq.l a -> a
    void run() -> run
cn.sharesdk.tencent.qq.n -> cn.sharesdk.tencent.qq.n:
    cn.sharesdk.tencent.qq.k a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
cn.sharesdk.tencent.qzone.QQClientNotExistException -> cn.sharesdk.tencent.qzone.QQClientNotExistException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qzone.QZone -> cn.sharesdk.tencent.qzone.QZone:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    boolean isClientValid() -> isClientValid
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(cn.sharesdk.framework.Platform$ShareParams) -> b
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.b.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.util.HashMap getFollowings(int,int,java.lang.String) -> getFollowings
    java.util.HashMap getFollowers(int,int,java.lang.String) -> getFollowers
    java.util.HashMap getBilaterals(int,int,java.lang.String) -> getBilaterals
    java.util.HashMap filterFriendshipInfo(int,java.util.HashMap) -> filterFriendshipInfo
    boolean hasShareCallback() -> hasShareCallback
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qzone.QZone) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.qzone.QZone) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.tencent.qzone.QZone) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.tencent.qzone.QZone) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.tencent.qzone.QZone) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.tencent.qzone.QZone) -> f
    cn.sharesdk.framework.PlatformDb g(cn.sharesdk.tencent.qzone.QZone) -> g
    cn.sharesdk.framework.PlatformDb h(cn.sharesdk.tencent.qzone.QZone) -> h
    cn.sharesdk.framework.PlatformDb i(cn.sharesdk.tencent.qzone.QZone) -> i
    void a(cn.sharesdk.tencent.qzone.QZone,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener j(cn.sharesdk.tencent.qzone.QZone) -> j
    cn.sharesdk.framework.PlatformActionListener k(cn.sharesdk.tencent.qzone.QZone) -> k
    cn.sharesdk.framework.PlatformActionListener l(cn.sharesdk.tencent.qzone.QZone) -> l
    cn.sharesdk.framework.PlatformActionListener m(cn.sharesdk.tencent.qzone.QZone) -> m
    cn.sharesdk.framework.PlatformActionListener n(cn.sharesdk.tencent.qzone.QZone) -> n
    cn.sharesdk.framework.PlatformActionListener o(cn.sharesdk.tencent.qzone.QZone) -> o
    cn.sharesdk.framework.PlatformActionListener p(cn.sharesdk.tencent.qzone.QZone) -> p
    cn.sharesdk.framework.PlatformActionListener q(cn.sharesdk.tencent.qzone.QZone) -> q
cn.sharesdk.tencent.qzone.QZone$ShareParams -> cn.sharesdk.tencent.qzone.QZone$ShareParams:
    java.lang.String title -> title
    java.lang.String imageUrl -> imageUrl
    java.lang.String titleUrl -> titleUrl
    java.lang.String comment -> comment
    java.lang.String site -> site
    java.lang.String siteUrl -> siteUrl
    boolean webShare -> webShare
cn.sharesdk.tencent.qzone.QZoneWebShareAdapter -> cn.sharesdk.tencent.qzone.QZoneWebShareAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    android.widget.RelativeLayout rlBody -> rlBody
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
cn.sharesdk.tencent.qzone.TencentSSOClientNotInstalledException -> cn.sharesdk.tencent.qzone.TencentSSOClientNotInstalledException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qzone.a -> cn.sharesdk.tencent.qzone.a:
    cn.sharesdk.tencent.qzone.f a -> a
    cn.sharesdk.tencent.qzone.QZone b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qzone.b -> cn.sharesdk.tencent.qzone.b:
    cn.sharesdk.framework.PlatformActionListener a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.tencent.qzone.QZone c -> c
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qzone.c -> cn.sharesdk.tencent.qzone.c:
    cn.sharesdk.framework.Platform$ShareParams a -> a
    cn.sharesdk.tencent.qzone.QZone b -> b
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qzone.d -> cn.sharesdk.tencent.qzone.d:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(java.lang.String) -> a
    void a(java.util.HashMap) -> a
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
cn.sharesdk.tencent.qzone.e -> cn.sharesdk.tencent.qzone.e:
    java.lang.String a -> a
    cn.sharesdk.tencent.qzone.d b -> b
    void run() -> run
cn.sharesdk.tencent.qzone.f -> cn.sharesdk.tencent.qzone.f:
    java.lang.String[] b -> b
    cn.sharesdk.tencent.qzone.f c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    cn.sharesdk.framework.a.a g -> g
    java.lang.String[] h -> h
    cn.sharesdk.tencent.qzone.f a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    java.lang.String b() -> b
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    java.util.HashMap d(java.lang.String) -> d
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> a
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> b
    boolean a() -> a
    java.util.HashMap a(java.lang.String,java.lang.String) -> a
    java.util.HashMap e(java.lang.String) -> e
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    java.util.HashMap b(java.lang.String,java.lang.String) -> b
    void a(cn.sharesdk.tencent.qzone.f,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.tencent.qzone.g -> cn.sharesdk.tencent.qzone.g:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.tencent.qzone.f b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qzone.h -> cn.sharesdk.tencent.qzone.h:
    java.lang.String d -> d
    java.lang.String e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void a(int,int,android.content.Intent) -> a
cn.sharesdk.tencent.qzone.i -> cn.sharesdk.tencent.qzone.i:
    java.lang.String a -> a
    boolean b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    cn.sharesdk.framework.authorize.RegisterView d -> d
    android.webkit.WebView e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    cn.sharesdk.tencent.qzone.QZoneWebShareAdapter i -> i
    void a(java.lang.String,boolean) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.tencent.qzone.QZoneWebShareAdapter b() -> b
    void onCreate() -> onCreate
    void c() -> c
    void d() -> d
    cn.sharesdk.framework.authorize.RegisterView a() -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onFinish() -> onFinish
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qzone.i) -> a
    java.lang.String b(cn.sharesdk.tencent.qzone.i) -> b
    void a(cn.sharesdk.tencent.qzone.i,java.lang.String) -> a
    void b(cn.sharesdk.tencent.qzone.i,java.lang.String) -> b
cn.sharesdk.tencent.qzone.j -> cn.sharesdk.tencent.qzone.j:
    cn.sharesdk.tencent.qzone.i a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.tencent.qzone.k -> cn.sharesdk.tencent.qzone.k:
    cn.sharesdk.tencent.qzone.j a -> a
    void run() -> run
cn.sharesdk.tencent.qzone.l -> cn.sharesdk.tencent.qzone.l:
    cn.sharesdk.tencent.qzone.i a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
cn.sharesdk.tencent.weibo.TencentWeibo -> cn.sharesdk.tencent.weibo.TencentWeibo:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    boolean isClientValid() -> isClientValid
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.b.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.util.HashMap getFollowings(int,int,java.lang.String) -> getFollowings
    java.util.HashMap getFollowers(int,int,java.lang.String) -> getFollowers
    java.util.HashMap getBilaterals(int,int,java.lang.String) -> getBilaterals
    java.util.HashMap filterFriendshipInfo(int,java.util.HashMap) -> filterFriendshipInfo
    boolean hasShareCallback() -> hasShareCallback
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.weibo.TencentWeibo) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.weibo.TencentWeibo) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.tencent.weibo.TencentWeibo) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.tencent.weibo.TencentWeibo) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.tencent.weibo.TencentWeibo) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.tencent.weibo.TencentWeibo) -> f
    cn.sharesdk.framework.PlatformDb g(cn.sharesdk.tencent.weibo.TencentWeibo) -> g
    cn.sharesdk.framework.PlatformDb h(cn.sharesdk.tencent.weibo.TencentWeibo) -> h
    cn.sharesdk.framework.PlatformDb i(cn.sharesdk.tencent.weibo.TencentWeibo) -> i
    cn.sharesdk.framework.PlatformDb j(cn.sharesdk.tencent.weibo.TencentWeibo) -> j
    cn.sharesdk.framework.PlatformDb k(cn.sharesdk.tencent.weibo.TencentWeibo) -> k
    cn.sharesdk.framework.PlatformDb l(cn.sharesdk.tencent.weibo.TencentWeibo) -> l
    cn.sharesdk.framework.PlatformDb m(cn.sharesdk.tencent.weibo.TencentWeibo) -> m
    cn.sharesdk.framework.PlatformDb n(cn.sharesdk.tencent.weibo.TencentWeibo) -> n
    void a(cn.sharesdk.tencent.weibo.TencentWeibo,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener o(cn.sharesdk.tencent.weibo.TencentWeibo) -> o
    cn.sharesdk.framework.PlatformActionListener p(cn.sharesdk.tencent.weibo.TencentWeibo) -> p
cn.sharesdk.tencent.weibo.TencentWeibo$ShareParams -> cn.sharesdk.tencent.weibo.TencentWeibo$ShareParams:
    float longitude -> longitude
    float latitude -> latitude
    java.lang.String imageUrl -> imageUrl
cn.sharesdk.tencent.weibo.a -> cn.sharesdk.tencent.weibo.a:
    java.lang.String a(byte[]) -> a
    char[] a(byte[],int) -> a
    char a(int) -> a
cn.sharesdk.tencent.weibo.b -> cn.sharesdk.tencent.weibo.b:
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    byte[] h -> h
    boolean i -> i
    int j -> j
    java.util.Random k -> k
    long a(byte[],int,int) -> a
    byte[] a(byte[],int,int,byte[]) -> a
    byte[] b(byte[],int,int,byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    byte[] b(byte[]) -> b
    void a() -> a
    boolean b(byte[],int,int) -> b
    int b() -> b
    byte[] a(byte[],byte[],int) -> a
    byte[] a(int) -> a
cn.sharesdk.tencent.weibo.c -> cn.sharesdk.tencent.weibo.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    long h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
cn.sharesdk.tencent.weibo.d -> cn.sharesdk.tencent.weibo.d:
    cn.sharesdk.tencent.weibo.h a -> a
    cn.sharesdk.tencent.weibo.TencentWeibo b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.weibo.e -> cn.sharesdk.tencent.weibo.e:
    int d -> d
    boolean e -> e
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void a(java.lang.String) -> a
    cn.sharesdk.framework.authorize.g a(cn.sharesdk.tencent.weibo.e) -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b(cn.sharesdk.tencent.weibo.e) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c(cn.sharesdk.tencent.weibo.e) -> c
    cn.sharesdk.framework.authorize.AuthorizeListener d(cn.sharesdk.tencent.weibo.e) -> d
    cn.sharesdk.framework.authorize.AuthorizeListener e(cn.sharesdk.tencent.weibo.e) -> e
    cn.sharesdk.framework.authorize.AuthorizeListener f(cn.sharesdk.tencent.weibo.e) -> f
    cn.sharesdk.framework.authorize.AuthorizeListener g(cn.sharesdk.tencent.weibo.e) -> g
    cn.sharesdk.framework.authorize.AuthorizeListener h(cn.sharesdk.tencent.weibo.e) -> h
    cn.sharesdk.framework.authorize.AuthorizeListener i(cn.sharesdk.tencent.weibo.e) -> i
cn.sharesdk.tencent.weibo.f -> cn.sharesdk.tencent.weibo.f:
    android.os.Bundle a -> a
    cn.sharesdk.tencent.weibo.e b -> b
    void run() -> run
cn.sharesdk.tencent.weibo.g -> cn.sharesdk.tencent.weibo.g:
    cn.sharesdk.tencent.weibo.c d -> d
    void a(cn.sharesdk.tencent.weibo.c) -> a
    void a() -> a
    int a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    byte[] a(long,long) -> a
    void a(int,int,android.content.Intent) -> a
    void a(android.os.Bundle) -> a
    void a(byte[]) -> a
    void b(android.os.Bundle) -> b
    cn.sharesdk.framework.authorize.e a(cn.sharesdk.tencent.weibo.g) -> a
    void a(cn.sharesdk.tencent.weibo.g,android.os.Bundle) -> a
    void b(cn.sharesdk.tencent.weibo.g,android.os.Bundle) -> b
cn.sharesdk.tencent.weibo.g$a -> cn.sharesdk.tencent.weibo.g$a:
    cn.sharesdk.tencent.weibo.g a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.sharesdk.tencent.weibo.h -> cn.sharesdk.tencent.weibo.h:
    cn.sharesdk.tencent.weibo.h b -> b
    cn.sharesdk.tencent.weibo.c c -> c
    cn.sharesdk.framework.a.a d -> d
    cn.sharesdk.tencent.weibo.h a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    android.os.Bundle b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.util.ArrayList) -> a
    java.util.HashMap c(java.lang.String) -> c
    java.util.HashMap a(java.lang.String,float,float) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap b(java.lang.String,java.lang.String,float,float) -> b
    java.lang.String d(java.lang.String) -> d
    java.util.HashMap e(java.lang.String) -> e
    java.util.HashMap a(int,int,java.lang.String) -> a
    java.util.HashMap b(int,int,java.lang.String) -> b
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    boolean a() -> a
    void a(cn.sharesdk.tencent.weibo.h,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    cn.sharesdk.tencent.weibo.c a(cn.sharesdk.tencent.weibo.h) -> a
cn.sharesdk.tencent.weibo.i -> cn.sharesdk.tencent.weibo.i:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.tencent.weibo.h b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.friends.Wechat -> cn.sharesdk.wechat.friends.Wechat:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean isValid() -> isValid
    boolean isClientValid() -> isClientValid
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.b.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.util.HashMap getFollowings(int,int,java.lang.String) -> getFollowings
    java.util.HashMap getFollowers(int,int,java.lang.String) -> getFollowers
    java.util.HashMap getBilaterals(int,int,java.lang.String) -> getBilaterals
    java.util.HashMap filterFriendshipInfo(int,java.util.HashMap) -> filterFriendshipInfo
    boolean hasShareCallback() -> hasShareCallback
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.friends.Wechat) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.friends.Wechat) -> b
    void a(cn.sharesdk.wechat.friends.Wechat,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.friends.Wechat) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.friends.Wechat) -> d
cn.sharesdk.wechat.friends.Wechat$ShareParams -> cn.sharesdk.wechat.friends.Wechat$ShareParams:
cn.sharesdk.wechat.friends.a -> cn.sharesdk.wechat.friends.a:
    cn.sharesdk.wechat.friends.Wechat a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.moments.WechatMoments -> cn.sharesdk.wechat.moments.WechatMoments:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    boolean isValid() -> isValid
    boolean isClientValid() -> isClientValid
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.b.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.util.HashMap getFollowings(int,int,java.lang.String) -> getFollowings
    java.util.HashMap getFollowers(int,int,java.lang.String) -> getFollowers
    java.util.HashMap getBilaterals(int,int,java.lang.String) -> getBilaterals
    java.util.HashMap filterFriendshipInfo(int,java.util.HashMap) -> filterFriendshipInfo
    boolean hasShareCallback() -> hasShareCallback
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.moments.WechatMoments) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.moments.WechatMoments) -> b
    void a(cn.sharesdk.wechat.moments.WechatMoments,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.moments.WechatMoments) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.moments.WechatMoments) -> d
cn.sharesdk.wechat.moments.WechatMoments$ShareParams -> cn.sharesdk.wechat.moments.WechatMoments$ShareParams:
cn.sharesdk.wechat.moments.a -> cn.sharesdk.wechat.moments.a:
    cn.sharesdk.wechat.moments.WechatMoments a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.utils.WXAppExtendObject -> cn.sharesdk.wechat.utils.WXAppExtendObject:
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXEmojiObject -> cn.sharesdk.wechat.utils.WXEmojiObject:
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXFileObject -> cn.sharesdk.wechat.utils.WXFileObject:
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXImageObject -> cn.sharesdk.wechat.utils.WXImageObject:
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    java.lang.String imageUrl -> imageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXMediaMessage -> cn.sharesdk.wechat.utils.WXMediaMessage:
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject -> cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_URL -> TYPE_URL
    int TYPE_FILE -> TYPE_FILE
    int TYPE_APPDATA -> TYPE_APPDATA
    int TYPE_EMOJI -> TYPE_EMOJI
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXMediaMessage$a -> cn.sharesdk.wechat.utils.WXMediaMessage$a:
    android.os.Bundle a(cn.sharesdk.wechat.utils.WXMediaMessage) -> a
    cn.sharesdk.wechat.utils.WXMediaMessage a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WXMusicObject -> cn.sharesdk.wechat.utils.WXMusicObject:
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXTextObject -> cn.sharesdk.wechat.utils.WXTextObject:
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXVideoObject -> cn.sharesdk.wechat.utils.WXVideoObject:
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXWebpageObject -> cn.sharesdk.wechat.utils.WXWebpageObject:
    java.lang.String webpageUrl -> webpageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WechatClientNotExistException -> cn.sharesdk.wechat.utils.WechatClientNotExistException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.WechatFavoriteNotSupportedException -> cn.sharesdk.wechat.utils.WechatFavoriteNotSupportedException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.WechatHandlerActivity -> cn.sharesdk.wechat.utils.WechatHandlerActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onGetMessageFromWXReq
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onShowMessageFromWXReq
cn.sharesdk.wechat.utils.WechatHelper -> cn.sharesdk.wechat.utils.WechatHelper:
    boolean a -> a
    cn.sharesdk.wechat.utils.WechatHelper b -> b
    cn.sharesdk.wechat.utils.j c -> c
    cn.sharesdk.wechat.utils.k d -> d
    cn.sharesdk.wechat.utils.WechatHelper a() -> a
    void a(cn.sharesdk.wechat.utils.k) -> a
    boolean b() -> b
    void a(cn.sharesdk.wechat.utils.k,cn.sharesdk.framework.Platform$ShareParams,cn.sharesdk.framework.PlatformActionListener) -> a
    void b(cn.sharesdk.wechat.utils.k) -> b
    void a(java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> a
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> b
    void c(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> c
    void c(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> c
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> b
    byte[] a(java.lang.String) -> a
    int a(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
    byte[] b(android.content.Context,java.lang.String) -> b
    byte[] a(android.content.Context,byte[]) -> a
    byte[] a(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity) -> a
    boolean c() -> c
    boolean d() -> d
    void a(cn.sharesdk.wechat.utils.WXMediaMessage,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
cn.sharesdk.wechat.utils.WechatHelper$ShareParams -> cn.sharesdk.wechat.utils.WechatHelper$ShareParams:
    int shareType -> shareType
    java.lang.String title -> title
    java.lang.String musicUrl -> musicUrl
    java.lang.String url -> url
    java.lang.String imageUrl -> imageUrl
    android.graphics.Bitmap imageData -> imageData
    int scene -> scene
    java.lang.String filePath -> filePath
    java.lang.String extInfo -> extInfo
cn.sharesdk.wechat.utils.WechatResp -> cn.sharesdk.wechat.utils.WechatResp:
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int a() -> a
    void b(android.os.Bundle) -> b
    void a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WechatResp$ErrCode -> cn.sharesdk.wechat.utils.WechatResp$ErrCode:
    int ERR_OK -> ERR_OK
    int ERR_COMM -> ERR_COMM
    int ERR_USER_CANCEL -> ERR_USER_CANCEL
    int ERR_SENT_FAILED -> ERR_SENT_FAILED
    int ERR_AUTH_DENIED -> ERR_AUTH_DENIED
    int ERR_UNSUPPORT -> ERR_UNSUPPORT
cn.sharesdk.wechat.utils.WechatTimelineNotSupportedException -> cn.sharesdk.wechat.utils.WechatTimelineNotSupportedException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.a -> cn.sharesdk.wechat.utils.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.sharesdk.wechat.utils.b -> cn.sharesdk.wechat.utils.b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.c -> cn.sharesdk.wechat.utils.c:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.d -> cn.sharesdk.wechat.utils.d:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int b -> b
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.sharesdk.wechat.utils.e -> cn.sharesdk.wechat.utils.e:
    int a() -> a
cn.sharesdk.wechat.utils.f -> cn.sharesdk.wechat.utils.f:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.g -> cn.sharesdk.wechat.utils.g:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.a.a c -> c
    cn.sharesdk.framework.Platform d -> d
    int e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a(android.os.Bundle,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(java.lang.String,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    cn.sharesdk.framework.Platform a(cn.sharesdk.wechat.utils.g) -> a
    int b(cn.sharesdk.wechat.utils.g) -> b
    cn.sharesdk.framework.a.a c(cn.sharesdk.wechat.utils.g) -> c
    java.lang.String d(cn.sharesdk.wechat.utils.g) -> d
    java.lang.String e(cn.sharesdk.wechat.utils.g) -> e
    void a(cn.sharesdk.wechat.utils.g,java.lang.String) -> a
cn.sharesdk.wechat.utils.h -> cn.sharesdk.wechat.utils.h:
    java.lang.String a -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    cn.sharesdk.wechat.utils.g c -> c
    void run() -> run
cn.sharesdk.wechat.utils.i -> cn.sharesdk.wechat.utils.i:
    cn.sharesdk.framework.PlatformActionListener a -> a
    cn.sharesdk.wechat.utils.g b -> b
    void run() -> run
cn.sharesdk.wechat.utils.j -> cn.sharesdk.wechat.utils.j:
    android.content.Context a -> a
    java.lang.String b -> b
    boolean a(android.content.Context,java.lang.String) -> a
    void a(cn.sharesdk.wechat.utils.m) -> a
    boolean a() -> a
    boolean b() -> b
    boolean d() -> d
    byte[] a(java.lang.String,java.lang.String,int) -> a
    java.lang.String a(java.lang.String) -> a
    boolean c() -> c
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity,cn.sharesdk.wechat.utils.k) -> a
    boolean a(byte[],byte[]) -> a
cn.sharesdk.wechat.utils.k -> cn.sharesdk.wechat.utils.k:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    cn.sharesdk.framework.authorize.AuthorizeListener d -> d
    cn.sharesdk.wechat.utils.g e -> e
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(cn.sharesdk.framework.Platform$ShareParams,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(cn.sharesdk.wechat.utils.g) -> a
    void a(cn.sharesdk.wechat.utils.WechatResp) -> a
    cn.sharesdk.framework.Platform$ShareParams a() -> a
    cn.sharesdk.framework.Platform b() -> b
    cn.sharesdk.framework.PlatformActionListener c() -> c
cn.sharesdk.wechat.utils.l -> cn.sharesdk.wechat.utils.l:
    int a -> a
    com.mob.tools.utils.DeviceHelper b -> b
    java.lang.String c -> c
    cn.sharesdk.framework.PlatformActionListener d -> d
    cn.sharesdk.framework.Platform e -> e
    java.util.HashMap f -> f
    cn.sharesdk.wechat.utils.WechatHelper g -> g
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.wechat.utils.m -> cn.sharesdk.wechat.utils.m:
    java.lang.String c -> c
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.smssdk.DefaultOnSendMessageHandler -> cn.smssdk.DefaultOnSendMessageHandler:
    boolean onSendMessage(java.lang.String,java.lang.String) -> onSendMessage
cn.smssdk.EventHandler -> cn.smssdk.EventHandler:
    void onRegister() -> onRegister
    void beforeEvent(int,java.lang.Object) -> beforeEvent
    void afterEvent(int,int,java.lang.Object) -> afterEvent
    void onUnregister() -> onUnregister
cn.smssdk.OnSendMessageHandler -> cn.smssdk.OnSendMessageHandler:
    boolean onSendMessage(java.lang.String,java.lang.String) -> onSendMessage
cn.smssdk.R -> cn.smssdk.R:
cn.smssdk.R$array -> cn.smssdk.R$array:
    int smssdk_country_group_a -> smssdk_country_group_a
    int smssdk_country_group_b -> smssdk_country_group_b
    int smssdk_country_group_c -> smssdk_country_group_c
    int smssdk_country_group_d -> smssdk_country_group_d
    int smssdk_country_group_e -> smssdk_country_group_e
    int smssdk_country_group_f -> smssdk_country_group_f
    int smssdk_country_group_g -> smssdk_country_group_g
    int smssdk_country_group_h -> smssdk_country_group_h
    int smssdk_country_group_i -> smssdk_country_group_i
    int smssdk_country_group_j -> smssdk_country_group_j
    int smssdk_country_group_k -> smssdk_country_group_k
    int smssdk_country_group_l -> smssdk_country_group_l
    int smssdk_country_group_m -> smssdk_country_group_m
    int smssdk_country_group_n -> smssdk_country_group_n
    int smssdk_country_group_o -> smssdk_country_group_o
    int smssdk_country_group_p -> smssdk_country_group_p
    int smssdk_country_group_q -> smssdk_country_group_q
    int smssdk_country_group_r -> smssdk_country_group_r
    int smssdk_country_group_s -> smssdk_country_group_s
    int smssdk_country_group_t -> smssdk_country_group_t
    int smssdk_country_group_u -> smssdk_country_group_u
    int smssdk_country_group_v -> smssdk_country_group_v
    int smssdk_country_group_w -> smssdk_country_group_w
    int smssdk_country_group_x -> smssdk_country_group_x
    int smssdk_country_group_y -> smssdk_country_group_y
    int smssdk_country_group_z -> smssdk_country_group_z
cn.smssdk.R$raw -> cn.smssdk.R$raw:
    int libs -> libs
cn.smssdk.R$string -> cn.smssdk.R$string:
    int smssdk_error_desc_400 -> smssdk_error_desc_400
    int smssdk_error_desc_401 -> smssdk_error_desc_401
    int smssdk_error_desc_402 -> smssdk_error_desc_402
    int smssdk_error_desc_403 -> smssdk_error_desc_403
    int smssdk_error_desc_404 -> smssdk_error_desc_404
    int smssdk_error_desc_405 -> smssdk_error_desc_405
    int smssdk_error_desc_406 -> smssdk_error_desc_406
    int smssdk_error_desc_407 -> smssdk_error_desc_407
    int smssdk_error_desc_408 -> smssdk_error_desc_408
    int smssdk_error_desc_418 -> smssdk_error_desc_418
    int smssdk_error_desc_419 -> smssdk_error_desc_419
    int smssdk_error_desc_450 -> smssdk_error_desc_450
    int smssdk_error_desc_451 -> smssdk_error_desc_451
    int smssdk_error_desc_452 -> smssdk_error_desc_452
    int smssdk_error_desc_453 -> smssdk_error_desc_453
    int smssdk_error_desc_454 -> smssdk_error_desc_454
    int smssdk_error_desc_455 -> smssdk_error_desc_455
    int smssdk_error_desc_456 -> smssdk_error_desc_456
    int smssdk_error_desc_457 -> smssdk_error_desc_457
    int smssdk_error_desc_458 -> smssdk_error_desc_458
    int smssdk_error_desc_459 -> smssdk_error_desc_459
    int smssdk_error_desc_460 -> smssdk_error_desc_460
    int smssdk_error_desc_461 -> smssdk_error_desc_461
    int smssdk_error_desc_462 -> smssdk_error_desc_462
    int smssdk_error_desc_463 -> smssdk_error_desc_463
    int smssdk_error_desc_464 -> smssdk_error_desc_464
    int smssdk_error_desc_465 -> smssdk_error_desc_465
    int smssdk_error_desc_466 -> smssdk_error_desc_466
    int smssdk_error_desc_467 -> smssdk_error_desc_467
    int smssdk_error_desc_468 -> smssdk_error_desc_468
    int smssdk_error_desc_469 -> smssdk_error_desc_469
    int smssdk_error_desc_470 -> smssdk_error_desc_470
    int smssdk_error_desc_471 -> smssdk_error_desc_471
    int smssdk_error_desc_472 -> smssdk_error_desc_472
    int smssdk_error_desc_473 -> smssdk_error_desc_473
    int smssdk_error_desc_474 -> smssdk_error_desc_474
    int smssdk_error_desc_475 -> smssdk_error_desc_475
    int smssdk_error_desc_476 -> smssdk_error_desc_476
    int smssdk_error_desc_477 -> smssdk_error_desc_477
    int smssdk_error_desc_478 -> smssdk_error_desc_478
    int smssdk_error_desc_500 -> smssdk_error_desc_500
    int smssdk_error_desc_600 -> smssdk_error_desc_600
    int smssdk_error_desc_601 -> smssdk_error_desc_601
    int smssdk_error_desc_602 -> smssdk_error_desc_602
    int smssdk_error_desc_603 -> smssdk_error_desc_603
    int smssdk_error_desc_604 -> smssdk_error_desc_604
    int smssdk_error_desc_server_busy -> smssdk_error_desc_server_busy
    int smssdk_error_detail_400 -> smssdk_error_detail_400
    int smssdk_error_detail_401 -> smssdk_error_detail_401
    int smssdk_error_detail_402 -> smssdk_error_detail_402
    int smssdk_error_detail_403 -> smssdk_error_detail_403
    int smssdk_error_detail_404 -> smssdk_error_detail_404
    int smssdk_error_detail_405 -> smssdk_error_detail_405
    int smssdk_error_detail_406 -> smssdk_error_detail_406
    int smssdk_error_detail_407 -> smssdk_error_detail_407
    int smssdk_error_detail_408 -> smssdk_error_detail_408
    int smssdk_error_detail_418 -> smssdk_error_detail_418
    int smssdk_error_detail_419 -> smssdk_error_detail_419
    int smssdk_error_detail_450 -> smssdk_error_detail_450
    int smssdk_error_detail_451 -> smssdk_error_detail_451
    int smssdk_error_detail_452 -> smssdk_error_detail_452
    int smssdk_error_detail_453 -> smssdk_error_detail_453
    int smssdk_error_detail_454 -> smssdk_error_detail_454
    int smssdk_error_detail_455 -> smssdk_error_detail_455
    int smssdk_error_detail_456 -> smssdk_error_detail_456
    int smssdk_error_detail_457 -> smssdk_error_detail_457
    int smssdk_error_detail_458 -> smssdk_error_detail_458
    int smssdk_error_detail_459 -> smssdk_error_detail_459
    int smssdk_error_detail_460 -> smssdk_error_detail_460
    int smssdk_error_detail_461 -> smssdk_error_detail_461
    int smssdk_error_detail_462 -> smssdk_error_detail_462
    int smssdk_error_detail_463 -> smssdk_error_detail_463
    int smssdk_error_detail_464 -> smssdk_error_detail_464
    int smssdk_error_detail_465 -> smssdk_error_detail_465
    int smssdk_error_detail_466 -> smssdk_error_detail_466
    int smssdk_error_detail_467 -> smssdk_error_detail_467
    int smssdk_error_detail_468 -> smssdk_error_detail_468
    int smssdk_error_detail_469 -> smssdk_error_detail_469
    int smssdk_error_detail_470 -> smssdk_error_detail_470
    int smssdk_error_detail_471 -> smssdk_error_detail_471
    int smssdk_error_detail_472 -> smssdk_error_detail_472
    int smssdk_error_detail_473 -> smssdk_error_detail_473
    int smssdk_error_detail_474 -> smssdk_error_detail_474
    int smssdk_error_detail_475 -> smssdk_error_detail_475
    int smssdk_error_detail_476 -> smssdk_error_detail_476
    int smssdk_error_detail_477 -> smssdk_error_detail_477
    int smssdk_error_detail_478 -> smssdk_error_detail_478
    int smssdk_error_detail_500 -> smssdk_error_detail_500
    int smssdk_error_detail_600 -> smssdk_error_detail_600
    int smssdk_error_detail_601 -> smssdk_error_detail_601
    int smssdk_error_detail_602 -> smssdk_error_detail_602
    int smssdk_error_detail_603 -> smssdk_error_detail_603
    int smssdk_error_detail_604 -> smssdk_error_detail_604
cn.smssdk.ReflectableEnventHandler -> cn.smssdk.ReflectableEnventHandler:
    int a -> a
    android.os.Handler$Callback b -> b
    int c -> c
    android.os.Handler$Callback d -> d
    int e -> e
    android.os.Handler$Callback f -> f
    int g -> g
    android.os.Handler$Callback h -> h
    void setOnRegisterCallback(int,android.os.Handler$Callback) -> setOnRegisterCallback
    void onRegister() -> onRegister
    void setBeforeEventCallback(int,android.os.Handler$Callback) -> setBeforeEventCallback
    void beforeEvent(int,java.lang.Object) -> beforeEvent
    void setAfterEventCallback(int,android.os.Handler$Callback) -> setAfterEventCallback
    void afterEvent(int,int,java.lang.Object) -> afterEvent
    void setOnUnregisterCallback(int,android.os.Handler$Callback) -> setOnUnregisterCallback
    void onUnregister() -> onUnregister
cn.smssdk.SMSSDK -> cn.smssdk.SMSSDK:
    int RESULT_COMPLETE -> RESULT_COMPLETE
    int RESULT_ERROR -> RESULT_ERROR
    int EVENT_GET_SUPPORTED_COUNTRIES -> EVENT_GET_SUPPORTED_COUNTRIES
    int EVENT_GET_VERIFICATION_CODE -> EVENT_GET_VERIFICATION_CODE
    int EVENT_SUBMIT_VERIFICATION_CODE -> EVENT_SUBMIT_VERIFICATION_CODE
    int EVENT_GET_CONTACTS -> EVENT_GET_CONTACTS
    int EVENT_SUBMIT_USER_INFO -> EVENT_SUBMIT_USER_INFO
    int EVENT_GET_FRIENDS_IN_APP -> EVENT_GET_FRIENDS_IN_APP
    int EVENT_GET_NEW_FRIENDS_COUNT -> EVENT_GET_NEW_FRIENDS_COUNT
    int EVENT_GET_VOICE_VERIFICATION_CODE -> EVENT_GET_VOICE_VERIFICATION_CODE
    cn.smssdk.a a -> a
    void initSDK(android.content.Context,java.lang.String,java.lang.String) -> initSDK
    void initSDK(android.content.Context,java.lang.String,java.lang.String,boolean) -> initSDK
    java.lang.String getVersion() -> getVersion
    void registerEventHandler(cn.smssdk.EventHandler) -> registerEventHandler
    void unregisterEventHandler(cn.smssdk.EventHandler) -> unregisterEventHandler
    void unregisterAllEventHandler() -> unregisterAllEventHandler
    void a() -> a
    void getSupportedCountries() -> getSupportedCountries
    void getVerificationCode(java.lang.String,java.lang.String) -> getVerificationCode
    void getVerificationCode(java.lang.String,java.lang.String,cn.smssdk.OnSendMessageHandler) -> getVerificationCode
    void getVerificationCode(java.lang.String,java.lang.String,java.lang.String,cn.smssdk.OnSendMessageHandler) -> getVerificationCode
    void getVerificationCode(java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.smssdk.OnSendMessageHandler) -> getVerificationCode
    void submitVerificationCode(java.lang.String,java.lang.String,java.lang.String) -> submitVerificationCode
    void getContacts(boolean) -> getContacts
    void submitUserInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> submitUserInfo
    void getFriendsInApp() -> getFriendsInApp
    void getNewFriendsCount() -> getNewFriendsCount
    java.util.HashMap getGroupedCountryList() -> getGroupedCountryList
    java.lang.String[] getCountry(java.lang.String) -> getCountry
    java.lang.String[] getCountryByMCC(java.lang.String) -> getCountryByMCC
    void readVerificationCode(android.telephony.SmsMessage,cn.smssdk.SMSSDK$VerifyCodeReadListener) -> readVerificationCode
    void getVoiceVerifyCode(java.lang.String,java.lang.String) -> getVoiceVerifyCode
    void getVoiceVerifyCode(java.lang.String,java.lang.String,java.lang.String) -> getVoiceVerifyCode
cn.smssdk.SMSSDK$VerifyCodeReadListener -> cn.smssdk.SMSSDK$VerifyCodeReadListener:
    void onReadVerifyCode(java.lang.String) -> onReadVerifyCode
cn.smssdk.UserInterruptException -> cn.smssdk.UserInterruptException:
    long serialVersionUID -> serialVersionUID
cn.smssdk.a -> cn.smssdk.a:
    android.content.Context a -> a
    java.util.HashSet b -> b
    cn.smssdk.net.e c -> c
    cn.smssdk.contact.d d -> d
    cn.smssdk.a.a e -> e
    cn.smssdk.b.a f -> f
    java.lang.String g -> g
    java.util.HashMap h -> h
    java.util.HashMap i -> i
    java.util.ArrayList j -> j
    java.lang.String k -> k
    void a() -> a
    void a(cn.smssdk.EventHandler) -> a
    void b(cn.smssdk.EventHandler) -> b
    void b() -> b
    java.lang.String a(int) -> a
    void a(int,java.lang.Object) -> a
    void b(int,java.lang.Object) -> b
    void a(int,int,java.lang.Object) -> a
    void a(java.lang.Object) -> a
    void b(java.lang.Object) -> b
    void c(java.lang.Object) -> c
    void e() -> e
    void d(java.lang.Object) -> d
    void f() -> f
    void g() -> g
    void onContactChange(boolean) -> onContactChange
    java.util.HashMap c() -> c
    java.lang.String[] a(java.lang.String) -> a
    java.lang.String[] b(java.lang.String) -> b
    void a(android.telephony.SmsMessage,cn.smssdk.SMSSDK$VerifyCodeReadListener) -> a
    void e(java.lang.Object) -> e
    void a(android.content.Context,java.lang.String,int) -> a
    void d() -> d
    boolean a(java.lang.String,java.lang.String) -> a
    java.util.ArrayList h() -> h
    java.util.HashSet a(cn.smssdk.a) -> a
    void a(cn.smssdk.a,int,java.lang.Object) -> a
    void a(cn.smssdk.a,int,int,java.lang.Object) -> a
    cn.smssdk.a.a b(cn.smssdk.a) -> b
cn.smssdk.a.a -> cn.smssdk.a.a:
    cn.smssdk.a.a a -> a
    cn.smssdk.net.e b -> b
    cn.smssdk.utils.SPHelper c -> c
    cn.smssdk.a.g d -> d
    cn.smssdk.contact.d e -> e
    cn.smssdk.a.a a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.os.Handler$Callback) -> a
    boolean a() -> a
    java.util.ArrayList a(java.util.ArrayList) -> a
    void b(android.os.Handler$Callback) -> b
    void a(int,android.os.Handler$Callback) -> a
    void c(android.os.Handler$Callback) -> c
    cn.smssdk.net.e a(cn.smssdk.a.a) -> a
    cn.smssdk.utils.SPHelper b(cn.smssdk.a.a) -> b
    cn.smssdk.contact.d c(cn.smssdk.a.a) -> c
cn.smssdk.a.b -> cn.smssdk.a.b:
    android.os.Handler$Callback a -> a
    cn.smssdk.a.a b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.a.c -> cn.smssdk.a.c:
    android.os.Handler$Callback a -> a
    cn.smssdk.a.a b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.a.d -> cn.smssdk.a.d:
    android.os.Message a -> a
    android.os.Handler$Callback b -> b
    cn.smssdk.a.a c -> c
    void run() -> run
cn.smssdk.a.e -> cn.smssdk.a.e:
    cn.smssdk.a.d a -> a
    void run() -> run
cn.smssdk.a.f -> cn.smssdk.a.f:
    android.os.Handler$Callback a -> a
    android.os.Message b -> b
    cn.smssdk.a.a c -> c
    void run() -> run
cn.smssdk.a.g -> cn.smssdk.a.g:
    android.os.Handler a -> a
    cn.smssdk.contact.d b -> b
    cn.smssdk.utils.SPHelper c -> c
    cn.smssdk.net.e d -> d
    cn.smssdk.a.a e -> e
    int f -> f
    android.os.Handler$Callback g -> g
    void a(int,android.os.Handler$Callback) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    int a() -> a
    android.os.Handler$Callback a(cn.smssdk.a.g) -> a
    int b(cn.smssdk.a.g) -> b
cn.smssdk.a.h -> cn.smssdk.a.h:
    cn.smssdk.a.g a -> a
    void run() -> run
cn.smssdk.b -> cn.smssdk.b:
    int a -> a
    java.lang.Object b -> b
    cn.smssdk.a c -> c
    void run() -> run
cn.smssdk.b.a -> cn.smssdk.b.a:
    android.content.Context a -> a
    java.lang.String b -> b
    cn.smssdk.utils.SPHelper c -> c
    java.util.HashMap d -> d
    cn.smssdk.b.a e -> e
    cn.smssdk.SMSSDK$VerifyCodeReadListener f -> f
    java.lang.String g -> g
    cn.smssdk.b.a a(android.content.Context,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(cn.smssdk.SMSSDK$VerifyCodeReadListener) -> a
    boolean a(android.telephony.SmsMessage) -> a
    boolean b(android.telephony.SmsMessage) -> b
    void a() -> a
    java.lang.String a(java.lang.String) -> a
    int b(java.lang.String) -> b
    void a(cn.smssdk.b.a) -> a
    java.lang.String b(cn.smssdk.b.a) -> b
cn.smssdk.b.b -> cn.smssdk.b.b:
    cn.smssdk.b.a a -> a
    void run() -> run
cn.smssdk.b.c -> cn.smssdk.b.c:
    cn.smssdk.b.a a -> a
    java.lang.String getProductTag() -> getProductTag
    java.lang.String getProductAppkey() -> getProductAppkey
    int getSdkver() -> getSdkver
cn.smssdk.c -> cn.smssdk.c:
    cn.smssdk.a a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.contact.OnContactChangeListener -> cn.smssdk.contact.OnContactChangeListener:
    void onContactChange(boolean) -> onContactChange
cn.smssdk.contact.a -> cn.smssdk.contact.a:
    cn.smssdk.contact.a a -> a
    java.util.ArrayList b -> b
    java.util.ArrayList c -> c
    android.widget.TextView d -> d
    android.widget.TextView e -> e
    java.util.HashMap f -> f
    boolean a() -> a
    void a(java.lang.Runnable,java.lang.Runnable) -> a
    void onCreate() -> onCreate
    android.widget.LinearLayout b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    android.graphics.drawable.Drawable f() -> f
    java.lang.String g() -> g
    android.graphics.drawable.Drawable h() -> h
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    android.app.Activity a(cn.smssdk.contact.a) -> a
    android.app.Activity b(cn.smssdk.contact.a) -> b
    android.app.Activity c(cn.smssdk.contact.a) -> c
cn.smssdk.contact.a.a -> cn.smssdk.contact.a.a:
    java.lang.String a -> a
    cn.smssdk.contact.a.h b -> b
    cn.smssdk.contact.a.i c -> c
    cn.smssdk.contact.a.e d -> d
    cn.smssdk.contact.a.k e -> e
    java.util.ArrayList f -> f
    cn.smssdk.contact.a.m g -> g
    cn.smssdk.contact.a.j h -> h
    java.util.ArrayList i -> i
    java.util.ArrayList j -> j
    java.util.ArrayList k -> k
    java.util.ArrayList l -> l
    java.util.ArrayList m -> m
    java.util.ArrayList n -> n
    java.util.ArrayList o -> o
    cn.smssdk.contact.a.f p -> p
    void a(cn.smssdk.contact.l) -> a
    cn.smssdk.contact.a.h a() -> a
    cn.smssdk.contact.a.i b() -> b
    cn.smssdk.contact.a.e c() -> c
    cn.smssdk.contact.a.k d() -> d
    cn.smssdk.contact.a.m e() -> e
    cn.smssdk.contact.a.j f() -> f
    java.util.ArrayList g() -> g
    java.util.ArrayList h() -> h
    java.util.ArrayList i() -> i
    java.util.ArrayList j() -> j
    java.util.ArrayList k() -> k
    java.util.ArrayList l() -> l
    java.util.ArrayList m() -> m
    java.lang.String toString() -> toString
    java.util.HashMap n() -> n
cn.smssdk.contact.a.b -> cn.smssdk.contact.a.b:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    cn.smssdk.contact.a.b a(java.util.HashMap) -> a
    void b(java.util.HashMap) -> b
    byte[] a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    int a(java.lang.String,int) -> a
    java.lang.String toString() -> toString
    java.util.HashMap a() -> a
cn.smssdk.contact.a.c -> cn.smssdk.contact.a.c:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.d -> cn.smssdk.contact.a.d:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.e -> cn.smssdk.contact.a.e:
    java.lang.String b() -> b
cn.smssdk.contact.a.f -> cn.smssdk.contact.a.f:
cn.smssdk.contact.a.g -> cn.smssdk.contact.a.g:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.h -> cn.smssdk.contact.a.h:
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
cn.smssdk.contact.a.i -> cn.smssdk.contact.a.i:
    java.lang.String b() -> b
cn.smssdk.contact.a.j -> cn.smssdk.contact.a.j:
    java.lang.String b() -> b
cn.smssdk.contact.a.k -> cn.smssdk.contact.a.k:
    java.lang.String b() -> b
    java.lang.String c() -> c
cn.smssdk.contact.a.l -> cn.smssdk.contact.a.l:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.m -> cn.smssdk.contact.a.m:
    java.lang.String b() -> b
cn.smssdk.contact.a.n -> cn.smssdk.contact.a.n:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.o -> cn.smssdk.contact.a.o:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.p -> cn.smssdk.contact.a.p:
cn.smssdk.contact.a.q -> cn.smssdk.contact.a.q:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.b -> cn.smssdk.contact.b:
    cn.smssdk.contact.a a -> a
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
cn.smssdk.contact.c -> cn.smssdk.contact.c:
    cn.smssdk.contact.a a -> a
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
cn.smssdk.contact.d -> cn.smssdk.contact.d:
    cn.smssdk.contact.d a -> a
    android.database.ContentObserver b -> b
    android.content.Context c -> c
    android.content.ContentResolver d -> d
    cn.smssdk.contact.l e -> e
    cn.smssdk.contact.OnContactChangeListener f -> f
    cn.smssdk.contact.m g -> g
    java.lang.String h -> h
    cn.smssdk.contact.d a(android.content.Context) -> a
    void c() -> c
    void a() -> a
    void a(java.lang.Runnable,java.lang.Runnable) -> a
    void b(java.lang.Runnable,java.lang.Runnable) -> b
    void b(boolean) -> b
    java.util.ArrayList d() -> d
    java.util.ArrayList a(boolean) -> a
    java.lang.String[] b() -> b
    void a(cn.smssdk.contact.OnContactChangeListener) -> a
    void e() -> e
    cn.smssdk.contact.m a(cn.smssdk.contact.d) -> a
    cn.smssdk.contact.OnContactChangeListener b(cn.smssdk.contact.d) -> b
    android.content.Context c(cn.smssdk.contact.d) -> c
    void a(cn.smssdk.contact.d,boolean) -> a
cn.smssdk.contact.e -> cn.smssdk.contact.e:
    cn.smssdk.contact.d a -> a
    void onChange(boolean) -> onChange
cn.smssdk.contact.f -> cn.smssdk.contact.f:
    cn.smssdk.contact.d a -> a
    void run() -> run
cn.smssdk.contact.g -> cn.smssdk.contact.g:
    cn.smssdk.contact.d a -> a
    void onResult(java.util.HashMap) -> onResult
cn.smssdk.contact.h -> cn.smssdk.contact.h:
    java.lang.Runnable a -> a
    cn.smssdk.contact.d b -> b
    void run() -> run
cn.smssdk.contact.i -> cn.smssdk.contact.i:
    cn.smssdk.contact.h a -> a
    void run() -> run
cn.smssdk.contact.j -> cn.smssdk.contact.j:
    java.lang.Runnable a -> a
    cn.smssdk.contact.d b -> b
    void run() -> run
cn.smssdk.contact.k -> cn.smssdk.contact.k:
    cn.smssdk.contact.d a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.contact.l -> cn.smssdk.contact.l:
    android.content.ContentResolver a -> a
    boolean b -> b
    java.util.ArrayList a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
cn.smssdk.contact.m -> cn.smssdk.contact.m:
    android.os.Handler a -> a
    cn.smssdk.contact.d b -> b
    cn.smssdk.utils.SPHelper c -> c
    cn.smssdk.net.e d -> d
    java.lang.String e -> e
    void a() -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    java.lang.String a(java.lang.Object) -> a
    boolean b() -> b
    void c() -> c
    cn.smssdk.utils.SPHelper a(cn.smssdk.contact.m) -> a
    cn.smssdk.contact.d b(cn.smssdk.contact.m) -> b
    java.lang.String a(cn.smssdk.contact.m,java.lang.Object) -> a
    cn.smssdk.net.e c(cn.smssdk.contact.m) -> c
    void d(cn.smssdk.contact.m) -> d
cn.smssdk.contact.n -> cn.smssdk.contact.n:
    cn.smssdk.contact.m a -> a
    void run() -> run
cn.smssdk.d -> cn.smssdk.d:
    cn.smssdk.a a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.e -> cn.smssdk.e:
    cn.smssdk.a a -> a
    void run() -> run
cn.smssdk.f -> cn.smssdk.f:
    cn.smssdk.e a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.net.BaseApi -> cn.smssdk.net.BaseApi:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean a() -> a
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap) -> a
    java.util.HashMap b(java.lang.String,java.lang.String,java.util.HashMap) -> b
    java.util.HashMap httpPost(java.lang.String,java.util.HashMap,java.lang.String,java.lang.String,boolean,int) -> httpPost
cn.smssdk.net.HttpResponseCallbackImp -> cn.smssdk.net.HttpResponseCallbackImp:
    java.util.HashMap a -> a
    void a() -> a
    void handleInput(java.io.InputStream) -> handleInput
    void onResponse(com.mob.tools.network.HttpConnection) -> onResponse
cn.smssdk.net.JNIBridge -> cn.smssdk.net.JNIBridge:
    boolean a -> a
    boolean a(android.content.Context) -> a
    void nativeInit(java.util.HashMap) -> nativeInit
    void setAESKey(java.lang.String) -> setAESKey
    boolean isAESKeySetted() -> isAESKeySetted
    void setRSAKey(java.lang.String,java.lang.String,int) -> setRSAKey
    byte[] encodePhone(java.lang.String) -> encodePhone
    void freeMemory() -> freeMemory
    void a(android.content.Context,java.lang.String,java.io.File) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
cn.smssdk.net.a -> cn.smssdk.net.a:
    java.util.ArrayList a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    cn.smssdk.utils.SPHelper e -> e
    com.mob.tools.utils.Hashon f -> f
    android.util.SparseArray g -> g
    cn.smssdk.net.c h -> h
    boolean i -> i
    long j -> j
    boolean k -> k
    int l -> l
    long m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    int v -> v
    cn.smssdk.net.a w -> w
    cn.smssdk.net.a a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.util.HashMap) -> a
    cn.smssdk.net.j a(int) -> a
    boolean a(java.lang.String) -> a
    boolean a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    boolean e() -> e
    java.lang.String f() -> f
    java.lang.String a(cn.smssdk.net.a) -> a
cn.smssdk.net.b -> cn.smssdk.net.b:
    cn.smssdk.net.a a -> a
    java.lang.String getProductTag() -> getProductTag
    java.lang.String getProductAppkey() -> getProductAppkey
    int getSdkver() -> getSdkver
cn.smssdk.net.c -> cn.smssdk.net.c:
    boolean a() -> a
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap) -> a
cn.smssdk.net.d -> cn.smssdk.net.d:
    java.lang.String a -> a
    boolean b -> b
    com.mob.tools.utils.DeviceHelper c -> c
    java.util.HashMap d -> d
    com.mob.tools.utils.Hashon e -> e
    boolean f -> f
    boolean g -> g
    cn.smssdk.net.d h -> h
    cn.smssdk.net.d a() -> a
    void a(android.content.Context,java.lang.String) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,java.lang.String,java.util.HashMap) -> a
    java.util.HashMap a(java.util.ArrayList,java.lang.String,java.lang.String,java.util.HashMap) -> a
    java.util.HashMap a(java.lang.String,java.util.HashMap) -> a
    java.util.HashMap b() -> b
    java.util.HashMap b(java.lang.String,java.util.HashMap) -> b
    java.util.HashMap a(java.util.HashMap) -> a
    java.util.HashMap c(java.lang.String,java.util.HashMap) -> c
    java.util.HashMap d(java.lang.String,java.util.HashMap) -> d
    java.util.HashMap c() -> c
    void a(java.util.ArrayList) -> a
    java.lang.String b(java.util.ArrayList) -> b
cn.smssdk.net.e -> cn.smssdk.net.e:
    cn.smssdk.net.e a -> a
    android.content.Context b -> b
    com.mob.tools.utils.Hashon c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    cn.smssdk.utils.SPHelper f -> f
    com.mob.tools.utils.DeviceHelper g -> g
    cn.smssdk.net.a h -> h
    cn.smssdk.net.e a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    boolean a() -> a
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    java.util.HashMap d() -> d
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.util.ArrayList,java.lang.String) -> a
    java.util.HashMap a(java.util.ArrayList) -> a
    void a(java.lang.String,java.lang.String,java.util.ArrayList) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.HashMap b(java.lang.String,java.lang.String,java.lang.String) -> b
    java.util.ArrayList b() -> b
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.ArrayList a(java.lang.String[]) -> a
    java.lang.String a(java.util.HashMap) -> a
    void finalize() -> finalize
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.util.HashMap a(cn.smssdk.net.e) -> a
    java.lang.String b(cn.smssdk.net.e) -> b
    java.lang.String c(cn.smssdk.net.e) -> c
    java.lang.String d(cn.smssdk.net.e) -> d
cn.smssdk.net.f -> cn.smssdk.net.f:
    cn.smssdk.net.e a -> a
    java.lang.Object run(java.lang.Object) -> run
cn.smssdk.net.g -> cn.smssdk.net.g:
    cn.smssdk.net.e a -> a
    java.lang.Object run(java.lang.Object) -> run
cn.smssdk.net.h -> cn.smssdk.net.h:
    cn.smssdk.net.e a -> a
    java.lang.Object run(java.lang.Object) -> run
cn.smssdk.net.i -> cn.smssdk.net.i:
    cn.smssdk.net.e a -> a
    java.lang.String getProductTag() -> getProductTag
    java.lang.String getProductAppkey() -> getProductAppkey
    int getSdkver() -> getSdkver
cn.smssdk.net.j -> cn.smssdk.net.j:
    long h -> h
    int i -> i
    int j -> j
    long k -> k
    java.util.ArrayList l -> l
    java.lang.String m -> m
    cn.smssdk.utils.SPHelper n -> n
    void a(java.util.HashMap) -> a
    void a(java.lang.String) -> a
    int b() -> b
    void c() -> c
    boolean a() -> a
    void d() -> d
    void e() -> e
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap) -> a
cn.smssdk.statistics.NewAppReceiver -> cn.smssdk.statistics.NewAppReceiver:
    java.lang.String[] a -> a
    cn.smssdk.statistics.NewAppReceiver b -> b
    android.content.Context c -> c
    android.content.IntentFilter[] d -> d
    android.os.Handler e -> e
    void a(android.content.Context) -> a
    void a() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.statistics.NewAppReceiver$a -> cn.smssdk.statistics.NewAppReceiver$a:
    com.mob.tools.utils.LocalDB a -> a
    java.util.ArrayList a() -> a
    void a(java.util.ArrayList) -> a
    long b() -> b
    void a(long) -> a
cn.smssdk.statistics.NewAppReceiver$b -> cn.smssdk.statistics.NewAppReceiver$b:
    android.content.Context a -> a
    cn.smssdk.statistics.NewAppReceiver$a b -> b
    void a(android.content.Context) -> a
    void run() -> run
    java.util.HashMap a(java.util.ArrayList) -> a
    java.util.ArrayList a(java.util.HashMap) -> a
cn.smssdk.statistics.a -> cn.smssdk.statistics.a:
    long a -> a
    cn.smssdk.statistics.a b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    com.mob.tools.utils.DeviceHelper e -> e
    java.lang.String f -> f
    int g -> g
    boolean h -> h
    long i -> i
    boolean j -> j
    cn.smssdk.utils.c k -> k
    cn.smssdk.net.e l -> l
    cn.smssdk.statistics.a a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void a(int) -> a
    void a(long) -> a
    void onStart(android.os.Message) -> onStart
    void onStop(android.os.Message) -> onStop
    void a(cn.smssdk.statistics.a.a) -> a
    void b(cn.smssdk.statistics.a.a) -> b
    void onMessage(android.os.Message) -> onMessage
    void c(cn.smssdk.statistics.a.a) -> c
    android.content.ContentValues a(java.lang.String,long,byte[]) -> a
    void a() -> a
    boolean b() -> b
    void c() -> c
    void a(java.lang.String,long,java.util.HashMap,cn.smssdk.statistics.a.a) -> a
cn.smssdk.statistics.a.a -> cn.smssdk.statistics.a.a:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void a(long) -> a
    void f() -> f
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
cn.smssdk.statistics.a.b -> cn.smssdk.statistics.a.b:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    cn.smssdk.statistics.a.b c -> c
    cn.smssdk.statistics.a.b a(android.content.Context) -> a
    void a(java.lang.String,java.lang.Long) -> a
    long a(java.lang.String) -> a
    void a(java.lang.String,int) -> a
    int b(java.lang.String) -> b
    java.lang.Long a() -> a
cn.smssdk.statistics.a.c -> cn.smssdk.statistics.a.c:
    int l -> l
    long m -> m
    long k -> k
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long e() -> e
    long d() -> d
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.smssdk.statistics.a.d -> cn.smssdk.statistics.a.d:
    int k -> k
    long l -> l
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long e() -> e
    long d() -> d
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.smssdk.utils.SMSLog -> cn.smssdk.utils.SMSLog:
    java.lang.String getSDKTag() -> getSDKTag
    com.mob.tools.log.NLog prepare(android.content.Context,int,java.lang.String) -> prepare
    com.mob.tools.log.NLog getInstance() -> getInstance
cn.smssdk.utils.SPHelper -> cn.smssdk.utils.SPHelper:
    cn.smssdk.utils.SPHelper a -> a
    cn.smssdk.utils.SPHelper getInstance(android.content.Context) -> getInstance
    void nativeInit(android.content.Context) -> nativeInit
    java.lang.String getConfig() -> getConfig
    void setConfig(java.lang.String) -> setConfig
    java.lang.String getLimit(java.lang.String) -> getLimit
    void setLimit(java.lang.String,java.lang.String) -> setLimit
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
    void clearBuffer() -> clearBuffer
    java.lang.String getBufferedContactsSignature() -> getBufferedContactsSignature
    void setBufferedContactsSignature(java.lang.String) -> setBufferedContactsSignature
    java.util.ArrayList getBufferedFriends() -> getBufferedFriends
    void setBufferedFriends(java.util.ArrayList) -> setBufferedFriends
    java.util.ArrayList getBufferedNewFriends() -> getBufferedNewFriends
    void setBufferedNewFriends(java.util.ArrayList) -> setBufferedNewFriends
    long getLastRequestNewFriendsTime() -> getLastRequestNewFriendsTime
    void setRequestNewFriendsTime() -> setRequestNewFriendsTime
    java.lang.String[] getBufferedContactPhones() -> getBufferedContactPhones
    void setBufferedContactPhones(java.lang.String[]) -> setBufferedContactPhones
    boolean isAllowReadContact() -> isAllowReadContact
    void setAllowReadContact() -> setAllowReadContact
    boolean isWarnWhenReadContact() -> isWarnWhenReadContact
    void setWarnWhenReadContact(boolean) -> setWarnWhenReadContact
    java.lang.String getVerifyCountry() -> getVerifyCountry
    void setVerifyCountry(java.lang.String) -> setVerifyCountry
    java.lang.String getVerifyPhone() -> getVerifyPhone
    void setVerifyPhone(java.lang.String) -> setVerifyPhone
    java.lang.String getAppKey() -> getAppKey
    void setAppKey(java.lang.String) -> setAppKey
    java.lang.String getVCodeHash() -> getVCodeHash
    void setVCodeHash(java.lang.String) -> setVCodeHash
    java.lang.String getSMSID() -> getSMSID
    void setSMSID(java.lang.String) -> setSMSID
    java.lang.String getLog() -> getLog
    void setLog(java.lang.String) -> setLog
    void clearLog() -> clearLog
cn.smssdk.utils.a -> cn.smssdk.utils.a:
    java.lang.String a -> a
cn.smssdk.utils.b -> cn.smssdk.utils.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
cn.smssdk.utils.c -> cn.smssdk.utils.c:
    android.content.Context a -> a
    cn.smssdk.utils.b b -> b
    cn.smssdk.utils.c c -> c
    cn.smssdk.utils.c a(android.content.Context) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> a
cn.smssdk.utils.d -> cn.smssdk.utils.d:
    cn.smssdk.utils.d a -> a
    cn.smssdk.utils.d a(android.content.Context) -> a
cn.smssdk.utils.e -> cn.smssdk.utils.e:
    int a -> a
    java.lang.String b -> b
    cn.smssdk.utils.SMSLog c -> c
    int getSDKVersion() -> getSDKVersion
    java.lang.String getSDKTag() -> getSDKTag
    java.lang.String getAppkey() -> getAppkey
com.alibaba.fastjson.JSON -> com.alibaba.fastjson.JSON:
    java.lang.String DEFAULT_TYPE_KEY -> DEFAULT_TYPE_KEY
    int DEFAULT_PARSER_FEATURE -> DEFAULT_PARSER_FEATURE
    java.lang.String DEFFAULT_DATE_FORMAT -> DEFFAULT_DATE_FORMAT
    int DEFAULT_GENERATE_FEATURE -> DEFAULT_GENERATE_FEATURE
    java.lang.String VERSION -> VERSION
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(java.lang.String,int) -> parse
    java.lang.Object parse(byte[],com.alibaba.fastjson.parser.Feature[]) -> parse
    java.lang.Object parse(byte[],int,int,java.nio.charset.CharsetDecoder,com.alibaba.fastjson.parser.Feature[]) -> parse
    java.lang.Object parse(byte[],int,int,java.nio.charset.CharsetDecoder,int) -> parse
    java.lang.Object parse(java.lang.String,com.alibaba.fastjson.parser.Feature[]) -> parse
    com.alibaba.fastjson.JSONObject parseObject(java.lang.String,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    com.alibaba.fastjson.JSONObject parseObject(java.lang.String) -> parseObject
    java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.Class,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.Class,com.alibaba.fastjson.parser.deserializer.ParseProcess,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.deserializer.ParseProcess,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig,com.alibaba.fastjson.parser.deserializer.ParseProcess,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    void handleResovleTask(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object) -> handleResovleTask
    java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(byte[],int,int,java.nio.charset.CharsetDecoder,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(char[],int,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.Class) -> parseObject
    com.alibaba.fastjson.JSONArray parseArray(java.lang.String) -> parseArray
    java.util.List parseArray(java.lang.String,java.lang.Class) -> parseArray
    java.util.List parseArray(java.lang.String,java.lang.reflect.Type[]) -> parseArray
    java.lang.String toJSONString(java.lang.Object) -> toJSONString
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    java.lang.String toJSONStringWithDateFormat(java.lang.Object,java.lang.String,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONStringWithDateFormat
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONBytes
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    java.lang.String toJSONStringZ(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONStringZ
    byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONBytes
    java.lang.String toJSONString(java.lang.Object,boolean) -> toJSONString
    void writeJSONStringTo(java.lang.Object,java.io.Writer,com.alibaba.fastjson.serializer.SerializerFeature[]) -> writeJSONStringTo
    java.lang.String toString() -> toString
    java.lang.String toJSONString() -> toJSONString
    void writeJSONString(java.lang.Appendable) -> writeJSONString
    java.lang.Object toJSON(java.lang.Object) -> toJSON
    java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.parser.ParserConfig) -> toJSON
    java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class) -> toJavaObject
com.alibaba.fastjson.JSONArray -> com.alibaba.fastjson.JSONArray:
    long serialVersionUID -> serialVersionUID
    java.util.List list -> list
    java.lang.Object relatedArray -> relatedArray
    java.lang.reflect.Type componentType -> componentType
    java.lang.Object getRelatedArray() -> getRelatedArray
    void setRelatedArray(java.lang.Object) -> setRelatedArray
    java.lang.reflect.Type getComponentType() -> getComponentType
    void setComponentType(java.lang.reflect.Type) -> setComponentType
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
    java.lang.Object get(int) -> get
    com.alibaba.fastjson.JSONObject getJSONObject(int) -> getJSONObject
    com.alibaba.fastjson.JSONArray getJSONArray(int) -> getJSONArray
    java.lang.Object getObject(int,java.lang.Class) -> getObject
    java.lang.Boolean getBoolean(int) -> getBoolean
    boolean getBooleanValue(int) -> getBooleanValue
    java.lang.Byte getByte(int) -> getByte
    byte getByteValue(int) -> getByteValue
    java.lang.Short getShort(int) -> getShort
    short getShortValue(int) -> getShortValue
    java.lang.Integer getInteger(int) -> getInteger
    int getIntValue(int) -> getIntValue
    java.lang.Long getLong(int) -> getLong
    long getLongValue(int) -> getLongValue
    java.lang.Float getFloat(int) -> getFloat
    float getFloatValue(int) -> getFloatValue
    java.lang.Double getDouble(int) -> getDouble
    double getDoubleValue(int) -> getDoubleValue
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    java.math.BigInteger getBigInteger(int) -> getBigInteger
    java.lang.String getString(int) -> getString
    java.util.Date getDate(int) -> getDate
    java.sql.Date getSqlDate(int) -> getSqlDate
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.alibaba.fastjson.JSONAware -> com.alibaba.fastjson.JSONAware:
    java.lang.String toJSONString() -> toJSONString
com.alibaba.fastjson.JSONException -> com.alibaba.fastjson.JSONException:
    long serialVersionUID -> serialVersionUID
com.alibaba.fastjson.JSONObject -> com.alibaba.fastjson.JSONObject:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    java.util.Map map -> map
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    java.lang.Object getObject(java.lang.String,java.lang.Class) -> getObject
    java.lang.Boolean getBoolean(java.lang.String) -> getBoolean
    byte[] getBytes(java.lang.String) -> getBytes
    boolean getBooleanValue(java.lang.String) -> getBooleanValue
    java.lang.Byte getByte(java.lang.String) -> getByte
    byte getByteValue(java.lang.String) -> getByteValue
    java.lang.Short getShort(java.lang.String) -> getShort
    short getShortValue(java.lang.String) -> getShortValue
    java.lang.Integer getInteger(java.lang.String) -> getInteger
    int getIntValue(java.lang.String) -> getIntValue
    java.lang.Long getLong(java.lang.String) -> getLong
    long getLongValue(java.lang.String) -> getLongValue
    java.lang.Float getFloat(java.lang.String) -> getFloat
    float getFloatValue(java.lang.String) -> getFloatValue
    java.lang.Double getDouble(java.lang.String) -> getDouble
    double getDoubleValue(java.lang.String) -> getDoubleValue
    java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    java.math.BigInteger getBigInteger(java.lang.String) -> getBigInteger
    java.lang.String getString(java.lang.String) -> getString
    java.util.Date getDate(java.lang.String) -> getDate
    java.sql.Date getSqlDate(java.lang.String) -> getSqlDate
    java.sql.Timestamp getTimestamp(java.lang.String) -> getTimestamp
    java.lang.Object put(java.lang.String,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.alibaba.fastjson.JSONReader -> com.alibaba.fastjson.JSONReader:
    com.alibaba.fastjson.parser.DefaultJSONParser parser -> parser
    com.alibaba.fastjson.JSONStreamContext context -> context
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    void startObject() -> startObject
    void endObject() -> endObject
    void startArray() -> startArray
    void endArray() -> endArray
    void startStructure() -> startStructure
    void endStructure() -> endStructure
    boolean hasNext() -> hasNext
    void close() -> close
    java.lang.Integer readInteger() -> readInteger
    java.lang.Long readLong() -> readLong
    java.lang.String readString() -> readString
    java.lang.Object readObject(com.alibaba.fastjson.TypeReference) -> readObject
    java.lang.Object readObject(java.lang.reflect.Type) -> readObject
    java.lang.Object readObject(java.lang.Class) -> readObject
    void readObject(java.lang.Object) -> readObject
    java.lang.Object readObject() -> readObject
    java.lang.Object readObject(java.util.Map) -> readObject
    void readBefore() -> readBefore
    void readAfter() -> readAfter
com.alibaba.fastjson.JSONStreamAware -> com.alibaba.fastjson.JSONStreamAware:
    void writeJSONString(java.lang.Appendable) -> writeJSONString
com.alibaba.fastjson.JSONStreamContext -> com.alibaba.fastjson.JSONStreamContext:
    int StartObject -> StartObject
    int PropertyKey -> PropertyKey
    int PropertyValue -> PropertyValue
    int StartArray -> StartArray
    int ArrayValue -> ArrayValue
    com.alibaba.fastjson.JSONStreamContext parent -> parent
    int state -> state
    com.alibaba.fastjson.JSONStreamContext getParent() -> getParent
    int getState() -> getState
    void setState(int) -> setState
com.alibaba.fastjson.JSONWriter -> com.alibaba.fastjson.JSONWriter:
    com.alibaba.fastjson.serializer.SerializeWriter writer -> writer
    com.alibaba.fastjson.serializer.JSONSerializer serializer -> serializer
    com.alibaba.fastjson.JSONStreamContext context -> context
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    void startObject() -> startObject
    void endObject() -> endObject
    void writeKey(java.lang.String) -> writeKey
    void writeValue(java.lang.Object) -> writeValue
    void writeObject(java.lang.String) -> writeObject
    void writeObject(java.lang.Object) -> writeObject
    void startArray() -> startArray
    void beginStructure() -> beginStructure
    void endArray() -> endArray
    void endStructure() -> endStructure
    void beforeWrite() -> beforeWrite
    void afterWriter() -> afterWriter
    void flush() -> flush
    void close() -> close
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
com.alibaba.fastjson.TypeReference -> com.alibaba.fastjson.TypeReference:
    java.lang.reflect.Type type -> type
    java.lang.reflect.Type LIST_STRING -> LIST_STRING
    java.lang.reflect.Type getType() -> getType
com.alibaba.fastjson.TypeReference$1 -> com.alibaba.fastjson.TypeReference$1:
com.alibaba.fastjson.annotation.JSONCreator -> com.alibaba.fastjson.annotation.JSONCreator:
com.alibaba.fastjson.annotation.JSONField -> com.alibaba.fastjson.annotation.JSONField:
    java.lang.String name() -> name
    java.lang.String format() -> format
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
    com.alibaba.fastjson.serializer.SerializerFeature[] serialzeFeatures() -> serialzeFeatures
    com.alibaba.fastjson.parser.Feature[] parseFeatures() -> parseFeatures
com.alibaba.fastjson.annotation.JSONType -> com.alibaba.fastjson.annotation.JSONType:
    boolean asm() -> asm
    java.lang.String[] orders() -> orders
    java.lang.String[] ignores() -> ignores
    com.alibaba.fastjson.serializer.SerializerFeature[] serialzeFeatures() -> serialzeFeatures
    boolean alphabetic() -> alphabetic
    java.lang.Class mappingTo() -> mappingTo
com.alibaba.fastjson.asm.ASMException -> com.alibaba.fastjson.asm.ASMException:
    long serialVersionUID -> serialVersionUID
com.alibaba.fastjson.asm.ByteVector -> com.alibaba.fastjson.asm.ByteVector:
    byte[] data -> data
    int length -> length
    com.alibaba.fastjson.asm.ByteVector putByte(int) -> putByte
    com.alibaba.fastjson.asm.ByteVector put11(int,int) -> put11
    com.alibaba.fastjson.asm.ByteVector putShort(int) -> putShort
    com.alibaba.fastjson.asm.ByteVector put12(int,int) -> put12
    com.alibaba.fastjson.asm.ByteVector putInt(int) -> putInt
    com.alibaba.fastjson.asm.ByteVector putUTF8(java.lang.String) -> putUTF8
    com.alibaba.fastjson.asm.ByteVector putByteArray(byte[],int,int) -> putByteArray
    void enlarge(int) -> enlarge
com.alibaba.fastjson.asm.ClassWriter -> com.alibaba.fastjson.asm.ClassWriter:
    int COMPUTE_MAXS -> COMPUTE_MAXS
    int COMPUTE_FRAMES -> COMPUTE_FRAMES
    int ACC_SYNTHETIC_ATTRIBUTE -> ACC_SYNTHETIC_ATTRIBUTE
    int NOARG_INSN -> NOARG_INSN
    int SBYTE_INSN -> SBYTE_INSN
    int SHORT_INSN -> SHORT_INSN
    int VAR_INSN -> VAR_INSN
    int IMPLVAR_INSN -> IMPLVAR_INSN
    int TYPE_INSN -> TYPE_INSN
    int FIELDORMETH_INSN -> FIELDORMETH_INSN
    int ITFDYNMETH_INSN -> ITFDYNMETH_INSN
    int LABEL_INSN -> LABEL_INSN
    int LABELW_INSN -> LABELW_INSN
    int LDC_INSN -> LDC_INSN
    int LDCW_INSN -> LDCW_INSN
    int IINC_INSN -> IINC_INSN
    int TABL_INSN -> TABL_INSN
    int LOOK_INSN -> LOOK_INSN
    int MANA_INSN -> MANA_INSN
    int WIDE_INSN -> WIDE_INSN
    byte[] TYPE -> TYPE
    int CLASS -> CLASS
    int FIELD -> FIELD
    int METH -> METH
    int IMETH -> IMETH
    int STR -> STR
    int INT -> INT
    int FLOAT -> FLOAT
    int LONG -> LONG
    int DOUBLE -> DOUBLE
    int NAME_TYPE -> NAME_TYPE
    int UTF8 -> UTF8
    int TYPE_NORMAL -> TYPE_NORMAL
    int TYPE_UNINIT -> TYPE_UNINIT
    int TYPE_MERGED -> TYPE_MERGED
    int version -> version
    int index -> index
    com.alibaba.fastjson.asm.ByteVector pool -> pool
    com.alibaba.fastjson.asm.Item[] items -> items
    int threshold -> threshold
    com.alibaba.fastjson.asm.Item key -> key
    com.alibaba.fastjson.asm.Item key2 -> key2
    com.alibaba.fastjson.asm.Item key3 -> key3
    com.alibaba.fastjson.asm.Item[] typeTable -> typeTable
    int access -> access
    int name -> name
    java.lang.String thisName -> thisName
    int superName -> superName
    int interfaceCount -> interfaceCount
    int[] interfaces -> interfaces
    com.alibaba.fastjson.asm.FieldWriter firstField -> firstField
    com.alibaba.fastjson.asm.FieldWriter lastField -> lastField
    com.alibaba.fastjson.asm.MethodWriter firstMethod -> firstMethod
    com.alibaba.fastjson.asm.MethodWriter lastMethod -> lastMethod
    void visit(int,int,java.lang.String,java.lang.String,java.lang.String[]) -> visit
    com.alibaba.fastjson.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String) -> visitField
    com.alibaba.fastjson.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) -> visitMethod
    byte[] toByteArray() -> toByteArray
    com.alibaba.fastjson.asm.Item newConstItem(java.lang.Object) -> newConstItem
    com.alibaba.fastjson.asm.Item newInteger(int) -> newInteger
    int newUTF8(java.lang.String) -> newUTF8
    com.alibaba.fastjson.asm.Item newClassItem(java.lang.String) -> newClassItem
    int newClass(java.lang.String) -> newClass
    com.alibaba.fastjson.asm.Item newFieldItem(java.lang.String,java.lang.String,java.lang.String) -> newFieldItem
    com.alibaba.fastjson.asm.Item newMethodItem(java.lang.String,java.lang.String,java.lang.String,boolean) -> newMethodItem
    com.alibaba.fastjson.asm.Item newString(java.lang.String) -> newString
    int newNameType(java.lang.String,java.lang.String) -> newNameType
    com.alibaba.fastjson.asm.Item newNameTypeItem(java.lang.String,java.lang.String) -> newNameTypeItem
    com.alibaba.fastjson.asm.Item get(com.alibaba.fastjson.asm.Item) -> get
    void put(com.alibaba.fastjson.asm.Item) -> put
    void put122(int,int,int) -> put122
com.alibaba.fastjson.asm.FieldVisitor -> com.alibaba.fastjson.asm.FieldVisitor:
    void visitEnd() -> visitEnd
com.alibaba.fastjson.asm.FieldWriter -> com.alibaba.fastjson.asm.FieldWriter:
    com.alibaba.fastjson.asm.FieldWriter next -> next
    int access -> access
    int name -> name
    int desc -> desc
    void visitEnd() -> visitEnd
    int getSize() -> getSize
    void put(com.alibaba.fastjson.asm.ByteVector) -> put
com.alibaba.fastjson.asm.Item -> com.alibaba.fastjson.asm.Item:
    int index -> index
    int type -> type
    int intVal -> intVal
    long longVal -> longVal
    java.lang.String strVal1 -> strVal1
    java.lang.String strVal2 -> strVal2
    java.lang.String strVal3 -> strVal3
    int hashCode -> hashCode
    com.alibaba.fastjson.asm.Item next -> next
    void set(int,java.lang.String,java.lang.String,java.lang.String) -> set
    void set(int) -> set
    boolean isEqualTo(com.alibaba.fastjson.asm.Item) -> isEqualTo
com.alibaba.fastjson.asm.Label -> com.alibaba.fastjson.asm.Label:
    int RESOLVED -> RESOLVED
    java.lang.Object info -> info
    int status -> status
    int line -> line
    int position -> position
    int referenceCount -> referenceCount
    int[] srcAndRefPositions -> srcAndRefPositions
    int inputStackTop -> inputStackTop
    int outputStackMax -> outputStackMax
    com.alibaba.fastjson.asm.Label successor -> successor
    com.alibaba.fastjson.asm.Label next -> next
    void put(com.alibaba.fastjson.asm.MethodWriter,com.alibaba.fastjson.asm.ByteVector,int) -> put
    void addReference(int,int) -> addReference
    void resolve(com.alibaba.fastjson.asm.MethodWriter,int,byte[]) -> resolve
com.alibaba.fastjson.asm.MethodVisitor -> com.alibaba.fastjson.asm.MethodVisitor:
    void visitInsn(int) -> visitInsn
    void visitIntInsn(int,int) -> visitIntInsn
    void visitVarInsn(int,int) -> visitVarInsn
    void visitTypeInsn(int,java.lang.String) -> visitTypeInsn
    void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String) -> visitFieldInsn
    void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String) -> visitMethodInsn
    void visitJumpInsn(int,com.alibaba.fastjson.asm.Label) -> visitJumpInsn
    void visitLabel(com.alibaba.fastjson.asm.Label) -> visitLabel
    void visitLdcInsn(java.lang.Object) -> visitLdcInsn
    void visitIincInsn(int,int) -> visitIincInsn
    void visitMaxs(int,int) -> visitMaxs
    void visitEnd() -> visitEnd
com.alibaba.fastjson.asm.MethodWriter -> com.alibaba.fastjson.asm.MethodWriter:
    int ACC_CONSTRUCTOR -> ACC_CONSTRUCTOR
    int SAME_FRAME -> SAME_FRAME
    int SAME_LOCALS_1_STACK_ITEM_FRAME -> SAME_LOCALS_1_STACK_ITEM_FRAME
    int RESERVED -> RESERVED
    int SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED -> SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED
    int CHOP_FRAME -> CHOP_FRAME
    int SAME_FRAME_EXTENDED -> SAME_FRAME_EXTENDED
    int APPEND_FRAME -> APPEND_FRAME
    int FULL_FRAME -> FULL_FRAME
    com.alibaba.fastjson.asm.MethodWriter next -> next
    com.alibaba.fastjson.asm.ClassWriter cw -> cw
    int access -> access
    int name -> name
    int desc -> desc
    int classReaderLength -> classReaderLength
    int exceptionCount -> exceptionCount
    int[] exceptions -> exceptions
    com.alibaba.fastjson.asm.ByteVector code -> code
    int maxStack -> maxStack
    int maxLocals -> maxLocals
    void visitInsn(int) -> visitInsn
    void visitIntInsn(int,int) -> visitIntInsn
    void visitVarInsn(int,int) -> visitVarInsn
    void visitTypeInsn(int,java.lang.String) -> visitTypeInsn
    void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String) -> visitFieldInsn
    void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String) -> visitMethodInsn
    void visitJumpInsn(int,com.alibaba.fastjson.asm.Label) -> visitJumpInsn
    void visitLabel(com.alibaba.fastjson.asm.Label) -> visitLabel
    void visitLdcInsn(java.lang.Object) -> visitLdcInsn
    void visitIincInsn(int,int) -> visitIincInsn
    void visitMaxs(int,int) -> visitMaxs
    void visitEnd() -> visitEnd
    int getSize() -> getSize
    void put(com.alibaba.fastjson.asm.ByteVector) -> put
com.alibaba.fastjson.asm.Opcodes -> com.alibaba.fastjson.asm.Opcodes:
    int V1_5 -> V1_5
    int ACC_PUBLIC -> ACC_PUBLIC
    int ACC_PRIVATE -> ACC_PRIVATE
    int ACC_STATIC -> ACC_STATIC
    int ACC_FINAL -> ACC_FINAL
    int ACC_SUPER -> ACC_SUPER
    int ACC_SYNTHETIC -> ACC_SYNTHETIC
    int ACC_DEPRECATED -> ACC_DEPRECATED
    int T_BOOLEAN -> T_BOOLEAN
    int T_CHAR -> T_CHAR
    int T_FLOAT -> T_FLOAT
    int T_DOUBLE -> T_DOUBLE
    int T_BYTE -> T_BYTE
    int T_SHORT -> T_SHORT
    int T_INT -> T_INT
    int T_LONG -> T_LONG
    java.lang.String INVOKEDYNAMIC_OWNER -> INVOKEDYNAMIC_OWNER
    int NOP -> NOP
    int ACONST_NULL -> ACONST_NULL
    int ICONST_M1 -> ICONST_M1
    int ICONST_0 -> ICONST_0
    int ICONST_1 -> ICONST_1
    int ICONST_2 -> ICONST_2
    int ICONST_3 -> ICONST_3
    int ICONST_4 -> ICONST_4
    int ICONST_5 -> ICONST_5
    int LCONST_0 -> LCONST_0
    int LCONST_1 -> LCONST_1
    int FCONST_0 -> FCONST_0
    int FCONST_1 -> FCONST_1
    int FCONST_2 -> FCONST_2
    int DCONST_0 -> DCONST_0
    int DCONST_1 -> DCONST_1
    int BIPUSH -> BIPUSH
    int LDC -> LDC
    int ILOAD -> ILOAD
    int LLOAD -> LLOAD
    int FLOAD -> FLOAD
    int DLOAD -> DLOAD
    int ALOAD -> ALOAD
    int IALOAD -> IALOAD
    int LALOAD -> LALOAD
    int FALOAD -> FALOAD
    int DALOAD -> DALOAD
    int AALOAD -> AALOAD
    int BALOAD -> BALOAD
    int CALOAD -> CALOAD
    int SALOAD -> SALOAD
    int ISTORE -> ISTORE
    int LSTORE -> LSTORE
    int FSTORE -> FSTORE
    int DSTORE -> DSTORE
    int ASTORE -> ASTORE
    int POP -> POP
    int POP2 -> POP2
    int DUP -> DUP
    int IADD -> IADD
    int LADD -> LADD
    int ISUB -> ISUB
    int IAND -> IAND
    int IOR -> IOR
    int IINC -> IINC
    int I2B -> I2B
    int I2C -> I2C
    int I2S -> I2S
    int LCMP -> LCMP
    int FCMPL -> FCMPL
    int FCMPG -> FCMPG
    int DCMPL -> DCMPL
    int DCMPG -> DCMPG
    int IFEQ -> IFEQ
    int IFNE -> IFNE
    int IFLT -> IFLT
    int IFGE -> IFGE
    int IFGT -> IFGT
    int IFLE -> IFLE
    int IF_ICMPEQ -> IF_ICMPEQ
    int IF_ICMPNE -> IF_ICMPNE
    int IF_ICMPLT -> IF_ICMPLT
    int IF_ICMPGE -> IF_ICMPGE
    int IF_ICMPGT -> IF_ICMPGT
    int IF_ICMPLE -> IF_ICMPLE
    int IF_ACMPEQ -> IF_ACMPEQ
    int IF_ACMPNE -> IF_ACMPNE
    int GOTO -> GOTO
    int JSR -> JSR
    int RET -> RET
    int IRETURN -> IRETURN
    int ARETURN -> ARETURN
    int RETURN -> RETURN
    int GETSTATIC -> GETSTATIC
    int PUTSTATIC -> PUTSTATIC
    int GETFIELD -> GETFIELD
    int PUTFIELD -> PUTFIELD
    int INVOKEVIRTUAL -> INVOKEVIRTUAL
    int INVOKESPECIAL -> INVOKESPECIAL
    int INVOKESTATIC -> INVOKESTATIC
    int INVOKEINTERFACE -> INVOKEINTERFACE
    int NEW -> NEW
    int CHECKCAST -> CHECKCAST
    int INSTANCEOF -> INSTANCEOF
    int IFNULL -> IFNULL
    int IFNONNULL -> IFNONNULL
com.alibaba.fastjson.asm.Type -> com.alibaba.fastjson.asm.Type:
    int VOID -> VOID
    int BOOLEAN -> BOOLEAN
    int CHAR -> CHAR
    int BYTE -> BYTE
    int SHORT -> SHORT
    int INT -> INT
    int FLOAT -> FLOAT
    int LONG -> LONG
    int DOUBLE -> DOUBLE
    int ARRAY -> ARRAY
    int OBJECT -> OBJECT
    com.alibaba.fastjson.asm.Type VOID_TYPE -> VOID_TYPE
    com.alibaba.fastjson.asm.Type BOOLEAN_TYPE -> BOOLEAN_TYPE
    com.alibaba.fastjson.asm.Type CHAR_TYPE -> CHAR_TYPE
    com.alibaba.fastjson.asm.Type BYTE_TYPE -> BYTE_TYPE
    com.alibaba.fastjson.asm.Type SHORT_TYPE -> SHORT_TYPE
    com.alibaba.fastjson.asm.Type INT_TYPE -> INT_TYPE
    com.alibaba.fastjson.asm.Type FLOAT_TYPE -> FLOAT_TYPE
    com.alibaba.fastjson.asm.Type LONG_TYPE -> LONG_TYPE
    com.alibaba.fastjson.asm.Type DOUBLE_TYPE -> DOUBLE_TYPE
    int sort -> sort
    char[] buf -> buf
    int off -> off
    int len -> len
    com.alibaba.fastjson.asm.Type getType(java.lang.String) -> getType
    int getArgumentsAndReturnSizes(java.lang.String) -> getArgumentsAndReturnSizes
    com.alibaba.fastjson.asm.Type getType(char[],int) -> getType
    int getSort() -> getSort
    java.lang.String getInternalName() -> getInternalName
    java.lang.String getDescriptor() -> getDescriptor
com.alibaba.fastjson.parser.AbstractJSONParser -> com.alibaba.fastjson.parser.AbstractJSONParser:
com.alibaba.fastjson.parser.CharTypes -> com.alibaba.fastjson.parser.CharTypes:
    char[] digits -> digits
    boolean[] firstIdentifierFlags -> firstIdentifierFlags
    boolean[] identifierFlags -> identifierFlags
    byte[] specicalFlags_doubleQuotes -> specicalFlags_doubleQuotes
    byte[] specicalFlags_singleQuotes -> specicalFlags_singleQuotes
    char[] replaceChars -> replaceChars
    char[] ASCII_CHARS -> ASCII_CHARS
com.alibaba.fastjson.parser.DefaultExtJSONParser -> com.alibaba.fastjson.parser.DefaultExtJSONParser:
com.alibaba.fastjson.parser.DefaultJSONParser -> com.alibaba.fastjson.parser.DefaultJSONParser:
    java.lang.Object input -> input
    com.alibaba.fastjson.parser.SymbolTable symbolTable -> symbolTable
    com.alibaba.fastjson.parser.ParserConfig config -> config
    java.util.Set primitiveClasses -> primitiveClasses
    java.lang.String dateFormatPattern -> dateFormatPattern
    java.text.DateFormat dateFormat -> dateFormat
    com.alibaba.fastjson.parser.JSONLexer lexer -> lexer
    com.alibaba.fastjson.parser.ParseContext context -> context
    com.alibaba.fastjson.parser.ParseContext[] contextArray -> contextArray
    int contextArrayIndex -> contextArrayIndex
    java.util.List resolveTaskList -> resolveTaskList
    int NONE -> NONE
    int NeedToResolve -> NeedToResolve
    int TypeNameRedirect -> TypeNameRedirect
    int resolveStatus -> resolveStatus
    java.util.List extraTypeProviders -> extraTypeProviders
    java.util.List extraProcessors -> extraProcessors
    java.lang.String getDateFomartPattern() -> getDateFomartPattern
    java.text.DateFormat getDateFormat() -> getDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    void setDateFomrat(java.text.DateFormat) -> setDateFomrat
    com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> getSymbolTable
    java.lang.String getInput() -> getInput
    java.lang.Object parseObject(java.util.Map,java.lang.Object) -> parseObject
    com.alibaba.fastjson.parser.ParserConfig getConfig() -> getConfig
    void setConfig(com.alibaba.fastjson.parser.ParserConfig) -> setConfig
    java.lang.Object parseObject(java.lang.Class) -> parseObject
    java.lang.Object parseObject(java.lang.reflect.Type) -> parseObject
    java.util.List parseArray(java.lang.Class) -> parseArray
    void parseArray(java.lang.Class,java.util.Collection) -> parseArray
    void parseArray(java.lang.reflect.Type,java.util.Collection) -> parseArray
    void parseArray(java.lang.reflect.Type,java.util.Collection,java.lang.Object) -> parseArray
    java.lang.Object[] parseArray(java.lang.reflect.Type[]) -> parseArray
    void parseObject(java.lang.Object) -> parseObject
    java.lang.Object parseArrayWithType(java.lang.reflect.Type) -> parseArrayWithType
    void acceptType(java.lang.String) -> acceptType
    int getResolveStatus() -> getResolveStatus
    void setResolveStatus(int) -> setResolveStatus
    java.lang.Object getObject(java.lang.String) -> getObject
    void checkListResolve(java.util.Collection) -> checkListResolve
    void checkMapResolve(java.util.Map,java.lang.String) -> checkMapResolve
    java.lang.Object parseObject(java.util.Map) -> parseObject
    com.alibaba.fastjson.JSONObject parseObject() -> parseObject
    void parseArray(java.util.Collection) -> parseArray
    void parseArray(java.util.Collection,java.lang.Object) -> parseArray
    com.alibaba.fastjson.parser.ParseContext getContext() -> getContext
    java.util.List getResolveTaskList() -> getResolveTaskList
    java.util.List getResolveTaskListDirect() -> getResolveTaskListDirect
    void addResolveTask(com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask) -> addResolveTask
    com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask getLastResolveTask() -> getLastResolveTask
    java.util.List getExtraProcessors() -> getExtraProcessors
    java.util.List getExtraProcessorsDirect() -> getExtraProcessorsDirect
    java.util.List getExtraTypeProviders() -> getExtraTypeProviders
    java.util.List getExtraTypeProvidersDirect() -> getExtraTypeProvidersDirect
    void setContext(com.alibaba.fastjson.parser.ParseContext) -> setContext
    void popContext() -> popContext
    com.alibaba.fastjson.parser.ParseContext setContext(java.lang.Object,java.lang.Object) -> setContext
    com.alibaba.fastjson.parser.ParseContext setContext(com.alibaba.fastjson.parser.ParseContext,java.lang.Object,java.lang.Object) -> setContext
    void addContext(com.alibaba.fastjson.parser.ParseContext) -> addContext
    java.lang.Object parse() -> parse
    java.lang.Object parseKey() -> parseKey
    java.lang.Object parse(java.lang.Object) -> parse
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    com.alibaba.fastjson.parser.JSONLexer getLexer() -> getLexer
    void accept(int) -> accept
    void accept(int,int) -> accept
    void close() -> close
com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask -> com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask:
    com.alibaba.fastjson.parser.ParseContext context -> context
    java.lang.String referenceValue -> referenceValue
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer fieldDeserializer -> fieldDeserializer
    com.alibaba.fastjson.parser.ParseContext ownerContext -> ownerContext
    com.alibaba.fastjson.parser.ParseContext getContext() -> getContext
    java.lang.String getReferenceValue() -> getReferenceValue
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer getFieldDeserializer() -> getFieldDeserializer
    void setFieldDeserializer(com.alibaba.fastjson.parser.deserializer.FieldDeserializer) -> setFieldDeserializer
    com.alibaba.fastjson.parser.ParseContext getOwnerContext() -> getOwnerContext
    void setOwnerContext(com.alibaba.fastjson.parser.ParseContext) -> setOwnerContext
com.alibaba.fastjson.parser.Feature -> com.alibaba.fastjson.parser.Feature:
    com.alibaba.fastjson.parser.Feature AutoCloseSource -> AutoCloseSource
    com.alibaba.fastjson.parser.Feature AllowComment -> AllowComment
    com.alibaba.fastjson.parser.Feature AllowUnQuotedFieldNames -> AllowUnQuotedFieldNames
    com.alibaba.fastjson.parser.Feature AllowSingleQuotes -> AllowSingleQuotes
    com.alibaba.fastjson.parser.Feature InternFieldNames -> InternFieldNames
    com.alibaba.fastjson.parser.Feature AllowISO8601DateFormat -> AllowISO8601DateFormat
    com.alibaba.fastjson.parser.Feature AllowArbitraryCommas -> AllowArbitraryCommas
    com.alibaba.fastjson.parser.Feature UseBigDecimal -> UseBigDecimal
    com.alibaba.fastjson.parser.Feature IgnoreNotMatch -> IgnoreNotMatch
    com.alibaba.fastjson.parser.Feature SortFeidFastMatch -> SortFeidFastMatch
    com.alibaba.fastjson.parser.Feature DisableASM -> DisableASM
    com.alibaba.fastjson.parser.Feature DisableCircularReferenceDetect -> DisableCircularReferenceDetect
    com.alibaba.fastjson.parser.Feature InitStringFieldAsEmpty -> InitStringFieldAsEmpty
    com.alibaba.fastjson.parser.Feature SupportArrayToBean -> SupportArrayToBean
    int mask -> mask
    com.alibaba.fastjson.parser.Feature[] $VALUES -> $VALUES
    com.alibaba.fastjson.parser.Feature[] values() -> values
    com.alibaba.fastjson.parser.Feature valueOf(java.lang.String) -> valueOf
    int getMask() -> getMask
    boolean isEnabled(int,com.alibaba.fastjson.parser.Feature) -> isEnabled
    int config(int,com.alibaba.fastjson.parser.Feature,boolean) -> config
com.alibaba.fastjson.parser.JSONLexer -> com.alibaba.fastjson.parser.JSONLexer:
    byte EOI -> EOI
    int NOT_MATCH -> NOT_MATCH
    int NOT_MATCH_NAME -> NOT_MATCH_NAME
    int UNKOWN -> UNKOWN
    int OBJECT -> OBJECT
    int ARRAY -> ARRAY
    int VALUE -> VALUE
    int END -> END
    int token() -> token
    java.lang.String tokenName() -> tokenName
    void skipWhitespace() -> skipWhitespace
    void nextToken() -> nextToken
    void nextToken(int) -> nextToken
    char getCurrent() -> getCurrent
    char next() -> next
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbol
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable,char) -> scanSymbol
    void resetStringPosition() -> resetStringPosition
    void scanNumber() -> scanNumber
    int pos() -> pos
    java.lang.Number integerValue() -> integerValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.lang.Number decimalValue(boolean) -> decimalValue
    java.lang.String scanSymbolUnQuoted(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbolUnQuoted
    java.lang.String stringVal() -> stringVal
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    void scanString() -> scanString
    java.lang.Number numberValue() -> numberValue
    int intValue() -> intValue
    void nextTokenWithColon() -> nextTokenWithColon
    void nextTokenWithColon(int) -> nextTokenWithColon
    boolean isBlankInput() -> isBlankInput
    int getBufferPosition() -> getBufferPosition
    void close() -> close
    long longValue() -> longValue
    boolean isRef() -> isRef
    java.lang.String numberString() -> numberString
    byte[] bytesValue() -> bytesValue
    float floatValue() -> floatValue
    long scanLong(char) -> scanLong
    int scanInt(char) -> scanInt
    java.lang.String scanString(char) -> scanString
    java.lang.Enum scanEnum(java.lang.Class,com.alibaba.fastjson.parser.SymbolTable,char) -> scanEnum
    java.lang.String scanSymbolWithSeperator(com.alibaba.fastjson.parser.SymbolTable,char) -> scanSymbolWithSeperator
    java.util.Collection scanStringArray(java.lang.Class,char) -> scanStringArray
com.alibaba.fastjson.parser.JSONLexerBase -> com.alibaba.fastjson.parser.JSONLexerBase:
    int token -> token
    int pos -> pos
    int features -> features
    char ch -> ch
    int bp -> bp
    int eofPos -> eofPos
    char[] sbuf -> sbuf
    int sp -> sp
    int np -> np
    boolean hasSpecial -> hasSpecial
    java.util.Calendar calendar -> calendar
    int matchStat -> matchStat
    java.lang.ThreadLocal SBUF_REF_LOCAL -> SBUF_REF_LOCAL
    com.alibaba.fastjson.parser.Keywords keywods -> keywods
    char[] typeFieldName -> typeFieldName
    boolean[] whitespaceFlags -> whitespaceFlags
    long MULTMIN_RADIX_TEN -> MULTMIN_RADIX_TEN
    long N_MULTMAX_RADIX_TEN -> N_MULTMAX_RADIX_TEN
    int INT_MULTMIN_RADIX_TEN -> INT_MULTMIN_RADIX_TEN
    int INT_N_MULTMAX_RADIX_TEN -> INT_N_MULTMAX_RADIX_TEN
    int[] digits -> digits
    void lexError(java.lang.String,java.lang.Object[]) -> lexError
    int matchStat() -> matchStat
    void nextToken() -> nextToken
    void nextToken(int) -> nextToken
    void nextIdent() -> nextIdent
    void nextTokenWithColon() -> nextTokenWithColon
    void nextTokenWithComma() -> nextTokenWithComma
    void nextTokenWithChar(char) -> nextTokenWithChar
    int token() -> token
    java.lang.String tokenName() -> tokenName
    int pos() -> pos
    int getBufferPosition() -> getBufferPosition
    java.lang.String stringDefaultValue() -> stringDefaultValue
    java.lang.Number integerValue() -> integerValue
    void nextTokenWithColon(int) -> nextTokenWithColon
    void nextTokenWithComma(int) -> nextTokenWithComma
    void nextTokenWithChar(char,int) -> nextTokenWithChar
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    java.lang.String numberString() -> numberString
    boolean isEOF() -> isEOF
    char getCurrent() -> getCurrent
    char charAt(int) -> charAt
    char next() -> next
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbol
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable,char) -> scanSymbol
    void resetStringPosition() -> resetStringPosition
    java.lang.String scanSymbolUnQuoted(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbolUnQuoted
    void copyTo(int,int,char[]) -> copyTo
    void scanString() -> scanString
    java.util.Calendar getCalendar() -> getCalendar
    int intValue() -> intValue
    byte[] bytesValue() -> bytesValue
    void close() -> close
    boolean isRef() -> isRef
    int scanType(java.lang.String) -> scanType
    boolean matchField(char[]) -> matchField
    int indexOf(char,int) -> indexOf
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    java.lang.String scanFieldString(char[]) -> scanFieldString
    java.lang.String scanString(char) -> scanString
    java.lang.String scanFieldSymbol(char[],com.alibaba.fastjson.parser.SymbolTable) -> scanFieldSymbol
    java.lang.Enum scanEnum(java.lang.Class,com.alibaba.fastjson.parser.SymbolTable,char) -> scanEnum
    java.lang.String scanSymbolWithSeperator(com.alibaba.fastjson.parser.SymbolTable,char) -> scanSymbolWithSeperator
    java.util.Collection scanFieldStringArray(char[],java.lang.Class) -> scanFieldStringArray
    java.util.Collection scanStringArray(java.lang.Class,char) -> scanStringArray
    int scanFieldInt(char[]) -> scanFieldInt
    boolean scanBoolean(char) -> scanBoolean
    int scanInt(char) -> scanInt
    boolean scanFieldBoolean(char[]) -> scanFieldBoolean
    long scanFieldLong(char[]) -> scanFieldLong
    long scanLong(char) -> scanLong
    float scanFieldFloat(char[]) -> scanFieldFloat
    float scanFloat(char) -> scanFloat
    double scanFieldDouble(char[]) -> scanFieldDouble
    double scanFieldDouble(char) -> scanFieldDouble
    void scanTrue() -> scanTrue
    void scanTreeSet() -> scanTreeSet
    void scanNullOrNew() -> scanNullOrNew
    void scanFalse() -> scanFalse
    void scanIdent() -> scanIdent
    java.lang.String stringVal() -> stringVal
    java.lang.String subString(int,int) -> subString
    boolean charArrayCompare(char[]) -> charArrayCompare
    boolean isBlankInput() -> isBlankInput
    void skipWhitespace() -> skipWhitespace
    void scanStringSingleQuote() -> scanStringSingleQuote
    void scanSet() -> scanSet
    void putChar(char) -> putChar
    void scanNumber() -> scanNumber
    long longValue() -> longValue
    java.lang.Number decimalValue(boolean) -> decimalValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.lang.Number numberValue() -> numberValue
    boolean isWhitespace(char) -> isWhitespace
com.alibaba.fastjson.parser.JSONReaderScanner -> com.alibaba.fastjson.parser.JSONReaderScanner:
    int BUF_INIT_LEN -> BUF_INIT_LEN
    java.lang.ThreadLocal BUF_REF_LOCAL -> BUF_REF_LOCAL
    java.io.Reader reader -> reader
    char[] buf -> buf
    int bufLength -> bufLength
    char charAt(int) -> charAt
    int indexOf(char,int) -> indexOf
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    char next() -> next
    void copyTo(int,int,char[]) -> copyTo
    boolean charArrayCompare(char[]) -> charArrayCompare
    byte[] bytesValue() -> bytesValue
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String stringVal() -> stringVal
    java.lang.String subString(int,int) -> subString
    java.lang.String numberString() -> numberString
    void close() -> close
    boolean isEOF() -> isEOF
com.alibaba.fastjson.parser.JSONScanner -> com.alibaba.fastjson.parser.JSONScanner:
    java.lang.String text -> text
    char[] typeFieldName -> typeFieldName
    int ISO8601_LEN_0 -> ISO8601_LEN_0
    int ISO8601_LEN_1 -> ISO8601_LEN_1
    int ISO8601_LEN_2 -> ISO8601_LEN_2
    char charAt(int) -> charAt
    char next() -> next
    void copyTo(int,int,char[]) -> copyTo
    int scanType(java.lang.String) -> scanType
    boolean charArrayCompare(java.lang.String,int,char[]) -> charArrayCompare
    boolean charArrayCompare(char[]) -> charArrayCompare
    int indexOf(char,int) -> indexOf
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    byte[] bytesValue() -> bytesValue
    java.lang.String stringVal() -> stringVal
    java.lang.String subString(int,int) -> subString
    java.lang.String numberString() -> numberString
    boolean scanISO8601DateIfMatch() -> scanISO8601DateIfMatch
    boolean scanISO8601DateIfMatch(boolean) -> scanISO8601DateIfMatch
    boolean checkTime(char,char,char,char,char,char) -> checkTime
    void setCalendar(char,char,char,char,char,char,char,char) -> setCalendar
    boolean checkDate(char,char,char,char,char,char,int,int) -> checkDate
    boolean isEOF() -> isEOF
    int scanFieldInt(char[]) -> scanFieldInt
    java.lang.String scanFieldString(char[]) -> scanFieldString
    java.lang.String scanFieldSymbol(char[],com.alibaba.fastjson.parser.SymbolTable) -> scanFieldSymbol
    java.util.Collection scanFieldStringArray(char[],java.lang.Class) -> scanFieldStringArray
    long scanFieldLong(char[]) -> scanFieldLong
    boolean scanFieldBoolean(char[]) -> scanFieldBoolean
    void arrayCopy(int,char[],int,int) -> arrayCopy
com.alibaba.fastjson.parser.JSONToken -> com.alibaba.fastjson.parser.JSONToken:
    int ERROR -> ERROR
    int LITERAL_INT -> LITERAL_INT
    int LITERAL_FLOAT -> LITERAL_FLOAT
    int LITERAL_STRING -> LITERAL_STRING
    int LITERAL_ISO8601_DATE -> LITERAL_ISO8601_DATE
    int TRUE -> TRUE
    int FALSE -> FALSE
    int NULL -> NULL
    int NEW -> NEW
    int LPAREN -> LPAREN
    int RPAREN -> RPAREN
    int LBRACE -> LBRACE
    int RBRACE -> RBRACE
    int LBRACKET -> LBRACKET
    int RBRACKET -> RBRACKET
    int COMMA -> COMMA
    int COLON -> COLON
    int IDENTIFIER -> IDENTIFIER
    int FIELD_NAME -> FIELD_NAME
    int EOF -> EOF
    int SET -> SET
    int TREE_SET -> TREE_SET
    java.lang.String name(int) -> name
com.alibaba.fastjson.parser.JavaBeanMapping -> com.alibaba.fastjson.parser.JavaBeanMapping:
    com.alibaba.fastjson.parser.JavaBeanMapping instance -> instance
    com.alibaba.fastjson.parser.JavaBeanMapping getGlobalInstance() -> getGlobalInstance
com.alibaba.fastjson.parser.Keywords -> com.alibaba.fastjson.parser.Keywords:
    java.util.Map keywords -> keywords
    com.alibaba.fastjson.parser.Keywords DEFAULT_KEYWORDS -> DEFAULT_KEYWORDS
    java.lang.Integer getKeyword(java.lang.String) -> getKeyword
com.alibaba.fastjson.parser.ParseContext -> com.alibaba.fastjson.parser.ParseContext:
    java.lang.Object object -> object
    com.alibaba.fastjson.parser.ParseContext parent -> parent
    java.lang.Object fieldName -> fieldName
    java.lang.reflect.Type type -> type
    java.lang.reflect.Type getType() -> getType
    void setType(java.lang.reflect.Type) -> setType
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
    com.alibaba.fastjson.parser.ParseContext getParentContext() -> getParentContext
    java.lang.String getPath() -> getPath
    java.lang.String toString() -> toString
com.alibaba.fastjson.parser.ParserConfig -> com.alibaba.fastjson.parser.ParserConfig:
    java.util.Set primitiveClasses -> primitiveClasses
    com.alibaba.fastjson.parser.ParserConfig global -> global
    com.alibaba.fastjson.util.IdentityHashMap derializers -> derializers
    boolean asmEnable -> asmEnable
    com.alibaba.fastjson.parser.SymbolTable symbolTable -> symbolTable
    com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory asmFactory -> asmFactory
    com.alibaba.fastjson.parser.ParserConfig getGlobalInstance() -> getGlobalInstance
    boolean isAsmEnable() -> isAsmEnable
    void setAsmEnable(boolean) -> setAsmEnable
    com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> getSymbolTable
    com.alibaba.fastjson.util.IdentityHashMap getDerializers() -> getDerializers
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.reflect.Type) -> getDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.Class,java.lang.reflect.Type) -> getDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer createJavaBeanDeserializer(java.lang.Class,java.lang.reflect.Type) -> createJavaBeanDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializerWithoutASM(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializerWithoutASM
    void putDeserializer(java.lang.reflect.Type,com.alibaba.fastjson.parser.deserializer.ObjectDeserializer) -> putDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(com.alibaba.fastjson.util.FieldInfo) -> getDeserializer
    boolean isPrimitive(java.lang.Class) -> isPrimitive
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getField0(java.lang.Class,java.lang.String) -> getField0
    java.util.Map getFieldDeserializers(java.lang.Class) -> getFieldDeserializers
com.alibaba.fastjson.parser.SymbolTable -> com.alibaba.fastjson.parser.SymbolTable:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_BUCKET_LENTH -> MAX_BUCKET_LENTH
    int MAX_SIZE -> MAX_SIZE
    com.alibaba.fastjson.parser.SymbolTable$Entry[] buckets -> buckets
    java.lang.String[] symbols -> symbols
    char[][] symbols_char -> symbols_char
    int indexMask -> indexMask
    int size -> size
    java.lang.String addSymbol(char[],int,int) -> addSymbol
    java.lang.String addSymbol(char[],int,int,int) -> addSymbol
    java.lang.String addSymbol(java.lang.String,int,int,int) -> addSymbol
    int size() -> size
    int hash(char[],int,int) -> hash
com.alibaba.fastjson.parser.SymbolTable$Entry -> com.alibaba.fastjson.parser.SymbolTable$Entry:
    java.lang.String symbol -> symbol
    int hashCode -> hashCode
    char[] characters -> characters
    byte[] bytes -> bytes
    com.alibaba.fastjson.parser.SymbolTable$Entry next -> next
com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory -> com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory:
    com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory instance -> instance
    com.alibaba.fastjson.util.ASMClassLoader classLoader -> classLoader
    java.util.concurrent.atomic.AtomicLong seed -> seed
    java.lang.String getGenClassName(java.lang.Class) -> getGenClassName
    java.lang.String getGenFieldDeserializer(java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> getGenFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory getInstance() -> getInstance
    boolean isExternalClass(java.lang.Class) -> isExternalClass
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer createJavaBeanDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,java.lang.reflect.Type) -> createJavaBeanDeserializer
    void _setFlag(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,int) -> _setFlag
    void _isFlag(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,int,com.alibaba.fastjson.asm.Label) -> _isFlag
    void _deserialzeArrayMapping(com.alibaba.fastjson.asm.ClassWriter,com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context) -> _deserialzeArrayMapping
    void _deserialze(com.alibaba.fastjson.asm.ClassWriter,com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context) -> _deserialze
    java.lang.Class getCollectionItemClass(java.lang.reflect.Type) -> getCollectionItemClass
    void _isEnable(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.parser.Feature) -> _isEnable
    void defineVarLexer(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor) -> defineVarLexer
    void _createInstance(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor) -> _createInstance
    void _batchSet(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor) -> _batchSet
    void _batchSet(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,boolean) -> _batchSet
    void _loadAndSet(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo) -> _loadAndSet
    void _set(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo) -> _set
    void _setContext(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor) -> _setContext
    void _deserialize_endCheck(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.asm.Label) -> _deserialize_endCheck
    void _deserialze_list_obj(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.asm.Label,com.alibaba.fastjson.util.FieldInfo,java.lang.Class,java.lang.Class,int) -> _deserialze_list_obj
    void _getCollectionFieldItemDeser(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,java.lang.Class) -> _getCollectionFieldItemDeser
    void _newCollection(com.alibaba.fastjson.asm.MethodVisitor,java.lang.Class) -> _newCollection
    void _deserialze_obj(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.asm.Label,com.alibaba.fastjson.util.FieldInfo,java.lang.Class,int) -> _deserialze_obj
    void _deserObject(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,java.lang.Class) -> _deserObject
    void _getFieldDeser(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo) -> _getFieldDeser
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createStringFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createStringFieldDeserializer
    void _init(com.alibaba.fastjson.asm.ClassWriter,com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context) -> _init
    void _createInstance(com.alibaba.fastjson.asm.ClassWriter,com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context) -> _createInstance
com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context -> com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context:
    int variantIndex -> variantIndex
    java.util.Map variants -> variants
    java.lang.Class clazz -> clazz
    com.alibaba.fastjson.util.DeserializeBeanInfo beanInfo -> beanInfo
    java.lang.String className -> className
    java.util.List fieldInfoList -> fieldInfoList
    java.lang.String getClassName() -> getClassName
    java.util.List getFieldInfoList() -> getFieldInfoList
    com.alibaba.fastjson.util.DeserializeBeanInfo getBeanInfo() -> getBeanInfo
    java.lang.Class getClazz() -> getClazz
    int getVariantCount() -> getVariantCount
    int var(java.lang.String,int) -> var
    int var(java.lang.String) -> var
com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer -> com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer:
    com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$InnerJavaBeanDeserializer serializer -> serializer
    java.lang.Object createInstance(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type) -> createInstance
    com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$InnerJavaBeanDeserializer getInnterSerializer() -> getInnterSerializer
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
    java.lang.Object createInstance(com.alibaba.fastjson.parser.DefaultJSONParser) -> createInstance
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer getFieldDeserializer(java.lang.String) -> getFieldDeserializer
    java.lang.reflect.Type getFieldType(java.lang.String) -> getFieldType
    boolean parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.String,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    java.lang.Object parseRest(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> parseRest
com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$1 -> com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$1:
com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$InnerJavaBeanDeserializer -> com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$InnerJavaBeanDeserializer:
    com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer this$0 -> this$0
    boolean parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.String,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer -> com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
com.alibaba.fastjson.parser.deserializer.ArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.ArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.ArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object toObjectArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Class,com.alibaba.fastjson.JSONArray) -> toObjectArray
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer:
    java.lang.reflect.Type itemType -> itemType
    int itemFastMatchToken -> itemFastMatchToken
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer deserializer -> deserializer
    int getFastMatchToken() -> getFastMatchToken
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    void parseArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.util.Collection) -> parseArray
com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer:
    java.util.Set getAutowiredFor() -> getAutowiredFor
com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer:
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ClassDerializer -> com.alibaba.fastjson.parser.deserializer.ClassDerializer:
    com.alibaba.fastjson.parser.deserializer.ClassDerializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CollectionDeserializer -> com.alibaba.fastjson.parser.deserializer.CollectionDeserializer:
    com.alibaba.fastjson.parser.deserializer.CollectionDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Class getRawClass(java.lang.reflect.Type) -> getRawClass
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CollectionResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.CollectionResolveFieldDeserializer:
    java.util.Collection collection -> collection
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.DateDeserializer -> com.alibaba.fastjson.parser.deserializer.DateDeserializer:
    com.alibaba.fastjson.parser.deserializer.DateDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer -> com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer:
    com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.EnumDeserializer -> com.alibaba.fastjson.parser.deserializer.EnumDeserializer:
    java.lang.Class enumClass -> enumClass
    java.util.Map ordinalMap -> ordinalMap
    java.util.Map nameMap -> nameMap
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ExtraProcessor -> com.alibaba.fastjson.parser.deserializer.ExtraProcessor:
    void processExtra(java.lang.Object,java.lang.String,java.lang.Object) -> processExtra
com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider -> com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider:
    java.lang.reflect.Type getExtraType(java.lang.Object,java.lang.String) -> getExtraType
com.alibaba.fastjson.parser.deserializer.FieldDeserializer -> com.alibaba.fastjson.parser.deserializer.FieldDeserializer:
    com.alibaba.fastjson.util.FieldInfo fieldInfo -> fieldInfo
    java.lang.Class clazz -> clazz
    java.lang.reflect.Method getMethod() -> getMethod
    java.lang.reflect.Field getField() -> getField
    java.lang.Class getFieldClass() -> getFieldClass
    java.lang.reflect.Type getFieldType() -> getFieldType
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
    void setValue(java.lang.Object,boolean) -> setValue
    void setValue(java.lang.Object,int) -> setValue
    void setValue(java.lang.Object,long) -> setValue
    void setValue(java.lang.Object,java.lang.String) -> setValue
    void setValue(java.lang.Object,java.lang.Object) -> setValue
com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer:
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer:
    com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer -> com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer:
    java.util.Map feildDeserializerMap -> feildDeserializerMap
    java.util.List fieldDeserializers -> fieldDeserializers
    java.util.List sortedFieldDeserializers -> sortedFieldDeserializers
    java.lang.Class clazz -> clazz
    com.alibaba.fastjson.util.DeserializeBeanInfo beanInfo -> beanInfo
    java.util.Map getFieldDeserializerMap() -> getFieldDeserializerMap
    java.lang.Class getClazz() -> getClazz
    void addFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> addFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    java.lang.Object createInstance(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type) -> createInstance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialzeArrayMapping(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> deserialzeArrayMapping
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> deserialze
    boolean parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.String,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    void parseExtra(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.String) -> parseExtra
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer:
    com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer:
    int index -> index
    java.util.List list -> list
    com.alibaba.fastjson.parser.DefaultJSONParser parser -> parser
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.MapDeserializer -> com.alibaba.fastjson.parser.deserializer.MapDeserializer:
    com.alibaba.fastjson.parser.deserializer.MapDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.util.Map) -> deserialze
    java.util.Map parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.Object) -> parseMap
    java.lang.Object parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Object) -> parseMap
    java.util.Map createMap(java.lang.reflect.Type) -> createMap
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer:
    java.lang.String key -> key
    java.util.Map map -> map
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.NumberDeserializer -> com.alibaba.fastjson.parser.deserializer.NumberDeserializer:
    com.alibaba.fastjson.parser.deserializer.NumberDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.ObjectDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ParseProcess -> com.alibaba.fastjson.parser.deserializer.ParseProcess:
com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer -> com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer:
    com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer -> com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer:
    com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer -> com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Throwable createException(java.lang.String,java.lang.Throwable,java.lang.Class) -> createException
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimeDeserializer -> com.alibaba.fastjson.parser.deserializer.TimeDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimeDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimestampDeserializer -> com.alibaba.fastjson.parser.deserializer.TimestampDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimestampDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.ASMSerializerFactory -> com.alibaba.fastjson.serializer.ASMSerializerFactory:
    com.alibaba.fastjson.util.ASMClassLoader classLoader -> classLoader
    java.util.concurrent.atomic.AtomicLong seed -> seed
    com.alibaba.fastjson.serializer.ObjectSerializer createJavaBeanSerializer(java.lang.Class) -> createJavaBeanSerializer
    java.lang.String getGenClassName(java.lang.Class) -> getGenClassName
    boolean isExternalClass(java.lang.Class) -> isExternalClass
    com.alibaba.fastjson.serializer.ObjectSerializer createJavaBeanSerializer(java.lang.Class,java.util.Map) -> createJavaBeanSerializer
    void generateWriteAsArray(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,java.util.List,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> generateWriteAsArray
    void generateWriteMethod(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,java.util.List,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> generateWriteMethod
    void initNature(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> initNature
    void _object(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _object
    void _enum(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _enum
    void _long(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _long
    void _float(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _float
    void _double(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _double
    void _char(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _char
    void _boolean(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _boolean
    void _get(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context,com.alibaba.fastjson.util.FieldInfo) -> _get
    void _byte(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _byte
    void _short(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _short
    void _int(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _int
    void _decimal(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _decimal
    void _string(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _string
    void _list(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _list
    void _filters(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context,com.alibaba.fastjson.asm.Label) -> _filters
    void _nameApply(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context,com.alibaba.fastjson.asm.Label) -> _nameApply
    void _writeObject(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context,com.alibaba.fastjson.asm.Label) -> _writeObject
    void _before(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _before
    void _after(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _after
    void _apply(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _apply
    void _processValue(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _processValue
    void _processKey(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _processKey
    void _if_write_null(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _if_write_null
    void _seperator(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _seperator
com.alibaba.fastjson.serializer.ASMSerializerFactory$Context -> com.alibaba.fastjson.serializer.ASMSerializerFactory$Context:
    java.lang.String className -> className
    int variantIndex -> variantIndex
    java.util.Map variants -> variants
    int serializer() -> serializer
    java.lang.String getClassName() -> getClassName
    int obj() -> obj
    int paramFieldName() -> paramFieldName
    int paramFieldType() -> paramFieldType
    int fieldName() -> fieldName
    int original() -> original
    int processValue() -> processValue
    int getVariantCount() -> getVariantCount
    int var(java.lang.String) -> var
    int var(java.lang.String,int) -> var
com.alibaba.fastjson.serializer.AfterFilter -> com.alibaba.fastjson.serializer.AfterFilter:
    java.lang.ThreadLocal serializerLocal -> serializerLocal
    java.lang.ThreadLocal seperatorLocal -> seperatorLocal
    java.lang.Character COMMA -> COMMA
    char writeAfter(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,char) -> writeAfter
    void writeKeyValue(java.lang.String,java.lang.Object) -> writeKeyValue
    void writeAfter(java.lang.Object) -> writeAfter
com.alibaba.fastjson.serializer.AppendableSerializer -> com.alibaba.fastjson.serializer.AppendableSerializer:
    com.alibaba.fastjson.serializer.AppendableSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ArraySerializer -> com.alibaba.fastjson.serializer.ArraySerializer:
    java.lang.Class componentType -> componentType
    com.alibaba.fastjson.serializer.ObjectSerializer compObjectSerializer -> compObjectSerializer
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicBooleanSerializer -> com.alibaba.fastjson.serializer.AtomicBooleanSerializer:
    com.alibaba.fastjson.serializer.AtomicBooleanSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicIntegerArrayCodec -> com.alibaba.fastjson.serializer.AtomicIntegerArrayCodec:
    com.alibaba.fastjson.serializer.AtomicIntegerArrayCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.AtomicIntegerSerializer -> com.alibaba.fastjson.serializer.AtomicIntegerSerializer:
    com.alibaba.fastjson.serializer.AtomicIntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicLongArrayCodec -> com.alibaba.fastjson.serializer.AtomicLongArrayCodec:
    com.alibaba.fastjson.serializer.AtomicLongArrayCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.AtomicLongSerializer -> com.alibaba.fastjson.serializer.AtomicLongSerializer:
    com.alibaba.fastjson.serializer.AtomicLongSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AutowiredObjectSerializer -> com.alibaba.fastjson.serializer.AutowiredObjectSerializer:
    java.util.Set getAutowiredFor() -> getAutowiredFor
com.alibaba.fastjson.serializer.BeforeFilter -> com.alibaba.fastjson.serializer.BeforeFilter:
    java.lang.ThreadLocal serializerLocal -> serializerLocal
    java.lang.ThreadLocal seperatorLocal -> seperatorLocal
    java.lang.Character COMMA -> COMMA
    char writeBefore(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,char) -> writeBefore
    void writeKeyValue(java.lang.String,java.lang.Object) -> writeKeyValue
    void writeBefore(java.lang.Object) -> writeBefore
com.alibaba.fastjson.serializer.BigDecimalCodec -> com.alibaba.fastjson.serializer.BigDecimalCodec:
    com.alibaba.fastjson.serializer.BigDecimalCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.BigIntegerCodec -> com.alibaba.fastjson.serializer.BigIntegerCodec:
    com.alibaba.fastjson.serializer.BigIntegerCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.BooleanArraySerializer -> com.alibaba.fastjson.serializer.BooleanArraySerializer:
    com.alibaba.fastjson.serializer.BooleanArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BooleanCodec -> com.alibaba.fastjson.serializer.BooleanCodec:
    com.alibaba.fastjson.serializer.BooleanCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.ByteArraySerializer -> com.alibaba.fastjson.serializer.ByteArraySerializer:
    com.alibaba.fastjson.serializer.ByteArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ByteSerializer -> com.alibaba.fastjson.serializer.ByteSerializer:
    com.alibaba.fastjson.serializer.ByteSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CalendarCodec -> com.alibaba.fastjson.serializer.CalendarCodec:
    com.alibaba.fastjson.serializer.CalendarCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.CharArraySerializer -> com.alibaba.fastjson.serializer.CharArraySerializer:
    com.alibaba.fastjson.serializer.CharArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharacterCodec -> com.alibaba.fastjson.serializer.CharacterCodec:
    com.alibaba.fastjson.serializer.CharacterCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.CharsetCodec -> com.alibaba.fastjson.serializer.CharsetCodec:
    com.alibaba.fastjson.serializer.CharsetCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.ClassSerializer -> com.alibaba.fastjson.serializer.ClassSerializer:
    com.alibaba.fastjson.serializer.ClassSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ClobSeriliazer -> com.alibaba.fastjson.serializer.ClobSeriliazer:
    com.alibaba.fastjson.serializer.ClobSeriliazer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CollectionSerializer -> com.alibaba.fastjson.serializer.CollectionSerializer:
    com.alibaba.fastjson.serializer.CollectionSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ColorCodec -> com.alibaba.fastjson.serializer.ColorCodec:
    com.alibaba.fastjson.serializer.ColorCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.CurrencyCodec -> com.alibaba.fastjson.serializer.CurrencyCodec:
    com.alibaba.fastjson.serializer.CurrencyCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.DateFormatSerializer -> com.alibaba.fastjson.serializer.DateFormatSerializer:
    com.alibaba.fastjson.serializer.DateFormatSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DateSerializer -> com.alibaba.fastjson.serializer.DateSerializer:
    com.alibaba.fastjson.serializer.DateSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DoubleArraySerializer -> com.alibaba.fastjson.serializer.DoubleArraySerializer:
    com.alibaba.fastjson.serializer.DoubleArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DoubleSerializer -> com.alibaba.fastjson.serializer.DoubleSerializer:
    com.alibaba.fastjson.serializer.DoubleSerializer instance -> instance
    java.text.DecimalFormat decimalFormat -> decimalFormat
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.EnumSerializer -> com.alibaba.fastjson.serializer.EnumSerializer:
    com.alibaba.fastjson.serializer.EnumSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.EnumerationSeriliazer -> com.alibaba.fastjson.serializer.EnumerationSeriliazer:
    com.alibaba.fastjson.serializer.EnumerationSeriliazer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ExceptionSerializer -> com.alibaba.fastjson.serializer.ExceptionSerializer:
    boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
com.alibaba.fastjson.serializer.FieldSerializer -> com.alibaba.fastjson.serializer.FieldSerializer:
    com.alibaba.fastjson.util.FieldInfo fieldInfo -> fieldInfo
    java.lang.String double_quoted_fieldPrefix -> double_quoted_fieldPrefix
    java.lang.String single_quoted_fieldPrefix -> single_quoted_fieldPrefix
    java.lang.String un_quoted_fieldPrefix -> un_quoted_fieldPrefix
    boolean writeNull -> writeNull
    boolean isWriteNull() -> isWriteNull
    java.lang.reflect.Field getField() -> getField
    java.lang.String getName() -> getName
    java.lang.reflect.Method getMethod() -> getMethod
    void writePrefix(com.alibaba.fastjson.serializer.JSONSerializer) -> writePrefix
    java.lang.Object getPropertyValue(java.lang.Object) -> getPropertyValue
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
    void writeValue(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeValue
com.alibaba.fastjson.serializer.FileCodec -> com.alibaba.fastjson.serializer.FileCodec:
    com.alibaba.fastjson.serializer.FileCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.FilterUtils -> com.alibaba.fastjson.serializer.FilterUtils:
    java.lang.reflect.Type getExtratype(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.String) -> getExtratype
    void processExtra(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.String,java.lang.Object) -> processExtra
    char writeBefore(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,char) -> writeBefore
    char writeAfter(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,char) -> writeAfter
    java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> processValue
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,byte) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,short) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,int) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,long) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,float) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,double) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,boolean) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,char) -> processKey
    boolean applyName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> applyName
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,byte) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,short) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,int) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,char) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,long) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,float) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,double) -> apply
com.alibaba.fastjson.serializer.FloatArraySerializer -> com.alibaba.fastjson.serializer.FloatArraySerializer:
    com.alibaba.fastjson.serializer.FloatArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.FloatCodec -> com.alibaba.fastjson.serializer.FloatCodec:
    com.alibaba.fastjson.serializer.FloatCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.FontCodec -> com.alibaba.fastjson.serializer.FontCodec:
    com.alibaba.fastjson.serializer.FontCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.InetAddressCodec -> com.alibaba.fastjson.serializer.InetAddressCodec:
    com.alibaba.fastjson.serializer.InetAddressCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.InetSocketAddressCodec -> com.alibaba.fastjson.serializer.InetSocketAddressCodec:
    com.alibaba.fastjson.serializer.InetSocketAddressCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.IntArraySerializer -> com.alibaba.fastjson.serializer.IntArraySerializer:
    com.alibaba.fastjson.serializer.IntArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.IntegerCodec -> com.alibaba.fastjson.serializer.IntegerCodec:
    com.alibaba.fastjson.serializer.IntegerCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.JSONAwareSerializer -> com.alibaba.fastjson.serializer.JSONAwareSerializer:
    com.alibaba.fastjson.serializer.JSONAwareSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer -> com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer:
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONSerializer -> com.alibaba.fastjson.serializer.JSONSerializer:
    com.alibaba.fastjson.serializer.SerializeConfig config -> config
    com.alibaba.fastjson.serializer.SerializeWriter out -> out
    java.util.List beforeFilters -> beforeFilters
    java.util.List afterFilters -> afterFilters
    java.util.List propertyFilters -> propertyFilters
    java.util.List valueFilters -> valueFilters
    java.util.List nameFilters -> nameFilters
    java.util.List propertyPreFilters -> propertyPreFilters
    int indentCount -> indentCount
    java.lang.String indent -> indent
    java.lang.String dateFormatPattern -> dateFormatPattern
    java.text.DateFormat dateFormat -> dateFormat
    java.util.IdentityHashMap references -> references
    com.alibaba.fastjson.serializer.SerialContext context -> context
    java.lang.String getDateFormatPattern() -> getDateFormatPattern
    java.text.DateFormat getDateFormat() -> getDateFormat
    void setDateFormat(java.text.DateFormat) -> setDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    com.alibaba.fastjson.serializer.SerialContext getContext() -> getContext
    void setContext(com.alibaba.fastjson.serializer.SerialContext) -> setContext
    void setContext(com.alibaba.fastjson.serializer.SerialContext,java.lang.Object,java.lang.Object) -> setContext
    void setContext(java.lang.Object,java.lang.Object) -> setContext
    void popContext() -> popContext
    boolean isWriteClassName(java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
    com.alibaba.fastjson.serializer.SerialContext getSerialContext(java.lang.Object) -> getSerialContext
    boolean containsReference(java.lang.Object) -> containsReference
    void writeReference(java.lang.Object) -> writeReference
    java.util.List getValueFilters() -> getValueFilters
    java.util.List getValueFiltersDirect() -> getValueFiltersDirect
    int getIndentCount() -> getIndentCount
    void incrementIndent() -> incrementIndent
    void decrementIdent() -> decrementIdent
    void println() -> println
    java.util.List getBeforeFilters() -> getBeforeFilters
    java.util.List getBeforeFiltersDirect() -> getBeforeFiltersDirect
    java.util.List getAfterFilters() -> getAfterFilters
    java.util.List getAfterFiltersDirect() -> getAfterFiltersDirect
    java.util.List getNameFilters() -> getNameFilters
    java.util.List getNameFiltersDirect() -> getNameFiltersDirect
    java.util.List getPropertyPreFilters() -> getPropertyPreFilters
    java.util.List getPropertyPreFiltersDirect() -> getPropertyPreFiltersDirect
    java.util.List getPropertyFilters() -> getPropertyFilters
    java.util.List getPropertyFiltersDirect() -> getPropertyFiltersDirect
    com.alibaba.fastjson.serializer.SerializeWriter getWriter() -> getWriter
    java.lang.String toString() -> toString
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    void writeNull() -> writeNull
    com.alibaba.fastjson.serializer.SerializeConfig getMapping() -> getMapping
    void write(java.io.Writer,java.lang.Object) -> write
    void write(com.alibaba.fastjson.serializer.SerializeWriter,java.lang.Object) -> write
    void write(java.lang.Object) -> write
    void writeWithFieldName(java.lang.Object,java.lang.Object) -> writeWithFieldName
    void writeKeyValue(char,java.lang.String,java.lang.Object) -> writeKeyValue
    void writeWithFieldName(java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> writeWithFieldName
    void writeWithFormat(java.lang.Object,java.lang.String) -> writeWithFormat
    void write(java.lang.String) -> write
    com.alibaba.fastjson.serializer.ObjectSerializer getObjectWriter(java.lang.Class) -> getObjectWriter
    void close() -> close
    boolean isWriteAsArray(java.lang.Object,java.lang.reflect.Type) -> isWriteAsArray
com.alibaba.fastjson.serializer.JSONSerializerContext -> com.alibaba.fastjson.serializer.JSONSerializerContext:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    com.alibaba.fastjson.serializer.JSONSerializerContext$Entry[] buckets -> buckets
    int indexMask -> indexMask
    boolean put(java.lang.Object) -> put
com.alibaba.fastjson.serializer.JSONSerializerContext$Entry -> com.alibaba.fastjson.serializer.JSONSerializerContext$Entry:
    int hashCode -> hashCode
    java.lang.Object object -> object
    com.alibaba.fastjson.serializer.JSONSerializerContext$Entry next -> next
com.alibaba.fastjson.serializer.JSONSerializerMap -> com.alibaba.fastjson.serializer.JSONSerializerMap:
    boolean put(java.lang.Class,com.alibaba.fastjson.serializer.ObjectSerializer) -> put
com.alibaba.fastjson.serializer.JSONStreamAwareSerializer -> com.alibaba.fastjson.serializer.JSONStreamAwareSerializer:
    com.alibaba.fastjson.serializer.JSONStreamAwareSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JavaBeanSerializer -> com.alibaba.fastjson.serializer.JavaBeanSerializer:
    com.alibaba.fastjson.serializer.FieldSerializer[] getters -> getters
    com.alibaba.fastjson.serializer.FieldSerializer[] sortedGetters -> sortedGetters
    com.alibaba.fastjson.serializer.FieldSerializer[] getGetters() -> getGetters
    java.util.Map createAliasMap(java.lang.String[]) -> createAliasMap
    boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    void writeReference(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeReference
    com.alibaba.fastjson.serializer.FieldSerializer createFieldSerializer(com.alibaba.fastjson.util.FieldInfo) -> createFieldSerializer
com.alibaba.fastjson.serializer.ListSerializer -> com.alibaba.fastjson.serializer.ListSerializer:
    com.alibaba.fastjson.serializer.ListSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LocaleCodec -> com.alibaba.fastjson.serializer.LocaleCodec:
    com.alibaba.fastjson.serializer.LocaleCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.LongArraySerializer -> com.alibaba.fastjson.serializer.LongArraySerializer:
    com.alibaba.fastjson.serializer.LongArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LongCodec -> com.alibaba.fastjson.serializer.LongCodec:
    com.alibaba.fastjson.serializer.LongCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.MapSerializer -> com.alibaba.fastjson.serializer.MapSerializer:
    com.alibaba.fastjson.serializer.MapSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.NameFilter -> com.alibaba.fastjson.serializer.NameFilter:
    java.lang.String process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.serializer.NumberFieldSerializer -> com.alibaba.fastjson.serializer.NumberFieldSerializer:
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
    void writeValue(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeValue
com.alibaba.fastjson.serializer.ObjectArraySerializer -> com.alibaba.fastjson.serializer.ObjectArraySerializer:
    com.alibaba.fastjson.serializer.ObjectArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ObjectFieldSerializer -> com.alibaba.fastjson.serializer.ObjectFieldSerializer:
    com.alibaba.fastjson.serializer.ObjectSerializer fieldSerializer -> fieldSerializer
    java.lang.Class runtimeFieldClass -> runtimeFieldClass
    java.lang.String format -> format
    boolean writeNumberAsZero -> writeNumberAsZero
    boolean writeNullStringAsEmpty -> writeNullStringAsEmpty
    boolean writeNullBooleanAsFalse -> writeNullBooleanAsFalse
    boolean writeNullListAsEmpty -> writeNullListAsEmpty
    boolean writeEnumUsingToString -> writeEnumUsingToString
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
    void writeValue(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeValue
com.alibaba.fastjson.serializer.ObjectSerializer -> com.alibaba.fastjson.serializer.ObjectSerializer:
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.PascalNameFilter -> com.alibaba.fastjson.serializer.PascalNameFilter:
    java.lang.String process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.serializer.PatternCodec -> com.alibaba.fastjson.serializer.PatternCodec:
    com.alibaba.fastjson.serializer.PatternCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.PointCodec -> com.alibaba.fastjson.serializer.PointCodec:
    com.alibaba.fastjson.serializer.PointCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.PropertyFilter -> com.alibaba.fastjson.serializer.PropertyFilter:
    boolean apply(java.lang.Object,java.lang.String,java.lang.Object) -> apply
com.alibaba.fastjson.serializer.PropertyPreFilter -> com.alibaba.fastjson.serializer.PropertyPreFilter:
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> apply
com.alibaba.fastjson.serializer.RectangleCodec -> com.alibaba.fastjson.serializer.RectangleCodec:
    com.alibaba.fastjson.serializer.RectangleCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.ReferenceCodec -> com.alibaba.fastjson.serializer.ReferenceCodec:
    com.alibaba.fastjson.serializer.ReferenceCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.SerialContext -> com.alibaba.fastjson.serializer.SerialContext:
    com.alibaba.fastjson.serializer.SerialContext parent -> parent
    java.lang.Object object -> object
    java.lang.Object fieldName -> fieldName
    com.alibaba.fastjson.serializer.SerialContext getParent() -> getParent
    java.lang.Object getObject() -> getObject
    java.lang.Object getFieldName() -> getFieldName
    java.lang.String getPath() -> getPath
    java.lang.String toString() -> toString
com.alibaba.fastjson.serializer.SerialWriterStringEncoder -> com.alibaba.fastjson.serializer.SerialWriterStringEncoder:
    java.nio.charset.CharsetEncoder encoder -> encoder
    byte[] encode(char[],int,int) -> encode
    java.nio.charset.CharsetEncoder getEncoder() -> getEncoder
    byte[] encode(char[],int,int,byte[]) -> encode
    int scale(int,float) -> scale
com.alibaba.fastjson.serializer.SerializeConfig -> com.alibaba.fastjson.serializer.SerializeConfig:
    com.alibaba.fastjson.serializer.SerializeConfig globalInstance -> globalInstance
    boolean asm -> asm
    com.alibaba.fastjson.serializer.ASMSerializerFactory asmFactory -> asmFactory
    java.lang.String typeKey -> typeKey
    java.lang.String getTypeKey() -> getTypeKey
    void setTypeKey(java.lang.String) -> setTypeKey
    com.alibaba.fastjson.serializer.ObjectSerializer createASMSerializer(java.lang.Class) -> createASMSerializer
    com.alibaba.fastjson.serializer.ObjectSerializer createJavaBeanSerializer(java.lang.Class) -> createJavaBeanSerializer
    boolean isAsmEnable() -> isAsmEnable
    void setAsmEnable(boolean) -> setAsmEnable
    com.alibaba.fastjson.serializer.SerializeConfig getGlobalInstance() -> getGlobalInstance
com.alibaba.fastjson.serializer.SerializeFilter -> com.alibaba.fastjson.serializer.SerializeFilter:
com.alibaba.fastjson.serializer.SerializeWriter -> com.alibaba.fastjson.serializer.SerializeWriter:
    char[] buf -> buf
    int count -> count
    java.lang.ThreadLocal bufLocal -> bufLocal
    int features -> features
    java.io.Writer writer -> writer
    int getBufferLength() -> getBufferLength
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    void write(int) -> write
    void write(char) -> write
    void write(char[],int,int) -> write
    void expandCapacity(int) -> expandCapacity
    void write(java.lang.String,int,int) -> write
    void writeTo(java.io.Writer) -> writeTo
    void writeTo(java.io.OutputStream,java.lang.String) -> writeTo
    void writeTo(java.io.OutputStream,java.nio.charset.Charset) -> writeTo
    com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence) -> append
    com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence,int,int) -> append
    com.alibaba.fastjson.serializer.SerializeWriter append(char) -> append
    void reset() -> reset
    char[] toCharArray() -> toCharArray
    byte[] toBytes(java.lang.String) -> toBytes
    int size() -> size
    java.lang.String toString() -> toString
    void close() -> close
    void write(java.lang.String) -> write
    void writeInt(int) -> writeInt
    void writeByteArray(byte[]) -> writeByteArray
    void writeFloatAndChar(float,char) -> writeFloatAndChar
    void writeDoubleAndChar(double,char) -> writeDoubleAndChar
    void writeBooleanAndChar(boolean,char) -> writeBooleanAndChar
    void writeCharacterAndChar(char,char) -> writeCharacterAndChar
    void writeEnum(java.lang.Enum,char) -> writeEnum
    void writeIntAndChar(int,char) -> writeIntAndChar
    void writeLongAndChar(long,char) -> writeLongAndChar
    void writeLong(long) -> writeLong
    void writeNull() -> writeNull
    void writeStringWithDoubleQuote(java.lang.String,char) -> writeStringWithDoubleQuote
    void writeStringWithDoubleQuote(java.lang.String,char,boolean) -> writeStringWithDoubleQuote
    void writeFieldNull(char,java.lang.String) -> writeFieldNull
    void writeFieldEmptyList(char,java.lang.String) -> writeFieldEmptyList
    void writeFieldNullString(char,java.lang.String) -> writeFieldNullString
    void writeFieldNullBoolean(char,java.lang.String) -> writeFieldNullBoolean
    void writeFieldNullList(char,java.lang.String) -> writeFieldNullList
    void writeFieldNullNumber(char,java.lang.String) -> writeFieldNullNumber
    void writeFieldValue(char,java.lang.String,char) -> writeFieldValue
    void writeFieldValue(char,java.lang.String,boolean) -> writeFieldValue
    void write(boolean) -> write
    void writeFieldValue(char,java.lang.String,int) -> writeFieldValue
    void writeFieldValue1(char,java.lang.String,int) -> writeFieldValue1
    void writeFieldValue(char,java.lang.String,long) -> writeFieldValue
    void writeFieldValue1(char,java.lang.String,long) -> writeFieldValue1
    void writeFieldValue(char,java.lang.String,float) -> writeFieldValue
    void writeFieldValue(char,java.lang.String,double) -> writeFieldValue
    void writeFieldValue(char,java.lang.String,java.lang.String) -> writeFieldValue
    void writeFieldValueStringWithDoubleQuote(char,java.lang.String,java.lang.String,boolean) -> writeFieldValueStringWithDoubleQuote
    boolean isSpecial(char,int) -> isSpecial
    void writeFieldValue(char,java.lang.String,java.lang.Enum) -> writeFieldValue
    void writeFieldValue(char,java.lang.String,java.math.BigDecimal) -> writeFieldValue
    void writeString(java.lang.String,char) -> writeString
    void writeString(java.lang.String) -> writeString
    void writeStringWithSingleQuote(java.lang.String) -> writeStringWithSingleQuote
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(java.lang.String,boolean) -> writeFieldName
    void writeKeyWithDoubleQuoteIfHasSpecial(java.lang.String) -> writeKeyWithDoubleQuoteIfHasSpecial
    void writeKeyWithSingleQuoteIfHasSpecial(java.lang.String) -> writeKeyWithSingleQuoteIfHasSpecial
    void flush() -> flush
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.alibaba.fastjson.serializer.SerializerFeature -> com.alibaba.fastjson.serializer.SerializerFeature:
    com.alibaba.fastjson.serializer.SerializerFeature QuoteFieldNames -> QuoteFieldNames
    com.alibaba.fastjson.serializer.SerializerFeature UseSingleQuotes -> UseSingleQuotes
    com.alibaba.fastjson.serializer.SerializerFeature WriteMapNullValue -> WriteMapNullValue
    com.alibaba.fastjson.serializer.SerializerFeature WriteEnumUsingToString -> WriteEnumUsingToString
    com.alibaba.fastjson.serializer.SerializerFeature UseISO8601DateFormat -> UseISO8601DateFormat
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullListAsEmpty -> WriteNullListAsEmpty
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullStringAsEmpty -> WriteNullStringAsEmpty
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullNumberAsZero -> WriteNullNumberAsZero
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullBooleanAsFalse -> WriteNullBooleanAsFalse
    com.alibaba.fastjson.serializer.SerializerFeature SkipTransientField -> SkipTransientField
    com.alibaba.fastjson.serializer.SerializerFeature SortField -> SortField
    com.alibaba.fastjson.serializer.SerializerFeature WriteTabAsSpecial -> WriteTabAsSpecial
    com.alibaba.fastjson.serializer.SerializerFeature PrettyFormat -> PrettyFormat
    com.alibaba.fastjson.serializer.SerializerFeature WriteClassName -> WriteClassName
    com.alibaba.fastjson.serializer.SerializerFeature DisableCircularReferenceDetect -> DisableCircularReferenceDetect
    com.alibaba.fastjson.serializer.SerializerFeature WriteSlashAsSpecial -> WriteSlashAsSpecial
    com.alibaba.fastjson.serializer.SerializerFeature BrowserCompatible -> BrowserCompatible
    com.alibaba.fastjson.serializer.SerializerFeature WriteDateUseDateFormat -> WriteDateUseDateFormat
    com.alibaba.fastjson.serializer.SerializerFeature NotWriteRootClassName -> NotWriteRootClassName
    com.alibaba.fastjson.serializer.SerializerFeature DisableCheckSpecialChar -> DisableCheckSpecialChar
    com.alibaba.fastjson.serializer.SerializerFeature BeanToArray -> BeanToArray
    com.alibaba.fastjson.serializer.SerializerFeature WriteNonStringKeyAsString -> WriteNonStringKeyAsString
    int mask -> mask
    com.alibaba.fastjson.serializer.SerializerFeature[] $VALUES -> $VALUES
    com.alibaba.fastjson.serializer.SerializerFeature[] values() -> values
    com.alibaba.fastjson.serializer.SerializerFeature valueOf(java.lang.String) -> valueOf
    int getMask() -> getMask
    boolean isEnabled(int,com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    int config(int,com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
com.alibaba.fastjson.serializer.ShortArraySerializer -> com.alibaba.fastjson.serializer.ShortArraySerializer:
    com.alibaba.fastjson.serializer.ShortArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ShortSerializer -> com.alibaba.fastjson.serializer.ShortSerializer:
    com.alibaba.fastjson.serializer.ShortSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SimpleDateFormatSerializer -> com.alibaba.fastjson.serializer.SimpleDateFormatSerializer:
    java.lang.String pattern -> pattern
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SimplePropertyPreFilter -> com.alibaba.fastjson.serializer.SimplePropertyPreFilter:
    java.lang.Class clazz -> clazz
    java.util.Set includes -> includes
    java.util.Set excludes -> excludes
    java.lang.Class getClazz() -> getClazz
    java.util.Set getIncludes() -> getIncludes
    java.util.Set getExcludes() -> getExcludes
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> apply
com.alibaba.fastjson.serializer.StringCodec -> com.alibaba.fastjson.serializer.StringCodec:
    com.alibaba.fastjson.serializer.StringCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.String) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.TimeZoneCodec -> com.alibaba.fastjson.serializer.TimeZoneCodec:
    com.alibaba.fastjson.serializer.TimeZoneCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.URICodec -> com.alibaba.fastjson.serializer.URICodec:
    com.alibaba.fastjson.serializer.URICodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.URLCodec -> com.alibaba.fastjson.serializer.URLCodec:
    com.alibaba.fastjson.serializer.URLCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.UUIDCodec -> com.alibaba.fastjson.serializer.UUIDCodec:
    com.alibaba.fastjson.serializer.UUIDCodec instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.ValueFilter -> com.alibaba.fastjson.serializer.ValueFilter:
    java.lang.Object process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter -> com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter:
    java.nio.charset.Charset UTF8 -> UTF8
    java.nio.charset.Charset charset -> charset
    com.alibaba.fastjson.serializer.SerializerFeature[] features -> features
    boolean supports(java.lang.Class) -> supports
    java.nio.charset.Charset getCharset() -> getCharset
    void setCharset(java.nio.charset.Charset) -> setCharset
    com.alibaba.fastjson.serializer.SerializerFeature[] getFeatures() -> getFeatures
    void setFeatures(com.alibaba.fastjson.serializer.SerializerFeature[]) -> setFeatures
    java.lang.Object readInternal(java.lang.Class,org.springframework.http.HttpInputMessage) -> readInternal
    void writeInternal(java.lang.Object,org.springframework.http.HttpOutputMessage) -> writeInternal
com.alibaba.fastjson.support.spring.FastJsonJsonView -> com.alibaba.fastjson.support.spring.FastJsonJsonView:
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    java.nio.charset.Charset UTF8 -> UTF8
    java.nio.charset.Charset charset -> charset
    com.alibaba.fastjson.serializer.SerializerFeature[] serializerFeatures -> serializerFeatures
    java.util.Set renderedAttributes -> renderedAttributes
    boolean disableCaching -> disableCaching
    boolean updateContentLength -> updateContentLength
    void setRenderedAttributes(java.util.Set) -> setRenderedAttributes
    void setSerializerFeature(com.alibaba.fastjson.serializer.SerializerFeature[]) -> setSerializerFeature
    java.nio.charset.Charset getCharset() -> getCharset
    void setCharset(java.nio.charset.Charset) -> setCharset
    com.alibaba.fastjson.serializer.SerializerFeature[] getFeatures() -> getFeatures
    void setFeatures(com.alibaba.fastjson.serializer.SerializerFeature[]) -> setFeatures
    void renderMergedOutputModel(java.util.Map,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> renderMergedOutputModel
    void prepareResponse(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> prepareResponse
    void setDisableCaching(boolean) -> setDisableCaching
    void setUpdateContentLength(boolean) -> setUpdateContentLength
    java.lang.Object filterModel(java.util.Map) -> filterModel
com.alibaba.fastjson.util.ASMClassLoader -> com.alibaba.fastjson.util.ASMClassLoader:
    java.security.ProtectionDomain DOMAIN -> DOMAIN
    java.lang.ClassLoader getParentClassLoader() -> getParentClassLoader
    java.lang.Class defineClassPublic(java.lang.String,byte[],int,int) -> defineClassPublic
    boolean isExternalClass(java.lang.Class) -> isExternalClass
com.alibaba.fastjson.util.ASMClassLoader$1 -> com.alibaba.fastjson.util.ASMClassLoader$1:
    java.lang.Object run() -> run
com.alibaba.fastjson.util.ASMUtils -> com.alibaba.fastjson.util.ASMUtils:
    boolean isAndroid(java.lang.String) -> isAndroid
    boolean isAndroid() -> isAndroid
    java.lang.String getDesc(java.lang.reflect.Method) -> getDesc
    java.lang.String getDesc(java.lang.Class) -> getDesc
    java.lang.String getType(java.lang.Class) -> getType
    java.lang.String getPrimitiveLetter(java.lang.Class) -> getPrimitiveLetter
    java.lang.reflect.Type getMethodType(java.lang.Class,java.lang.String) -> getMethodType
    java.lang.reflect.Type getFieldType(java.lang.Class,java.lang.String) -> getFieldType
    void parseArray(java.util.Collection,com.alibaba.fastjson.parser.deserializer.ObjectDeserializer,com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> parseArray
com.alibaba.fastjson.util.Base64 -> com.alibaba.fastjson.util.Base64:
    char[] CA -> CA
    int[] IA -> IA
    byte[] decodeFast(char[],int,int) -> decodeFast
    byte[] decodeFast(java.lang.String,int,int) -> decodeFast
    byte[] decodeFast(java.lang.String) -> decodeFast
com.alibaba.fastjson.util.DeserializeBeanInfo -> com.alibaba.fastjson.util.DeserializeBeanInfo:
    java.lang.Class clazz -> clazz
    java.lang.reflect.Constructor defaultConstructor -> defaultConstructor
    java.lang.reflect.Constructor creatorConstructor -> creatorConstructor
    java.lang.reflect.Method factoryMethod -> factoryMethod
    java.util.List fieldList -> fieldList
    java.util.List sortedFieldList -> sortedFieldList
    java.lang.reflect.Constructor getDefaultConstructor() -> getDefaultConstructor
    void setDefaultConstructor(java.lang.reflect.Constructor) -> setDefaultConstructor
    java.lang.reflect.Constructor getCreatorConstructor() -> getCreatorConstructor
    void setCreatorConstructor(java.lang.reflect.Constructor) -> setCreatorConstructor
    java.lang.reflect.Method getFactoryMethod() -> getFactoryMethod
    void setFactoryMethod(java.lang.reflect.Method) -> setFactoryMethod
    java.lang.Class getClazz() -> getClazz
    java.util.List getFieldList() -> getFieldList
    java.util.List getSortedFieldList() -> getSortedFieldList
    com.alibaba.fastjson.util.FieldInfo getField(java.lang.String) -> getField
    boolean add(com.alibaba.fastjson.util.FieldInfo) -> add
    com.alibaba.fastjson.util.DeserializeBeanInfo computeSetters(java.lang.Class,java.lang.reflect.Type) -> computeSetters
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Constructor getDefaultConstructor(java.lang.Class) -> getDefaultConstructor
    java.lang.reflect.Constructor getCreatorConstructor(java.lang.Class) -> getCreatorConstructor
    java.lang.reflect.Method getFactoryMethod(java.lang.Class) -> getFactoryMethod
com.alibaba.fastjson.util.FieldInfo -> com.alibaba.fastjson.util.FieldInfo:
    java.lang.String name -> name
    java.lang.reflect.Method method -> method
    java.lang.reflect.Field field -> field
    java.lang.Class fieldClass -> fieldClass
    java.lang.reflect.Type fieldType -> fieldType
    java.lang.Class declaringClass -> declaringClass
    boolean getOnly -> getOnly
    java.lang.reflect.Type getFieldType(java.lang.Class,java.lang.reflect.Type,java.lang.reflect.Type) -> getFieldType
    java.lang.reflect.Type getInheritGenericType(java.lang.Class,java.lang.reflect.TypeVariable) -> getInheritGenericType
    java.lang.String toString() -> toString
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.Class getFieldClass() -> getFieldClass
    java.lang.reflect.Type getFieldType() -> getFieldType
    java.lang.String getName() -> getName
    java.lang.reflect.Method getMethod() -> getMethod
    java.lang.reflect.Field getField() -> getField
    int compareTo(com.alibaba.fastjson.util.FieldInfo) -> compareTo
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.String getFormat() -> getFormat
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
    void setAccessible(boolean) -> setAccessible
    boolean isGetOnly() -> isGetOnly
    int compareTo(java.lang.Object) -> compareTo
com.alibaba.fastjson.util.IOUtils -> com.alibaba.fastjson.util.IOUtils:
    char[] digits -> digits
    char[] DigitTens -> DigitTens
    char[] DigitOnes -> DigitOnes
    int[] sizeTable -> sizeTable
    void close(java.io.Closeable) -> close
    int stringSize(long) -> stringSize
    void getChars(long,int,char[]) -> getChars
    void getChars(int,int,char[]) -> getChars
    void getChars(byte,int,char[]) -> getChars
    int stringSize(int) -> stringSize
    void decode(java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,java.nio.CharBuffer) -> decode
com.alibaba.fastjson.util.IdentityHashMap -> com.alibaba.fastjson.util.IdentityHashMap:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    com.alibaba.fastjson.util.IdentityHashMap$Entry[] buckets -> buckets
    int indexMask -> indexMask
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    int size() -> size
com.alibaba.fastjson.util.IdentityHashMap$Entry -> com.alibaba.fastjson.util.IdentityHashMap$Entry:
    int hashCode -> hashCode
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.alibaba.fastjson.util.IdentityHashMap$Entry next -> next
com.alibaba.fastjson.util.ParameterizedTypeImpl -> com.alibaba.fastjson.util.ParameterizedTypeImpl:
    java.lang.reflect.Type[] actualTypeArguments -> actualTypeArguments
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.reflect.Type getRawType() -> getRawType
com.alibaba.fastjson.util.ServiceLoader -> com.alibaba.fastjson.util.ServiceLoader:
    java.lang.String PREFIX -> PREFIX
    java.util.Set loadedUrls -> loadedUrls
    java.util.Set load(java.lang.Class,java.lang.ClassLoader) -> load
    void load(java.net.URL,java.util.Set) -> load
com.alibaba.fastjson.util.ThreadLocalCache -> com.alibaba.fastjson.util.ThreadLocalCache:
    int CHARS_CACH_INIT_SIZE -> CHARS_CACH_INIT_SIZE
    int CHARS_CACH_MAX_SIZE -> CHARS_CACH_MAX_SIZE
    java.lang.ThreadLocal charsBufLocal -> charsBufLocal
    java.lang.ThreadLocal decoderLocal -> decoderLocal
    int BYTES_CACH_INIT_SIZE -> BYTES_CACH_INIT_SIZE
    int BYTeS_CACH_MAX_SIZE -> BYTeS_CACH_MAX_SIZE
    java.lang.ThreadLocal bytesBufLocal -> bytesBufLocal
    java.nio.charset.CharsetDecoder getUTF8Decoder() -> getUTF8Decoder
    void clearChars() -> clearChars
    char[] getChars(int) -> getChars
    char[] allocate(int) -> allocate
    int getAllocateLength(int,int,int) -> getAllocateLength
    void clearBytes() -> clearBytes
    byte[] getBytes(int) -> getBytes
    byte[] allocateBytes(int) -> allocateBytes
com.alibaba.fastjson.util.TypeUtils -> com.alibaba.fastjson.util.TypeUtils:
    boolean compatibleWithJavaBean -> compatibleWithJavaBean
    java.util.concurrent.ConcurrentMap mappings -> mappings
    java.lang.String castToString(java.lang.Object) -> castToString
    java.lang.Byte castToByte(java.lang.Object) -> castToByte
    java.lang.Character castToChar(java.lang.Object) -> castToChar
    java.lang.Short castToShort(java.lang.Object) -> castToShort
    java.math.BigDecimal castToBigDecimal(java.lang.Object) -> castToBigDecimal
    java.math.BigInteger castToBigInteger(java.lang.Object) -> castToBigInteger
    java.lang.Float castToFloat(java.lang.Object) -> castToFloat
    java.lang.Double castToDouble(java.lang.Object) -> castToDouble
    java.util.Date castToDate(java.lang.Object) -> castToDate
    java.sql.Date castToSqlDate(java.lang.Object) -> castToSqlDate
    java.sql.Timestamp castToTimestamp(java.lang.Object) -> castToTimestamp
    java.lang.Long castToLong(java.lang.Object) -> castToLong
    java.lang.Integer castToInt(java.lang.Object) -> castToInt
    byte[] castToBytes(java.lang.Object) -> castToBytes
    java.lang.Boolean castToBoolean(java.lang.Object) -> castToBoolean
    java.lang.Object castToJavaBean(java.lang.Object,java.lang.Class) -> castToJavaBean
    java.lang.Object cast(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object castToEnum(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> castToEnum
    java.lang.Object cast(java.lang.Object,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object cast(java.lang.Object,java.lang.reflect.ParameterizedType,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object castToJavaBean(java.util.Map,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> castToJavaBean
    void addClassMapping(java.lang.String,java.lang.Class) -> addClassMapping
    void addBaseClassMappings() -> addBaseClassMappings
    void clearClassMapping() -> clearClassMapping
    java.lang.Class loadClass(java.lang.String) -> loadClass
    java.util.List computeGetters(java.lang.Class,java.util.Map) -> computeGetters
    java.util.List computeGetters(java.lang.Class,java.util.Map,boolean) -> computeGetters
    com.alibaba.fastjson.annotation.JSONField getSupperMethodAnnotation(java.lang.Class,java.lang.reflect.Method) -> getSupperMethodAnnotation
    boolean isJSONTypeIgnore(java.lang.Class,java.lang.String) -> isJSONTypeIgnore
    java.lang.Class getClass(java.lang.reflect.Type) -> getClass
com.alibaba.fastjson.util.UTF8Decoder -> com.alibaba.fastjson.util.UTF8Decoder:
    java.nio.charset.Charset charset -> charset
    boolean isNotContinuation(int) -> isNotContinuation
    boolean isMalformed2(int,int) -> isMalformed2
    boolean isMalformed3(int,int,int) -> isMalformed3
    boolean isMalformed4(int,int,int) -> isMalformed4
    java.nio.charset.CoderResult lookupN(java.nio.ByteBuffer,int) -> lookupN
    java.nio.charset.CoderResult malformedN(java.nio.ByteBuffer,int) -> malformedN
    java.nio.charset.CoderResult malformed(java.nio.ByteBuffer,int,java.nio.CharBuffer,int,int) -> malformed
    java.nio.charset.CoderResult xflow(java.nio.Buffer,int,int,java.nio.Buffer,int,int) -> xflow
    java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer,java.nio.CharBuffer) -> decodeArrayLoop
    java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer) -> decodeLoop
    void updatePositions(java.nio.Buffer,int,java.nio.Buffer,int) -> updatePositions
com.alibaba.fastjson.util.UTF8Decoder$Surrogate -> com.alibaba.fastjson.util.UTF8Decoder$Surrogate:
    int UCS4_MIN -> UCS4_MIN
    int UCS4_MAX -> UCS4_MAX
    boolean $assertionsDisabled -> $assertionsDisabled
    boolean neededFor(int) -> neededFor
    char high(int) -> high
    char low(int) -> low
com.baidu.android.bbalbs.common.a.a -> com.baidu.android.bbalbs.common.a.a:
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.android.bbalbs.common.a.b -> com.baidu.android.bbalbs.common.a.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.android.bbalbs.common.a.c -> com.baidu.android.bbalbs.common.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.android.bbalbs.common.a.d -> com.baidu.android.bbalbs.common.a.d:
    byte[] a(byte[]) -> a
com.baidu.android.bbalbs.common.util.CommonParam -> com.baidu.android.bbalbs.common.util.CommonParam:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
com.baidu.android.bbalbs.common.util.a -> com.baidu.android.bbalbs.common.util.a:
    byte[] a() -> a
com.baidu.android.bbalbs.common.util.b -> com.baidu.android.bbalbs.common.util.b:
    android.content.Context a -> a
    int b -> b
    java.security.PublicKey c -> c
    com.baidu.android.bbalbs.common.util.b$b d -> d
    java.lang.String a(byte[]) -> a
    java.lang.String[] a(android.content.pm.Signature[]) -> a
    byte[] a(byte[],java.security.PublicKey) -> a
    void a() -> a
    java.util.List a(android.content.Intent,boolean) -> a
    boolean a(java.lang.String[],java.lang.String[]) -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean a(java.lang.String,java.lang.String) -> a
    void b(java.lang.Throwable) -> b
    java.lang.String a(java.io.File) -> a
    java.lang.String a(android.content.Context) -> a
    com.baidu.android.bbalbs.common.util.b$b c(android.content.Context) -> c
    java.lang.String b(android.content.Context) -> b
    com.baidu.android.bbalbs.common.util.b$b b() -> b
    boolean c() -> c
    boolean c(java.lang.String) -> c
    com.baidu.android.bbalbs.common.util.b$b d() -> d
    com.baidu.android.bbalbs.common.util.b$b e() -> e
    com.baidu.android.bbalbs.common.util.b$b d(java.lang.String) -> d
    java.lang.String e(java.lang.String) -> e
    java.lang.String f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void b(java.lang.String,java.lang.String) -> b
    java.lang.String h(java.lang.String) -> h
    java.lang.String i(java.lang.String) -> i
    void a(java.lang.Throwable) -> a
com.baidu.android.bbalbs.common.util.b$a -> com.baidu.android.bbalbs.common.util.b$a:
    android.content.pm.ApplicationInfo a -> a
    int b -> b
    boolean c -> c
    boolean d -> d
com.baidu.android.bbalbs.common.util.b$b -> com.baidu.android.bbalbs.common.util.b$b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    com.baidu.android.bbalbs.common.util.b$b a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
com.baidu.android.bbalbs.common.util.c -> com.baidu.android.bbalbs.common.util.c:
    com.baidu.android.bbalbs.common.util.b a -> a
    int a(com.baidu.android.bbalbs.common.util.b$a,com.baidu.android.bbalbs.common.util.b$a) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.baidu.lbsapi.auth.ErrorMessage -> com.baidu.lbsapi.auth.ErrorMessage:
    java.lang.String a(java.lang.String) -> a
com.baidu.lbsapi.auth.LBSAuthManager -> com.baidu.lbsapi.auth.LBSAuthManager:
    int CODE_UNAUTHENTICATE -> CODE_UNAUTHENTICATE
    int CODE_AUTHENTICATING -> CODE_AUTHENTICATING
    int CODE_AUTHENTICATE_SUCC -> CODE_AUTHENTICATE_SUCC
    java.lang.String VERSION -> VERSION
    android.content.Context a -> a
    com.baidu.lbsapi.auth.c b -> b
    com.baidu.lbsapi.auth.e c -> c
    com.baidu.lbsapi.auth.l d -> d
    int e -> e
    java.util.Hashtable f -> f
    com.baidu.lbsapi.auth.LBSAuthManager g -> g
    android.os.Handler h -> h
    void d() -> d
    com.baidu.lbsapi.auth.LBSAuthManager getInstance(android.content.Context) -> getInstance
    java.lang.String getPublicKey(android.content.Context) -> getPublicKey
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    int a(java.lang.String) -> a
    int authenticate(boolean,java.lang.String,java.util.Hashtable,com.baidu.lbsapi.auth.LBSAuthManagerListener) -> authenticate
    boolean b(java.lang.String) -> b
    void a(boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> a
    void a(boolean,java.lang.String,java.util.Hashtable,java.lang.String[],java.lang.String) -> a
    java.lang.String e() -> e
    void c(java.lang.String) -> c
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(int) -> a
    java.util.Hashtable a() -> a
    boolean a(com.baidu.lbsapi.auth.LBSAuthManager,java.lang.String) -> a
    android.content.Context b() -> b
    void a(com.baidu.lbsapi.auth.LBSAuthManager,boolean,java.lang.String,java.util.Hashtable,java.lang.String[],java.lang.String) -> a
    void a(com.baidu.lbsapi.auth.LBSAuthManager,boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> a
    com.baidu.lbsapi.auth.l c() -> c
    void a(com.baidu.lbsapi.auth.LBSAuthManager,java.lang.String,java.lang.String) -> a
com.baidu.lbsapi.auth.LBSAuthManagerListener -> com.baidu.lbsapi.auth.LBSAuthManagerListener:
    void onAuthResult(int,java.lang.String) -> onAuthResult
com.baidu.lbsapi.auth.a -> com.baidu.lbsapi.auth.a:
    boolean a -> a
    java.lang.String b -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String a() -> a
com.baidu.lbsapi.auth.b -> com.baidu.lbsapi.auth.b:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String[] b(android.content.Context) -> b
    java.lang.String[] b(android.content.Context,java.lang.String) -> b
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    boolean c(android.content.Context,java.lang.String) -> c
    java.lang.String a() -> a
com.baidu.lbsapi.auth.b$a -> com.baidu.lbsapi.auth.b$a:
    java.lang.String a(byte[]) -> a
com.baidu.lbsapi.auth.c -> com.baidu.lbsapi.auth.c:
    android.content.Context a -> a
    java.util.HashMap b -> b
    com.baidu.lbsapi.auth.c$a c -> c
    void a(java.util.HashMap,com.baidu.lbsapi.auth.c$a) -> a
    void a(java.lang.String) -> a
    java.util.HashMap a(java.util.HashMap) -> a
    android.content.Context a(com.baidu.lbsapi.auth.c) -> a
    java.util.HashMap b(com.baidu.lbsapi.auth.c) -> b
    void a(com.baidu.lbsapi.auth.c,java.lang.String) -> a
com.baidu.lbsapi.auth.c$a -> com.baidu.lbsapi.auth.c$a:
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.d -> com.baidu.lbsapi.auth.d:
    com.baidu.lbsapi.auth.c a -> a
    void run() -> run
com.baidu.lbsapi.auth.e -> com.baidu.lbsapi.auth.e:
    android.content.Context a -> a
    java.util.List b -> b
    com.baidu.lbsapi.auth.e$a c -> c
    void a(java.util.HashMap,java.lang.String[],com.baidu.lbsapi.auth.e$a) -> a
    void a(java.lang.String) -> a
    void a(java.util.List) -> a
    java.util.List a(java.util.HashMap,java.lang.String[]) -> a
    java.util.List a(com.baidu.lbsapi.auth.e) -> a
    void a(com.baidu.lbsapi.auth.e,java.util.List) -> a
com.baidu.lbsapi.auth.e$a -> com.baidu.lbsapi.auth.e$a:
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.f -> com.baidu.lbsapi.auth.f:
    com.baidu.lbsapi.auth.e a -> a
    void run() -> run
com.baidu.lbsapi.auth.g -> com.baidu.lbsapi.auth.g:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.HashMap c -> c
    java.lang.String d -> d
    java.lang.String a(java.util.HashMap) -> a
    boolean a() -> a
    javax.net.ssl.HttpsURLConnection b() -> b
    java.lang.String a(android.content.Context) -> a
    void a(javax.net.ssl.HttpsURLConnection) -> a
    java.lang.String b(java.util.HashMap) -> b
    java.util.HashMap c(java.util.HashMap) -> c
com.baidu.lbsapi.auth.h -> com.baidu.lbsapi.auth.h:
    com.baidu.lbsapi.auth.LBSAuthManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.lbsapi.auth.i -> com.baidu.lbsapi.auth.i:
    int a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.Hashtable e -> e
    com.baidu.lbsapi.auth.LBSAuthManager f -> f
    void run() -> run
com.baidu.lbsapi.auth.j -> com.baidu.lbsapi.auth.j:
    java.lang.String a -> a
    com.baidu.lbsapi.auth.LBSAuthManager b -> b
    void a(java.lang.String) -> a
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.k -> com.baidu.lbsapi.auth.k:
    java.lang.String a -> a
    com.baidu.lbsapi.auth.LBSAuthManager b -> b
    void a(java.lang.String) -> a
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.l -> com.baidu.lbsapi.auth.l:
    android.os.Handler a -> a
    java.lang.Object b -> b
    boolean c -> c
    void run() -> run
    void a() -> a
    void b() -> b
    void c() -> c
com.baidu.location.Address -> com.baidu.location.Address:
    java.lang.String country -> country
    java.lang.String countryCode -> countryCode
    java.lang.String province -> province
    java.lang.String city -> city
    java.lang.String cityCode -> cityCode
    java.lang.String district -> district
    java.lang.String street -> street
    java.lang.String streetNumber -> streetNumber
    java.lang.String address -> address
com.baidu.location.Address$1 -> com.baidu.location.Address$1:
com.baidu.location.Address$Builder -> com.baidu.location.Address$Builder:
    java.lang.String mCountry -> mCountry
    java.lang.String mCountryCode -> mCountryCode
    java.lang.String mProvince -> mProvince
    java.lang.String mCity -> mCity
    java.lang.String mCityCode -> mCityCode
    java.lang.String mDistrict -> mDistrict
    java.lang.String mStreet -> mStreet
    java.lang.String mStreetNumber -> mStreetNumber
    java.lang.String mAddress -> mAddress
    java.lang.String BEI_JING -> BEI_JING
    java.lang.String TIAN_JIN -> TIAN_JIN
    java.lang.String CHONG_QIN -> CHONG_QIN
    java.lang.String SHANG_HAI -> SHANG_HAI
    com.baidu.location.Address$Builder country(java.lang.String) -> country
    com.baidu.location.Address$Builder countryCode(java.lang.String) -> countryCode
    com.baidu.location.Address$Builder province(java.lang.String) -> province
    com.baidu.location.Address$Builder city(java.lang.String) -> city
    com.baidu.location.Address$Builder cityCode(java.lang.String) -> cityCode
    com.baidu.location.Address$Builder district(java.lang.String) -> district
    com.baidu.location.Address$Builder street(java.lang.String) -> street
    com.baidu.location.Address$Builder streetNumber(java.lang.String) -> streetNumber
    com.baidu.location.Address build() -> build
    java.lang.String access$100(com.baidu.location.Address$Builder) -> access$100
    java.lang.String access$200(com.baidu.location.Address$Builder) -> access$200
    java.lang.String access$300(com.baidu.location.Address$Builder) -> access$300
    java.lang.String access$400(com.baidu.location.Address$Builder) -> access$400
    java.lang.String access$500(com.baidu.location.Address$Builder) -> access$500
    java.lang.String access$600(com.baidu.location.Address$Builder) -> access$600
    java.lang.String access$700(com.baidu.location.Address$Builder) -> access$700
    java.lang.String access$800(com.baidu.location.Address$Builder) -> access$800
    java.lang.String access$900(com.baidu.location.Address$Builder) -> access$900
com.baidu.location.BDLocation -> com.baidu.location.BDLocation:
    int TypeNone -> TypeNone
    int TypeGpsLocation -> TypeGpsLocation
    int TypeCriteriaException -> TypeCriteriaException
    int TypeNetWorkException -> TypeNetWorkException
    int TypeOffLineLocation -> TypeOffLineLocation
    int TypeOffLineLocationFail -> TypeOffLineLocationFail
    int TypeOffLineLocationNetworkFail -> TypeOffLineLocationNetworkFail
    int TypeNetWorkLocation -> TypeNetWorkLocation
    int TypeCacheLocation -> TypeCacheLocation
    int TypeServerError -> TypeServerError
    int LOCATION_WHERE_UNKNOW -> LOCATION_WHERE_UNKNOW
    int LOCATION_WHERE_IN_CN -> LOCATION_WHERE_IN_CN
    int LOCATION_WHERE_OUT_CN -> LOCATION_WHERE_OUT_CN
    int OPERATORS_TYPE_UNKONW -> OPERATORS_TYPE_UNKONW
    int OPERATORS_TYPE_MOBILE -> OPERATORS_TYPE_MOBILE
    int OPERATORS_TYPE_UNICOM -> OPERATORS_TYPE_UNICOM
    int OPERATORS_TYPE_TELECOMU -> OPERATORS_TYPE_TELECOMU
    java.lang.String BDLOCATION_GCJ02_TO_BD09 -> BDLOCATION_GCJ02_TO_BD09
    java.lang.String BDLOCATION_GCJ02_TO_BD09LL -> BDLOCATION_GCJ02_TO_BD09LL
    java.lang.String BDLOCATION_BD09_TO_GCJ02 -> BDLOCATION_BD09_TO_GCJ02
    java.lang.String BDLOCATION_BD09LL_TO_GCJ02 -> BDLOCATION_BD09LL_TO_GCJ02
    int mLocType -> mLocType
    java.lang.String mTime -> mTime
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    boolean mHasAltitude -> mHasAltitude
    double mAltitude -> mAltitude
    boolean mHasSpeed -> mHasSpeed
    float mSpeed -> mSpeed
    boolean mHasRadius -> mHasRadius
    float mRadius -> mRadius
    boolean mHasSateNumber -> mHasSateNumber
    int mSatelliteNumber -> mSatelliteNumber
    float mDerect -> mDerect
    java.lang.String mCoorType -> mCoorType
    boolean mHasAddr -> mHasAddr
    java.lang.String mAddrStr -> mAddrStr
    java.lang.String mSemaAptag -> mSemaAptag
    java.lang.String mSemaPoiRegion -> mSemaPoiRegion
    java.lang.String mSemaRegular -> mSemaRegular
    boolean isCellChangeFlag -> isCellChangeFlag
    com.baidu.location.Address mAddr -> mAddr
    java.lang.String floor -> floor
    java.lang.String buildingid -> buildingid
    java.lang.String mBuildingName -> mBuildingName
    boolean indoorLocMode -> indoorLocMode
    int mParkState -> mParkState
    int mLocationWhere -> mLocationWhere
    java.lang.String netWorkLocationType -> netWorkLocationType
    int mOperators -> mOperators
    java.lang.String mCu -> mCu
    java.util.List mPoiList -> mPoiList
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getPoiList() -> getPoiList
    void setPoiList(java.util.List) -> setPoiList
    void setCellChangeFlag(java.lang.Boolean) -> setCellChangeFlag
    boolean isCellChangeFlag() -> isCellChangeFlag
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getAltitude() -> getAltitude
    void setAltitude(double) -> setAltitude
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    void setAddrStr(java.lang.String) -> setAddrStr
    boolean hasAltitude() -> hasAltitude
    boolean hasSpeed() -> hasSpeed
    boolean hasRadius() -> hasRadius
    void setLocType(int) -> setLocType
    int getLocType() -> getLocType
    void setSatelliteNumber(int) -> setSatelliteNumber
    int getSatelliteNumber() -> getSatelliteNumber
    float getDerect() -> getDerect
    float getDirection() -> getDirection
    void setDirection(float) -> setDirection
    boolean hasSateNumber() -> hasSateNumber
    boolean hasAddr() -> hasAddr
    com.baidu.location.Address getAddress() -> getAddress
    void setAddr(com.baidu.location.Address) -> setAddr
    java.lang.String getAddrStr() -> getAddrStr
    java.lang.String getProvince() -> getProvince
    java.lang.String getCity() -> getCity
    java.lang.String getCityCode() -> getCityCode
    java.lang.String getCountry() -> getCountry
    java.lang.String getCountryCode() -> getCountryCode
    java.lang.String getDistrict() -> getDistrict
    java.lang.String getStreet() -> getStreet
    java.lang.String getStreetNumber() -> getStreetNumber
    java.lang.String getLocationDescribe() -> getLocationDescribe
    void setLocationDescribe(java.lang.String) -> setLocationDescribe
    java.lang.String getFloor() -> getFloor
    void setFloor(java.lang.String) -> setFloor
    java.lang.String getBuildingID() -> getBuildingID
    void setBuildingID(java.lang.String) -> setBuildingID
    java.lang.String getBuildingName() -> getBuildingName
    void setBuildingName(java.lang.String) -> setBuildingName
    int isParkAvailable() -> isParkAvailable
    void setParkAvailable(int) -> setParkAvailable
    boolean isIndoorLocMode() -> isIndoorLocMode
    void setIndoorLocMode(boolean) -> setIndoorLocMode
    int getLocationWhere() -> getLocationWhere
    void setLocationWhere(int) -> setLocationWhere
    java.lang.String getSemaAptag() -> getSemaAptag
    java.lang.String getSemaPoiRegion() -> getSemaPoiRegion
    java.lang.String getSemaRegular() -> getSemaRegular
    java.lang.String getNetworkLocationType() -> getNetworkLocationType
    void setNetworkLocationType(java.lang.String) -> setNetworkLocationType
    int getOperators() -> getOperators
    void setOperators(int) -> setOperators
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getCuid() -> getCuid
    java.lang.String getAdUrl(java.lang.String) -> getAdUrl
    java.lang.String getModel() -> getModel
    void internalSet(int,java.lang.String) -> internalSet
com.baidu.location.BDLocationListener -> com.baidu.location.BDLocationListener:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.BDNotifyListener -> com.baidu.location.BDNotifyListener:
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    float mRadius -> mRadius
    float differDistance -> differDistance
    java.lang.String mCoorType -> mCoorType
    double mLatitudeC -> mLatitudeC
    double mLongitudeC -> mLongitudeC
    int Notified -> Notified
    boolean isAdded -> isAdded
    com.baidu.location.d.a mNotifyCache -> mNotifyCache
    void SetNotifyLocation(double,double,float,java.lang.String) -> SetNotifyLocation
    void onNotify(com.baidu.location.BDLocation,float) -> onNotify
com.baidu.location.Jni -> com.baidu.location.Jni:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    boolean j -> j
    java.lang.String a(byte[],int) -> a
    java.lang.String b(double,double,int,int) -> b
    java.lang.String c(byte[],int) -> c
    java.lang.String ib(byte[],byte[]) -> ib
    java.lang.String sky() -> sky
    java.lang.String ee(java.lang.String,int) -> ee
    byte[] encrypt(byte[]) -> encrypt
    java.lang.String g(byte[]) -> g
    void f(byte[],byte[]) -> f
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decodeIBeacon(byte[],byte[]) -> decodeIBeacon
    java.lang.String en1(java.lang.String) -> en1
    java.lang.String encode2(java.lang.String) -> encode2
    long murmur(java.lang.String) -> murmur
    java.lang.Long encode3(java.lang.String) -> encode3
    java.lang.String getSkyKey() -> getSkyKey
    java.lang.String encodeOfflineLocationUpdateRequest(java.lang.String) -> encodeOfflineLocationUpdateRequest
    java.lang.String encodeTp4(java.lang.String) -> encodeTp4
    java.lang.String encodeNotLimit(java.lang.String,int) -> encodeNotLimit
    double[] coorEncrypt(double,double,java.lang.String) -> coorEncrypt
    void tr2(java.lang.String,java.lang.String) -> tr2
    java.lang.String gtr2(java.lang.String) -> gtr2
    java.lang.String Encrypt(java.lang.String) -> Encrypt
    java.lang.String a(byte[]) -> a
com.baidu.location.LLSInterface -> com.baidu.location.LLSInterface:
    void onCreate(android.content.Context) -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnBind(android.content.Intent) -> onUnBind
    void onDestroy() -> onDestroy
    double getVersion() -> getVersion
com.baidu.location.LocationClient -> com.baidu.location.LocationClient:
    java.lang.String mTAG -> mTAG
    int MSG_START -> MSG_START
    int MSG_STOP -> MSG_STOP
    int MSG_SET_OPT -> MSG_SET_OPT
    int MSG_REQ_LOC -> MSG_REQ_LOC
    int MSG_REG_LISTENER -> MSG_REG_LISTENER
    int MSG_UNREG_LISTENER -> MSG_UNREG_LISTENER
    int MSG_REQ_POI -> MSG_REQ_POI
    int MSG_REG_NOTIFY_LISTENER -> MSG_REG_NOTIFY_LISTENER
    int MSG_RIGSTER_NOTIFY -> MSG_RIGSTER_NOTIFY
    int MSG_REMOVE_NOTIFY -> MSG_REMOVE_NOTIFY
    int MSG_REQ_NOTIFY_LOC -> MSG_REQ_NOTIFY_LOC
    int MSG_REQ_OFFLINE_LOC -> MSG_REQ_OFFLINE_LOC
    int MIN_REQUEST_SPAN -> MIN_REQUEST_SPAN
    long mLastRequestTime -> mLastRequestTime
    java.lang.String mPackName -> mPackName
    com.baidu.location.LocationClientOption mOption -> mOption
    boolean mIsStarted -> mIsStarted
    android.content.Context mContext -> mContext
    android.os.Messenger mServer -> mServer
    com.baidu.location.LocationClient$a mHandler -> mHandler
    android.os.Messenger mMessenger -> mMessenger
    java.util.ArrayList mLocationListeners -> mLocationListeners
    com.baidu.location.BDLocation mLastLocation -> mLastLocation
    boolean isWaitingForLocation -> isWaitingForLocation
    boolean isWaitingLocTag -> isWaitingLocTag
    boolean isScheduled -> isScheduled
    com.baidu.location.LocationClient$b mScheduledRequest -> mScheduledRequest
    boolean mGpsStatus -> mGpsStatus
    java.lang.Object mLock -> mLock
    long lastReceiveGpsTime -> lastReceiveGpsTime
    long lastReceiveLocationTime -> lastReceiveLocationTime
    com.baidu.location.d.a mNotifyCache -> mNotifyCache
    com.baidu.location.BDLocationListener NotifyLocationListenner -> NotifyLocationListenner
    java.lang.String serviceName -> serviceName
    java.lang.String mKey -> mKey
    boolean inDoorState -> inDoorState
    boolean isStop -> isStop
    java.lang.Boolean mConfig_map -> mConfig_map
    java.lang.Boolean mConfig_preimport -> mConfig_preimport
    java.lang.Boolean firstConnected -> firstConnected
    boolean mDebugByDev -> mDebugByDev
    com.baidu.location.a.b mloc -> mloc
    boolean clientFirst -> clientFirst
    boolean serverFirst -> serverFirst
    android.content.ServiceConnection mConnection -> mConnection
    com.baidu.location.LocationClientOption getLocOption() -> getLocOption
    void setLocOption(com.baidu.location.LocationClientOption) -> setLocOption
    boolean updateLocation(android.location.Location) -> updateLocation
    void requestNotifyLocation() -> requestNotifyLocation
    int requestOfflineLocation() -> requestOfflineLocation
    void onRequestOffLineLocation() -> onRequestOffLineLocation
    int requestLocation() -> requestLocation
    boolean isStarted() -> isStarted
    com.baidu.location.BDLocation getLastKnownLocation() -> getLastKnownLocation
    java.lang.String getVersion() -> getVersion
    void start() -> start
    void onStart() -> onStart
    void stop() -> stop
    void onStop() -> onStop
    void registerNotify(com.baidu.location.BDNotifyListener) -> registerNotify
    void onRegisterNotify(android.os.Message) -> onRegisterNotify
    void removeNotifyEvent(com.baidu.location.BDNotifyListener) -> removeNotifyEvent
    void onRemoveNotifyEvent(android.os.Message) -> onRemoveNotifyEvent
    void onSetOption(android.os.Message) -> onSetOption
    android.os.Bundle getOptionBundle() -> getOptionBundle
    void registerNotifyLocationListener(com.baidu.location.BDLocationListener) -> registerNotifyLocationListener
    void onRegisterNotifyLocationListener(android.os.Message) -> onRegisterNotifyLocationListener
    void registerLocationListener(com.baidu.location.BDLocationListener) -> registerLocationListener
    void onRegisterListener(android.os.Message) -> onRegisterListener
    void unRegisterLocationListener(com.baidu.location.BDLocationListener) -> unRegisterLocationListener
    void onUnRegisterListener(android.os.Message) -> onUnRegisterListener
    void onRequestNotifyLocation() -> onRequestNotifyLocation
    void onRequestLocation() -> onRequestLocation
    void onNewLocation(android.os.Message,int) -> onNewLocation
    void onNewNotifyLocation(android.os.Message) -> onNewNotifyLocation
    void callListeners(int) -> callListeners
    java.lang.String getAccessKey() -> getAccessKey
    com.baidu.location.BDLocation getBDLocationInCoorType(com.baidu.location.BDLocation,java.lang.String) -> getBDLocationInCoorType
    void sendFirstLoc(com.baidu.location.BDLocation) -> sendFirstLoc
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    android.os.Messenger access$102(com.baidu.location.LocationClient,android.os.Messenger) -> access$102
    android.os.Messenger access$100(com.baidu.location.LocationClient) -> access$100
    boolean access$202(com.baidu.location.LocationClient,boolean) -> access$202
    boolean access$300(com.baidu.location.LocationClient) -> access$300
    com.baidu.location.LocationClient$a access$400(com.baidu.location.LocationClient) -> access$400
    android.os.Messenger access$500(com.baidu.location.LocationClient) -> access$500
    android.os.Bundle access$600(com.baidu.location.LocationClient) -> access$600
    com.baidu.location.LocationClientOption access$700(com.baidu.location.LocationClient) -> access$700
    java.lang.Boolean access$800(com.baidu.location.LocationClient) -> access$800
    java.lang.Boolean access$802(com.baidu.location.LocationClient,java.lang.Boolean) -> access$802
    java.lang.Object access$1000(com.baidu.location.LocationClient) -> access$1000
    boolean access$1102(com.baidu.location.LocationClient,boolean) -> access$1102
    java.util.ArrayList access$1200(com.baidu.location.LocationClient) -> access$1200
    boolean access$1300(com.baidu.location.LocationClient) -> access$1300
    com.baidu.location.LocationClient$b access$1400(com.baidu.location.LocationClient) -> access$1400
    com.baidu.location.LocationClient$b access$1402(com.baidu.location.LocationClient,com.baidu.location.LocationClient$b) -> access$1402
    void access$1500(com.baidu.location.LocationClient,android.os.Message) -> access$1500
    void access$1600(com.baidu.location.LocationClient,android.os.Message) -> access$1600
    void access$1700(com.baidu.location.LocationClient,android.os.Message) -> access$1700
    void access$1800(com.baidu.location.LocationClient,android.os.Message) -> access$1800
    void access$1900(com.baidu.location.LocationClient,android.os.Message) -> access$1900
    void access$2000(com.baidu.location.LocationClient,android.os.Message) -> access$2000
    void access$2100(com.baidu.location.LocationClient) -> access$2100
    void access$2200(com.baidu.location.LocationClient) -> access$2200
    void access$2300(com.baidu.location.LocationClient) -> access$2300
    void access$2400(com.baidu.location.LocationClient) -> access$2400
    void access$2500(com.baidu.location.LocationClient) -> access$2500
    boolean access$2602(com.baidu.location.LocationClient,boolean) -> access$2602
    boolean access$2700(com.baidu.location.LocationClient) -> access$2700
    boolean access$2800(com.baidu.location.LocationClient) -> access$2800
    boolean access$2702(com.baidu.location.LocationClient,boolean) -> access$2702
    void access$2900(com.baidu.location.LocationClient,android.os.Message,int) -> access$2900
    void access$3000(com.baidu.location.LocationClient,android.os.Message) -> access$3000
    void access$3100(com.baidu.location.LocationClient,com.baidu.location.BDLocation) -> access$3100
com.baidu.location.LocationClient$a -> com.baidu.location.LocationClient$a:
    com.baidu.location.LocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.LocationClient$b -> com.baidu.location.LocationClient$b:
    com.baidu.location.LocationClient a -> a
    void run() -> run
com.baidu.location.LocationClientOption -> com.baidu.location.LocationClientOption:
    int MIN_SCAN_SPAN -> MIN_SCAN_SPAN
    int GpsFirst -> GpsFirst
    int NetWorkFirst -> NetWorkFirst
    int GpsOnly -> GpsOnly
    java.lang.String coorType -> coorType
    java.lang.String addrType -> addrType
    boolean openGps -> openGps
    int scanSpan -> scanSpan
    int timeOut -> timeOut
    java.lang.String prodName -> prodName
    int priority -> priority
    boolean location_change_notify -> location_change_notify
    boolean disableLocCache -> disableLocCache
    boolean enableSimulateGps -> enableSimulateGps
    java.lang.String serviceName -> serviceName
    boolean isIgnoreCacheException -> isIgnoreCacheException
    boolean isIgnoreKillProcess -> isIgnoreKillProcess
    boolean mIsNeedDeviceDirect -> mIsNeedDeviceDirect
    boolean isNeedAptag -> isNeedAptag
    boolean isNeedAptagd -> isNeedAptagd
    boolean isNeedPoiRegion -> isNeedPoiRegion
    boolean isNeedRegular -> isNeedRegular
    boolean isNeedAltitude -> isNeedAltitude
    com.baidu.location.LocationClientOption$LocationMode mLocationMode -> mLocationMode
    int LOC_SENSITIVITY_HIGHT -> LOC_SENSITIVITY_HIGHT
    int LOC_SENSITIVITY_MIDDLE -> LOC_SENSITIVITY_MIDDLE
    int LOC_SENSITIVITY_LOW -> LOC_SENSITIVITY_LOW
    int MIN_AUTO_NOTIFY_INTERVAL -> MIN_AUTO_NOTIFY_INTERVAL
    int autoNotifyMaxInterval -> autoNotifyMaxInterval
    float autoNotifyLocSensitivity -> autoNotifyLocSensitivity
    int autoNotifyMinTimeInterval -> autoNotifyMinTimeInterval
    int autoNotifyMinDistance -> autoNotifyMinDistance
    boolean optionEquals(com.baidu.location.LocationClientOption) -> optionEquals
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    java.lang.String getAddrType() -> getAddrType
    void setAddrType(java.lang.String) -> setAddrType
    void setIsNeedAddress(boolean) -> setIsNeedAddress
    boolean isOpenGps() -> isOpenGps
    void setOpenGps(boolean) -> setOpenGps
    boolean isLocationNotify() -> isLocationNotify
    void setLocationNotify(boolean) -> setLocationNotify
    void setOpenAutoNotifyMode() -> setOpenAutoNotifyMode
    void setOpenAutoNotifyMode(int,int,int) -> setOpenAutoNotifyMode
    int getAutoNotifyMaxInterval() -> getAutoNotifyMaxInterval
    int getAutoNotifyMinTimeInterval() -> getAutoNotifyMinTimeInterval
    int getAutoNotifyMinDistance() -> getAutoNotifyMinDistance
    float getAutoNotifyLocSensitivity() -> getAutoNotifyLocSensitivity
    int getScanSpan() -> getScanSpan
    void setScanSpan(int) -> setScanSpan
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getProdName() -> getProdName
    void setProdName(java.lang.String) -> setProdName
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    void setLocationMode(com.baidu.location.LocationClientOption$LocationMode) -> setLocationMode
    com.baidu.location.LocationClientOption$LocationMode getLocationMode() -> getLocationMode
    void setNeedDeviceDirect(boolean) -> setNeedDeviceDirect
    java.lang.String getServiceName() -> getServiceName
    void setServiceName(java.lang.String) -> setServiceName
    void setIsNeedLocationDescribe(boolean) -> setIsNeedLocationDescribe
    void setIsNeedAltitude(boolean) -> setIsNeedAltitude
    void setIsNeedLocationPoiList(boolean) -> setIsNeedLocationPoiList
    void setSema(boolean,boolean,boolean) -> setSema
    void disableCache(boolean) -> disableCache
    boolean isDisableCache() -> isDisableCache
    void SetIgnoreCacheException(boolean) -> SetIgnoreCacheException
    void setIgnoreKillProcess(boolean) -> setIgnoreKillProcess
    void setEnableSimulateGps(boolean) -> setEnableSimulateGps
com.baidu.location.LocationClientOption$1 -> com.baidu.location.LocationClientOption$1:
    int[] a -> a
com.baidu.location.LocationClientOption$LocationMode -> com.baidu.location.LocationClientOption$LocationMode:
    com.baidu.location.LocationClientOption$LocationMode Hight_Accuracy -> Hight_Accuracy
    com.baidu.location.LocationClientOption$LocationMode Battery_Saving -> Battery_Saving
    com.baidu.location.LocationClientOption$LocationMode Device_Sensors -> Device_Sensors
    com.baidu.location.LocationClientOption$LocationMode[] $VALUES -> $VALUES
    com.baidu.location.LocationClientOption$LocationMode[] values() -> values
    com.baidu.location.LocationClientOption$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.location.Poi -> com.baidu.location.Poi:
    double mRank -> mRank
    java.lang.String mId -> mId
    java.lang.String mName -> mName
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> getId
    double getRank() -> getRank
    java.lang.String getName() -> getName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.location.a -> com.baidu.location.a:
    com.baidu.location.BDLocation createFromParcel(android.os.Parcel) -> createFromParcel
    com.baidu.location.BDLocation[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.location.a.a -> com.baidu.location.a.a:
    com.baidu.location.a.a b -> b
    java.util.ArrayList c -> c
    boolean d -> d
    boolean a -> a
    com.baidu.location.BDLocation e -> e
    com.baidu.location.a.a a() -> a
    void b() -> b
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    boolean c(android.os.Message) -> c
    void a(com.baidu.location.BDLocation) -> a
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    int d(android.os.Message) -> d
    int e(android.os.Message) -> e
    com.baidu.location.a.a$a a(android.os.Messenger) -> a
    void a(com.baidu.location.a.a$a) -> a
    void e() -> e
    void f() -> f
    void d() -> d
com.baidu.location.a.a$a -> com.baidu.location.a.a$a:
    java.lang.String a -> a
    android.os.Messenger b -> b
    com.baidu.location.LocationClientOption c -> c
    int d -> d
    com.baidu.location.a.a e -> e
    void a(com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.BDLocation,int) -> a
    void a() -> a
    void a(int) -> a
    void a(int,java.lang.String,com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.a.a$a,int) -> a
com.baidu.location.a.b -> com.baidu.location.a.b:
    android.content.Context b -> b
    android.telephony.TelephonyManager c -> c
    com.baidu.location.a.b$a d -> d
    java.lang.reflect.Method e -> e
    java.lang.reflect.Method f -> f
    java.lang.reflect.Method g -> g
    java.lang.Class h -> h
    android.net.wifi.WifiManager i -> i
    com.baidu.location.a.b$d j -> j
    java.lang.String k -> k
    com.baidu.location.LocationClientOption l -> l
    com.baidu.location.a.b$b m -> m
    java.lang.String n -> n
    com.baidu.location.a.b$c a -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String a(int) -> a
    void c() -> c
    void a(android.telephony.CellLocation) -> a
    android.content.Context a(com.baidu.location.a.b) -> a
    com.baidu.location.LocationClientOption b(com.baidu.location.a.b) -> b
    com.baidu.location.a.b$b c(com.baidu.location.a.b) -> c
com.baidu.location.a.b$1 -> com.baidu.location.a.b$1:
com.baidu.location.a.b$a -> com.baidu.location.a.b$a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    char e -> e
    com.baidu.location.a.b f -> f
    boolean d() -> d
    int a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    boolean a(com.baidu.location.a.b$a) -> a
com.baidu.location.a.b$b -> com.baidu.location.a.b$b:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.a.b$c -> com.baidu.location.a.b$c:
    java.lang.String a -> a
    com.baidu.location.a.b b -> b
    void a() -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
com.baidu.location.a.b$d -> com.baidu.location.a.b$d:
    java.util.List a -> a
    long c -> c
    com.baidu.location.a.b b -> b
    int a() -> a
    java.lang.String a(int) -> a
    void b() -> b
com.baidu.location.a.c -> com.baidu.location.a.c:
    com.baidu.location.a.c a -> a
    java.lang.String b -> b
    java.io.File c -> c
    java.lang.StringBuffer d -> d
    boolean e -> e
    int f -> f
    int g -> g
    long h -> h
    long i -> i
    long j -> j
    double k -> k
    double l -> l
    int m -> m
    int n -> n
    int o -> o
    java.lang.String p -> p
    boolean q -> q
    com.baidu.location.a.c a() -> a
    boolean a(android.location.Location) -> a
    boolean a(android.location.Location,int,int) -> a
    boolean a(java.lang.String) -> a
    java.lang.String a(int) -> a
    void c() -> c
    java.lang.String b() -> b
    boolean d() -> d
    boolean a(int,int,int) -> a
com.baidu.location.a.d -> com.baidu.location.a.d:
    com.baidu.location.f.i a -> a
    com.baidu.location.f.a b -> b
    boolean e -> e
    boolean f -> f
    java.lang.String c -> c
    android.os.Handler d -> d
    void a(android.os.Message) -> a
    void a() -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.location.a.d$a -> com.baidu.location.a.d$a:
    com.baidu.location.a.d a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.a.d$b -> com.baidu.location.a.d$b:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.location.a.d c -> c
    void a() -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
com.baidu.location.a.e -> com.baidu.location.a.e:
    com.baidu.location.a.e i -> i
    int e -> e
    boolean j -> j
    com.baidu.location.a.d$b f -> f
    java.lang.String k -> k
    com.baidu.location.BDLocation l -> l
    com.baidu.location.BDLocation m -> m
    com.baidu.location.f.i n -> n
    com.baidu.location.f.a o -> o
    com.baidu.location.f.i p -> p
    com.baidu.location.f.a q -> q
    boolean r -> r
    boolean s -> s
    boolean t -> t
    long u -> u
    long v -> v
    com.baidu.location.Address w -> w
    java.lang.String x -> x
    java.util.List y -> y
    double z -> z
    double A -> A
    boolean B -> B
    long C -> C
    long D -> D
    com.baidu.location.a.e$a E -> E
    boolean F -> F
    boolean G -> G
    boolean H -> H
    android.os.Handler g -> g
    boolean I -> I
    com.baidu.location.a.e$b J -> J
    boolean K -> K
    boolean h -> h
    com.baidu.location.a.e b() -> b
    void b(android.os.Message) -> b
    void c() -> c
    void d() -> d
    void c(android.os.Message) -> c
    void d(android.os.Message) -> d
    void e(android.os.Message) -> e
    com.baidu.location.Address a(com.baidu.location.BDLocation) -> a
    java.lang.String e() -> e
    java.util.List f() -> f
    void f(android.os.Message) -> f
    boolean a(com.baidu.location.f.i) -> a
    boolean g() -> g
    boolean a(com.baidu.location.f.a) -> a
    boolean b(com.baidu.location.f.a) -> b
    boolean j() -> j
    void g(android.os.Message) -> g
    void h() -> h
    void a(android.os.Message) -> a
    void a() -> a
    void i() -> i
    void k() -> k
    void l() -> l
    void a(boolean) -> a
    boolean a(com.baidu.location.a.e) -> a
    boolean a(com.baidu.location.a.e,boolean) -> a
    boolean b(com.baidu.location.a.e) -> b
    boolean b(com.baidu.location.a.e,boolean) -> b
    void a(com.baidu.location.a.e,android.os.Message) -> a
    boolean c(com.baidu.location.a.e) -> c
    boolean c(com.baidu.location.a.e,boolean) -> c
    boolean d(com.baidu.location.a.e) -> d
com.baidu.location.a.e$1 -> com.baidu.location.a.e$1:
com.baidu.location.a.e$a -> com.baidu.location.a.e$a:
    com.baidu.location.a.e a -> a
    void run() -> run
com.baidu.location.a.e$b -> com.baidu.location.a.e$b:
    com.baidu.location.a.e a -> a
    void run() -> run
com.baidu.location.a.f -> com.baidu.location.a.f:
    float[] a -> a
    float[] b -> b
    android.hardware.SensorManager c -> c
    com.baidu.location.a.f d -> d
    float e -> e
    double f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    float j -> j
    long k -> k
    boolean l -> l
    long m -> m
    com.baidu.location.a.f a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void k() -> k
    float e() -> e
    void a(boolean) -> a
    void b(boolean) -> b
    boolean f() -> f
    boolean g() -> g
    float h() -> h
    double i() -> i
    android.hardware.SensorManager a(com.baidu.location.a.f) -> a
    com.baidu.location.a.f j() -> j
com.baidu.location.a.g -> com.baidu.location.a.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    android.os.Handler f -> f
    com.baidu.location.a.g p -> p
    com.baidu.location.a.g b() -> b
    void c() -> c
    android.os.Handler f() -> f
    void a() -> a
    void a(boolean) -> a
    void g() -> g
    void h() -> h
    boolean i() -> i
    void j() -> j
    boolean a(java.lang.String,java.lang.String) -> a
    void a(java.io.File,java.io.File) -> a
    void a(com.baidu.location.a.g) -> a
    boolean b(com.baidu.location.a.g) -> b
    void c(com.baidu.location.a.g) -> c
com.baidu.location.a.h -> com.baidu.location.a.h:
    long a -> a
    com.baidu.location.f.a b -> b
    android.location.Location c -> c
    java.lang.String d -> d
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    long b() -> b
    void a(long) -> a
    com.baidu.location.f.a c() -> c
    void a(com.baidu.location.f.a) -> a
    android.location.Location d() -> d
    void a(android.location.Location) -> a
com.baidu.location.a.i -> com.baidu.location.a.i:
    android.os.HandlerThread a -> a
    android.os.HandlerThread a() -> a
com.baidu.location.a.j -> com.baidu.location.a.j:
    java.util.ArrayList b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.io.File j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    double o -> o
    double p -> p
    double q -> q
    double r -> r
    int s -> s
    int t -> t
    int u -> u
    android.location.Location v -> v
    android.location.Location w -> w
    android.location.Location x -> x
    com.baidu.location.f.i y -> y
    com.baidu.location.a.j$a z -> z
    com.baidu.location.a.j A -> A
    int B -> B
    long a -> a
    com.baidu.location.a.j a() -> a
    java.lang.String b() -> b
    void a(com.baidu.location.f.a,com.baidu.location.f.i,android.location.Location,java.lang.String) -> a
    boolean a(android.location.Location,boolean) -> a
    boolean a(android.location.Location) -> a
    boolean a(android.location.Location,com.baidu.location.f.i) -> a
    void c() -> c
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    int a(java.util.List,int) -> a
    boolean a(int,int,int,int,long) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(int,boolean) -> a
    boolean a(java.lang.String,java.util.List) -> a
    java.lang.String d() -> d
    void e() -> e
    java.lang.String a(int) -> a
    java.lang.String f() -> f
com.baidu.location.a.j$a -> com.baidu.location.a.j$a:
    boolean a -> a
    int b -> b
    int c -> c
    java.util.ArrayList e -> e
    com.baidu.location.a.j d -> d
    void a() -> a
    void a(boolean) -> a
    void b() -> b
com.baidu.location.a.k -> com.baidu.location.a.k:
    com.baidu.location.a.f a -> a
    void run() -> run
com.baidu.location.a.l -> com.baidu.location.a.l:
    com.baidu.location.a.g a -> a
    void run() -> run
com.baidu.location.a.m -> com.baidu.location.a.m:
    com.baidu.location.a.g a -> a
    void run() -> run
com.baidu.location.a.n -> com.baidu.location.a.n:
    com.baidu.location.a.g a -> a
    void run() -> run
com.baidu.location.a.o -> com.baidu.location.a.o:
    com.baidu.location.a.g a -> a
    void run() -> run
com.baidu.location.b -> com.baidu.location.b:
    com.baidu.location.LocationClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.b.a.a -> com.baidu.location.b.a.a:
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.location.b.a.b -> com.baidu.location.b.a.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.location.b.a.c -> com.baidu.location.b.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.location.b.a.d -> com.baidu.location.b.a.d:
    byte[] a(byte[]) -> a
com.baidu.location.b.b.a -> com.baidu.location.b.b.a:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
com.baidu.location.b.b.b -> com.baidu.location.b.b.b:
    byte[] a() -> a
com.baidu.location.b.b.c -> com.baidu.location.b.b.c:
    android.content.Context a -> a
    int b -> b
    java.security.PublicKey c -> c
    com.baidu.location.b.b.c$b d -> d
    java.lang.String a(byte[]) -> a
    java.lang.String[] a(android.content.pm.Signature[]) -> a
    byte[] a(byte[],java.security.PublicKey) -> a
    void a() -> a
    java.util.List a(android.content.Intent,boolean) -> a
    boolean a(java.lang.String[],java.lang.String[]) -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean a(java.lang.String,java.lang.String) -> a
    void b(java.lang.Throwable) -> b
    java.lang.String a(java.io.File) -> a
    java.lang.String a(android.content.Context) -> a
    com.baidu.location.b.b.c$b c(android.content.Context) -> c
    java.lang.String b(android.content.Context) -> b
    com.baidu.location.b.b.c$b b() -> b
    boolean c() -> c
    boolean c(java.lang.String) -> c
    com.baidu.location.b.b.c$b d() -> d
    com.baidu.location.b.b.c$b e() -> e
    com.baidu.location.b.b.c$b d(java.lang.String) -> d
    java.lang.String e(java.lang.String) -> e
    java.lang.String f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void b(java.lang.String,java.lang.String) -> b
    java.lang.String h(java.lang.String) -> h
    java.lang.String i(java.lang.String) -> i
    void a(java.lang.Throwable) -> a
com.baidu.location.b.b.c$a -> com.baidu.location.b.b.c$a:
    android.content.pm.ApplicationInfo a -> a
    int b -> b
    boolean c -> c
    boolean d -> d
com.baidu.location.b.b.c$b -> com.baidu.location.b.b.c$b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    com.baidu.location.b.b.c$b a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
com.baidu.location.b.b.d -> com.baidu.location.b.b.d:
    com.baidu.location.b.b.c a -> a
    int a(com.baidu.location.b.b.c$a,com.baidu.location.b.b.c$a) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.baidu.location.c -> com.baidu.location.c:
    com.baidu.location.Poi createFromParcel(android.os.Parcel) -> createFromParcel
    com.baidu.location.Poi[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.location.c.a -> com.baidu.location.c.a:
    com.baidu.location.c.a a -> a
    boolean b -> b
    android.os.Handler c -> c
    android.app.AlarmManager d -> d
    com.baidu.location.c.a$a e -> e
    android.app.PendingIntent f -> f
    long g -> g
    com.baidu.location.c.a a() -> a
    void b() -> b
    void f() -> f
    void c() -> c
    void g() -> g
    void d() -> d
    void e() -> e
    void a(com.baidu.location.c.a) -> a
    void b(com.baidu.location.c.a) -> b
    boolean c(com.baidu.location.c.a) -> c
    android.os.Handler d(com.baidu.location.c.a) -> d
    android.app.PendingIntent a(com.baidu.location.c.a,android.app.PendingIntent) -> a
com.baidu.location.c.a$a -> com.baidu.location.c.a$a:
    com.baidu.location.c.a a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.c.b -> com.baidu.location.c.b:
    boolean a -> a
    java.lang.String b -> b
    com.baidu.location.c.b$a c -> c
    com.baidu.location.c.b d -> d
    int e -> e
    com.baidu.location.c.b a() -> a
    void b() -> b
    void c() -> c
    java.lang.String d() -> d
    boolean e() -> e
    int f() -> f
    boolean a(com.baidu.location.c.b,boolean) -> a
    int a(com.baidu.location.c.b,int) -> a
    java.lang.String a(com.baidu.location.c.b,java.lang.String) -> a
com.baidu.location.c.b$a -> com.baidu.location.c.b$a:
    com.baidu.location.c.b a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.c.c -> com.baidu.location.c.c:
    com.baidu.location.c.c i -> i
    com.baidu.location.c.c$a j -> j
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String k -> k
    int l -> l
    int m -> m
    int n -> n
    com.baidu.location.c.c a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    boolean b(java.lang.String) -> b
    void a(org.json.JSONObject) -> a
    void f() -> f
    void g() -> g
    void h() -> h
    void a(java.lang.String) -> a
    void a(byte[]) -> a
    void c(java.lang.String) -> c
    void a(int) -> a
    void i() -> i
    void j() -> j
    void b(int) -> b
    void a(com.baidu.location.c.c,byte[]) -> a
    void a(com.baidu.location.c.c,java.lang.String) -> a
com.baidu.location.c.c$a -> com.baidu.location.c.c$a:
    java.lang.String a -> a
    boolean b -> b
    boolean c -> c
    com.baidu.location.c.c d -> d
    void a() -> a
    void a(boolean) -> a
    void a(java.lang.String,boolean) -> a
com.baidu.location.c.d -> com.baidu.location.c.d:
    com.baidu.location.c.d a -> a
    long b -> b
    long c -> c
    long d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    com.baidu.location.c.d$a j -> j
    com.baidu.location.c.d a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void d() -> d
    void e() -> e
    void a(java.lang.String) -> a
    java.lang.String a(com.baidu.location.c.d) -> a
    long b(com.baidu.location.c.d) -> b
    java.lang.String a(com.baidu.location.c.d,java.lang.String) -> a
    java.lang.String b(com.baidu.location.c.d,java.lang.String) -> b
    int a(com.baidu.location.c.d,int) -> a
    long a(com.baidu.location.c.d,long) -> a
    long c(com.baidu.location.c.d) -> c
    void d(com.baidu.location.c.d) -> d
    java.lang.String c(com.baidu.location.c.d,java.lang.String) -> c
    java.lang.String d(com.baidu.location.c.d,java.lang.String) -> d
    long b(com.baidu.location.c.d,long) -> b
com.baidu.location.c.d$a -> com.baidu.location.c.d$a:
    boolean b -> b
    com.baidu.location.c.d a -> a
    void a() -> a
    void a(boolean) -> a
    void b() -> b
    void c() -> c
com.baidu.location.c.e -> com.baidu.location.c.e:
    com.baidu.location.c.e j -> j
    int k -> k
    double l -> l
    java.lang.String m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    double r -> r
    double s -> s
    double t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    long z -> z
    com.baidu.location.c.e$a A -> A
    boolean B -> B
    boolean C -> C
    int D -> D
    float E -> E
    float F -> F
    long G -> G
    int H -> H
    long a -> a
    android.location.Location b -> b
    android.location.Location c -> c
    java.lang.StringBuilder d -> d
    long e -> e
    android.os.Handler I -> I
    java.lang.String f -> f
    byte[] J -> J
    byte[] K -> K
    int L -> L
    java.util.List M -> M
    boolean N -> N
    int g -> g
    double h -> h
    double i -> i
    com.baidu.location.c.e a() -> a
    void c() -> c
    void d() -> d
    void b() -> b
    boolean a(java.lang.String,android.content.Context) -> a
    void a(android.location.Location) -> a
    void b(android.location.Location) -> b
    boolean e() -> e
    void f() -> f
    void g() -> g
    void c(android.location.Location) -> c
    void h() -> h
    byte[] a(int) -> a
    void d(android.location.Location) -> d
    void e(android.location.Location) -> e
    void b(int) -> b
    byte[] a(java.lang.String) -> a
    java.lang.String a(java.io.File,java.lang.String) -> a
    void i() -> i
    java.lang.String b(java.lang.String) -> b
    void j() -> j
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void c(int) -> c
    void e(java.lang.String) -> e
    void a(com.baidu.location.c.e,android.location.Location) -> a
    java.lang.String a(com.baidu.location.c.e,java.io.File,java.lang.String) -> a
    void a(com.baidu.location.c.e,java.lang.String) -> a
com.baidu.location.c.e$a -> com.baidu.location.c.e$a:
    java.lang.String a -> a
    com.baidu.location.c.e b -> b
    void a() -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
com.baidu.location.c.f -> com.baidu.location.c.f:
    com.baidu.location.c.f b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String a -> a
    java.text.SimpleDateFormat h -> h
    com.baidu.location.c.g i -> i
    com.baidu.location.c.g j -> j
    com.baidu.location.c.f$a k -> k
    long l -> l
    com.baidu.location.c.f a() -> a
    com.baidu.location.c.g b() -> b
    void c() -> c
    void a(com.baidu.location.c.g) -> a
    void a(java.lang.String) -> a
    void d() -> d
    void b(java.lang.String) -> b
    boolean a(java.lang.String,java.util.List) -> a
    void a(java.lang.String,java.lang.String) -> a
    long a(com.baidu.location.c.f,long) -> a
com.baidu.location.c.f$a -> com.baidu.location.c.f$a:
    java.lang.String b -> b
    boolean c -> c
    com.baidu.location.c.f a -> a
    boolean b() -> b
    void a() -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
com.baidu.location.c.g -> com.baidu.location.c.g:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    void a() -> a
    void a(long) -> a
    void b(long) -> b
    void c(long) -> c
    void d(long) -> d
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String b() -> b
com.baidu.location.c.h -> com.baidu.location.c.h:
    com.baidu.location.c.h b -> b
    com.baidu.location.c.h$a c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    android.os.Handler a -> a
    com.baidu.location.c.h a() -> a
    void b() -> b
    void c() -> c
    void f() -> f
    void d() -> d
    void e() -> e
    boolean a(com.baidu.location.c.h) -> a
    boolean b(com.baidu.location.c.h) -> b
    boolean a(com.baidu.location.c.h,boolean) -> a
    void c(com.baidu.location.c.h) -> c
com.baidu.location.c.h$1 -> com.baidu.location.c.h$1:
com.baidu.location.c.h$a -> com.baidu.location.c.h$a:
    com.baidu.location.c.h a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.c.h$b -> com.baidu.location.c.h$b:
    com.baidu.location.c.h a -> a
    void run() -> run
com.baidu.location.c.i -> com.baidu.location.c.i:
    com.baidu.location.c.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.c.j -> com.baidu.location.c.j:
    android.location.Location a -> a
    com.baidu.location.c.e b -> b
    void run() -> run
com.baidu.location.c.k -> com.baidu.location.c.k:
    com.baidu.location.c.e a -> a
    void run() -> run
com.baidu.location.c.l -> com.baidu.location.c.l:
    com.baidu.location.c.h$b a -> a
    void run() -> run
com.baidu.location.d.a -> com.baidu.location.d.a:
    java.util.ArrayList a -> a
    float b -> b
    com.baidu.location.BDLocation c -> c
    long d -> d
    com.baidu.location.LocationClient e -> e
    android.content.Context f -> f
    int g -> g
    long h -> h
    boolean i -> i
    android.app.PendingIntent j -> j
    android.app.AlarmManager k -> k
    com.baidu.location.d.a$a l -> l
    com.baidu.location.d.a$b m -> m
    boolean n -> n
    void a() -> a
    int a(com.baidu.location.BDNotifyListener) -> a
    void b(com.baidu.location.BDNotifyListener) -> b
    int c(com.baidu.location.BDNotifyListener) -> c
    boolean b() -> b
    void c() -> c
    void a(long) -> a
    void a(com.baidu.location.BDLocation) -> a
    java.util.ArrayList a(com.baidu.location.d.a) -> a
    void a(com.baidu.location.d.a,com.baidu.location.BDLocation) -> a
    com.baidu.location.LocationClient b(com.baidu.location.d.a) -> b
com.baidu.location.d.a$a -> com.baidu.location.d.a$a:
    com.baidu.location.d.a a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.d.a$b -> com.baidu.location.d.a$b:
    com.baidu.location.d.a a -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.e.a -> com.baidu.location.e.a:
    com.baidu.location.e.a a -> a
    java.lang.String b -> b
    boolean c -> c
    boolean d -> d
    double e -> e
    double f -> f
    double g -> g
    double h -> h
    double i -> i
    boolean j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    android.os.Handler m -> m
    com.baidu.location.e.a a() -> a
    void b() -> b
    com.baidu.location.BDLocation a(boolean) -> a
    com.baidu.location.BDLocation a(java.lang.String,java.util.List,boolean) -> a
    void a(java.lang.String,java.util.List) -> a
    void a(java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
    void a(java.util.List,android.database.sqlite.SQLiteDatabase) -> a
    void a(java.lang.String,com.baidu.location.f.a,android.database.sqlite.SQLiteDatabase) -> a
    void a(com.baidu.location.f.i,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> a
    void a(java.lang.String,com.baidu.location.f.a,com.baidu.location.f.i,com.baidu.location.BDLocation) -> a
    java.lang.String b(boolean) -> b
    void d() -> d
    void a(com.baidu.location.e.a) -> a
    void a(com.baidu.location.e.a,java.lang.String,java.util.List) -> a
    java.lang.String a(com.baidu.location.e.a,boolean) -> a
    boolean b(com.baidu.location.e.a,boolean) -> b
    java.lang.String c() -> c
    void a(com.baidu.location.e.a,java.lang.String,com.baidu.location.f.a,android.database.sqlite.SQLiteDatabase) -> a
    void a(com.baidu.location.e.a,com.baidu.location.f.i,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> a
com.baidu.location.e.a$a -> com.baidu.location.e.a$a:
    com.baidu.location.e.a a -> a
    java.lang.Boolean a(java.lang.Boolean[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.e.a$b -> com.baidu.location.e.a$b:
    com.baidu.location.e.a a -> a
    java.lang.Boolean a(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.e.b -> com.baidu.location.e.b:
    com.baidu.location.e.a a -> a
    void run() -> run
com.baidu.location.e.c -> com.baidu.location.e.c:
    java.lang.String a -> a
    java.util.List b -> b
    com.baidu.location.e.a c -> c
    java.lang.String a() -> a
    java.lang.Object call() -> call
com.baidu.location.e.d -> com.baidu.location.e.d:
    android.content.Context c -> c
    com.baidu.location.e.d d -> d
    java.io.File e -> e
    com.baidu.location.e.k f -> f
    com.baidu.location.e.e g -> g
    com.baidu.location.e.m h -> h
    com.baidu.location.e.h i -> i
    java.lang.String a -> a
    java.lang.String b -> b
    android.net.Uri c(java.lang.String) -> c
    com.baidu.location.e.d a() -> a
    void a(android.content.Context) -> a
    android.content.Context b() -> b
    java.io.File c() -> c
    com.baidu.location.BDLocation a(java.lang.String[]) -> a
    com.baidu.location.BDLocation a(com.baidu.location.f.a,com.baidu.location.f.i,com.baidu.location.BDLocation,com.baidu.location.e.d$b,com.baidu.location.e.d$a) -> a
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    long a(java.lang.String) -> a
    void i() -> i
    com.baidu.location.e.k j() -> j
    com.baidu.location.e.m k() -> k
    com.baidu.location.e.h l() -> l
    void q() -> q
    boolean r() -> r
    void m() -> m
    void n() -> n
    double o() -> o
    android.content.Context p() -> p
    com.baidu.location.e.h a(com.baidu.location.e.d) -> a
    android.net.Uri b(java.lang.String) -> b
    com.baidu.location.e.e b(com.baidu.location.e.d) -> b
com.baidu.location.e.d$a -> com.baidu.location.e.d$a:
    com.baidu.location.e.d$a a -> a
    com.baidu.location.e.d$a b -> b
    com.baidu.location.e.d$a[] c -> c
    com.baidu.location.e.d$a[] values() -> values
    com.baidu.location.e.d$a valueOf(java.lang.String) -> valueOf
com.baidu.location.e.d$b -> com.baidu.location.e.d$b:
    com.baidu.location.e.d$b a -> a
    com.baidu.location.e.d$b b -> b
    com.baidu.location.e.d$b[] c -> c
    com.baidu.location.e.d$b[] values() -> values
    com.baidu.location.e.d$b valueOf(java.lang.String) -> valueOf
com.baidu.location.e.d$c -> com.baidu.location.e.d$c:
    com.baidu.location.e.d$c a -> a
    com.baidu.location.e.d$c b -> b
    com.baidu.location.e.d$c c -> c
    com.baidu.location.e.d$c d -> d
    com.baidu.location.e.d$c e -> e
    com.baidu.location.e.d$c[] f -> f
    com.baidu.location.e.d$c[] values() -> values
    com.baidu.location.e.d$c valueOf(java.lang.String) -> valueOf
com.baidu.location.e.e -> com.baidu.location.e.e:
    com.baidu.location.e.d a -> a
    int b -> b
    double c -> c
    double d -> d
    java.lang.Long e -> e
    com.baidu.location.e.e$c f -> f
    com.baidu.location.e.e$c g -> g
    android.database.sqlite.SQLiteDatabase h -> h
    android.database.sqlite.SQLiteDatabase i -> i
    java.lang.StringBuffer j -> j
    java.lang.StringBuffer k -> k
    java.util.HashSet l -> l
    java.util.concurrent.ConcurrentHashMap m -> m
    java.util.concurrent.ConcurrentHashMap n -> n
    java.lang.StringBuffer o -> o
    boolean p -> p
    android.database.sqlite.SQLiteDatabase a() -> a
    com.baidu.location.BDLocation a(java.lang.Long) -> a
    com.baidu.location.BDLocation a(java.util.LinkedHashMap,com.baidu.location.BDLocation,int) -> a
    void a(java.lang.String,java.lang.Long,com.baidu.location.BDLocation) -> a
    void a(java.util.LinkedHashMap) -> a
    void a(com.baidu.location.BDLocation,com.baidu.location.BDLocation,com.baidu.location.BDLocation,java.lang.String,java.lang.Long) -> a
    android.database.Cursor a(com.baidu.location.e.j$a) -> a
    double a(double,double,double,double) -> a
    int a(java.util.ArrayList,double) -> a
    void b() -> b
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String[]) -> a
    void a(com.baidu.location.e.e,java.lang.String,java.lang.Long,com.baidu.location.BDLocation) -> a
    java.lang.StringBuffer a(com.baidu.location.e.e,java.lang.StringBuffer) -> a
    java.lang.StringBuffer b(com.baidu.location.e.e,java.lang.StringBuffer) -> b
    void a(com.baidu.location.e.e,java.util.LinkedHashMap) -> a
    void a(com.baidu.location.e.e,com.baidu.location.BDLocation,com.baidu.location.BDLocation,com.baidu.location.BDLocation,java.lang.String,java.lang.Long) -> a
    com.baidu.location.e.d a(com.baidu.location.e.e) -> a
    android.database.sqlite.SQLiteDatabase b(com.baidu.location.e.e) -> b
    android.database.sqlite.SQLiteDatabase c(com.baidu.location.e.e) -> c
    void a(com.baidu.location.e.e,java.lang.String[]) -> a
    void a(com.baidu.location.e.e,java.lang.String,java.lang.String,java.lang.String) -> a
    com.baidu.location.e.e$c d(com.baidu.location.e.e) -> d
com.baidu.location.e.e$a -> com.baidu.location.e.e$a:
    double a -> a
    double b -> b
    double c -> c
com.baidu.location.e.e$b -> com.baidu.location.e.e$b:
    java.lang.String a -> a
    java.lang.Long c -> c
    com.baidu.location.BDLocation d -> d
    com.baidu.location.BDLocation e -> e
    com.baidu.location.BDLocation f -> f
    java.lang.String g -> g
    java.util.LinkedHashMap h -> h
    com.baidu.location.e.e b -> b
    void run() -> run
com.baidu.location.e.e$c -> com.baidu.location.e.e$c:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.baidu.location.e.e e -> e
    boolean f -> f
    int p -> p
    long q -> q
    long r -> r
    long s -> s
    long t -> t
    com.baidu.location.e.e a -> a
    void a() -> a
    void a(boolean) -> a
    void b() -> b
    void c() -> c
    boolean f() -> f
    void g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    boolean l() -> l
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(com.baidu.location.e.e$c,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(com.baidu.location.e.e$c,boolean) -> a
    long a(com.baidu.location.e.e$c,long) -> a
    com.baidu.location.e.e a(com.baidu.location.e.e$c) -> a
    void b(com.baidu.location.e.e$c) -> b
com.baidu.location.e.f -> com.baidu.location.e.f:
    com.baidu.location.e.e a -> a
com.baidu.location.e.g -> com.baidu.location.e.g:
    com.baidu.location.e.e$c a -> a
    void run() -> run
com.baidu.location.e.h -> com.baidu.location.e.h:
    com.baidu.location.e.d a -> a
    android.database.sqlite.SQLiteDatabase b -> b
    com.baidu.location.e.h$a c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String[] i -> i
    boolean j -> j
    int k -> k
    int l -> l
    int m -> m
    double n -> n
    double o -> o
    double p -> p
    double q -> q
    double r -> r
    int s -> s
    boolean t -> t
    long u -> u
    long v -> v
    long w -> w
    long x -> x
    long y -> y
    int a() -> a
    double b() -> b
    double c() -> c
    double d() -> d
    double e() -> e
    double f() -> f
    void g() -> g
    boolean h() -> h
    boolean i() -> i
    boolean j() -> j
    boolean k() -> k
    boolean l() -> l
    boolean m() -> m
    long a(java.lang.String) -> a
    int n() -> n
    java.lang.String[] o() -> o
    int p() -> p
    int q() -> q
    void a(java.lang.String[]) -> a
    boolean a(com.baidu.location.e.h,boolean) -> a
    boolean b(com.baidu.location.e.h,boolean) -> b
    boolean c(com.baidu.location.e.h,boolean) -> c
    boolean d(com.baidu.location.e.h,boolean) -> d
    boolean e(com.baidu.location.e.h,boolean) -> e
    boolean f(com.baidu.location.e.h,boolean) -> f
    java.lang.String[] a(com.baidu.location.e.h,java.lang.String[]) -> a
    int a(com.baidu.location.e.h,int) -> a
    int b(com.baidu.location.e.h,int) -> b
    int c(com.baidu.location.e.h,int) -> c
    double a(com.baidu.location.e.h,double) -> a
    double b(com.baidu.location.e.h,double) -> b
    double c(com.baidu.location.e.h,double) -> c
    double d(com.baidu.location.e.h,double) -> d
    double e(com.baidu.location.e.h,double) -> e
    long a(com.baidu.location.e.h,long) -> a
    long b(com.baidu.location.e.h,long) -> b
    long c(com.baidu.location.e.h,long) -> c
    long d(com.baidu.location.e.h,long) -> d
    long e(com.baidu.location.e.h,long) -> e
    int d(com.baidu.location.e.h,int) -> d
    boolean a(com.baidu.location.e.h) -> a
    boolean b(com.baidu.location.e.h) -> b
    boolean c(com.baidu.location.e.h) -> c
    boolean d(com.baidu.location.e.h) -> d
    boolean e(com.baidu.location.e.h) -> e
    boolean f(com.baidu.location.e.h) -> f
    int g(com.baidu.location.e.h) -> g
    double h(com.baidu.location.e.h) -> h
    double i(com.baidu.location.e.h) -> i
    double j(com.baidu.location.e.h) -> j
    double k(com.baidu.location.e.h) -> k
    double l(com.baidu.location.e.h) -> l
    long m(com.baidu.location.e.h) -> m
    long n(com.baidu.location.e.h) -> n
    long o(com.baidu.location.e.h) -> o
    long p(com.baidu.location.e.h) -> p
    long q(com.baidu.location.e.h) -> q
    int r(com.baidu.location.e.h) -> r
    int s(com.baidu.location.e.h) -> s
    int t(com.baidu.location.e.h) -> t
    com.baidu.location.e.d u(com.baidu.location.e.h) -> u
com.baidu.location.e.h$1 -> com.baidu.location.e.h$1:
com.baidu.location.e.h$a -> com.baidu.location.e.h$a:
    int b -> b
    long c -> c
    long d -> d
    boolean e -> e
    java.lang.String f -> f
    com.baidu.location.e.h a -> a
    void a() -> a
    void a(boolean) -> a
    void b() -> b
    boolean c() -> c
    void a(com.baidu.location.e.h$a) -> a
com.baidu.location.e.i -> com.baidu.location.e.i:
    java.lang.String[] a -> a
    com.baidu.location.e.d b -> b
    com.baidu.location.BDLocation a() -> a
    java.lang.Object call() -> call
com.baidu.location.e.j -> com.baidu.location.e.j:
    java.lang.String[] a -> a
    com.baidu.location.BDLocation a(android.database.Cursor) -> a
    android.database.Cursor a(com.baidu.location.BDLocation) -> a
    java.lang.String[] a(com.baidu.location.f.a,com.baidu.location.f.i,com.baidu.location.BDLocation,java.lang.String,boolean,int) -> a
    java.lang.String a(com.baidu.location.BDLocation,int) -> a
    java.lang.String a(com.baidu.location.BDLocation,com.baidu.location.BDLocation,com.baidu.location.e.j$a) -> a
com.baidu.location.e.j$a -> com.baidu.location.e.j$a:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    int f -> f
    com.baidu.location.BDLocation g -> g
    boolean h -> h
    java.util.LinkedHashMap i -> i
com.baidu.location.e.k -> com.baidu.location.e.k:
    java.lang.String a -> a
    android.database.sqlite.SQLiteDatabase b -> b
    com.baidu.location.e.k$a c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void a(boolean) -> a
    void a(com.baidu.location.e.k,boolean) -> a
    java.lang.String a(com.baidu.location.e.k) -> a
com.baidu.location.e.k$a -> com.baidu.location.e.k$a:
    int b -> b
    long c -> c
    java.lang.String d -> d
    boolean e -> e
    boolean f -> f
    com.baidu.location.e.k p -> p
    com.baidu.location.e.k a -> a
    void a() -> a
    void a(boolean) -> a
    void b() -> b
    void a(com.baidu.location.e.k$a) -> a
    boolean b(com.baidu.location.e.k$a) -> b
    com.baidu.location.e.k c(com.baidu.location.e.k$a) -> c
com.baidu.location.e.l -> com.baidu.location.e.l:
    com.baidu.location.e.k$a a -> a
    void run() -> run
com.baidu.location.e.m -> com.baidu.location.e.m:
    com.baidu.location.e.d a -> a
    double[] b -> b
    int c -> c
    android.database.sqlite.SQLiteDatabase d -> d
    int e -> e
    int f -> f
    boolean a() -> a
    org.json.JSONObject b() -> b
    void a(org.json.JSONObject) -> a
    com.baidu.location.Address a(double,double) -> a
    java.util.List b(double,double) -> b
    int a(int,int) -> a
    double[] b(double,double,double,double) -> b
    double c(double,double,double,double) -> c
    double a(double,double,double,double,double,double) -> a
    java.lang.String b(int,double,double) -> b
    java.lang.String a(int,double,double) -> a
    double[] c() -> c
    double[] a(double,double,double,double) -> a
com.baidu.location.e.m$1 -> com.baidu.location.e.m$1:
com.baidu.location.e.m$a -> com.baidu.location.e.m$a:
    double a -> a
    double b -> b
    double a(com.baidu.location.e.m$a) -> a
    double b(com.baidu.location.e.m$a) -> b
    double a(com.baidu.location.e.m$a,double) -> a
    double b(com.baidu.location.e.m$a,double) -> b
com.baidu.location.e.m$b -> com.baidu.location.e.m$b:
    com.baidu.location.e.m$b a -> a
    com.baidu.location.e.m$b b -> b
    com.baidu.location.e.m$b c -> c
    com.baidu.location.e.m$b d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    com.baidu.location.e.m$b[] j -> j
    com.baidu.location.e.m$b[] values() -> values
    com.baidu.location.e.m$b valueOf(java.lang.String) -> valueOf
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
    void b(java.lang.StringBuffer,java.lang.String,java.lang.String,int) -> b
    java.lang.String a(org.json.JSONObject) -> a
    java.lang.String a(int,double,double) -> a
    java.lang.String a(com.baidu.location.e.m$b) -> a
    java.lang.String b(com.baidu.location.e.m$b) -> b
    java.lang.String a(com.baidu.location.e.m$b,org.json.JSONObject) -> a
    int c(com.baidu.location.e.m$b) -> c
    java.lang.String a(com.baidu.location.e.m$b,int,double,double) -> a
    int d(com.baidu.location.e.m$b) -> d
    void a(java.lang.StringBuffer,java.lang.String,java.lang.String,int) -> a
com.baidu.location.e.n -> com.baidu.location.e.n:
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
com.baidu.location.e.o -> com.baidu.location.e.o:
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
com.baidu.location.e.p -> com.baidu.location.e.p:
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
com.baidu.location.e.q -> com.baidu.location.e.q:
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
com.baidu.location.f -> com.baidu.location.f:
    com.baidu.location.LLSInterface libJar -> libJar
    com.baidu.location.LLSInterface libNat -> libNat
    com.baidu.location.LLSInterface lib -> lib
    java.lang.String replaceFileName -> replaceFileName
    java.lang.String jarFileName -> jarFileName
    android.content.Context mC -> mC
    boolean isServing -> isServing
    void onCreate() -> onCreate
    boolean readConf(java.io.File) -> readConf
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    float getFrameVersion() -> getFrameVersion
    java.lang.String getJarFileName() -> getJarFileName
    android.content.Context getServiceContext() -> getServiceContext
com.baidu.location.f.a -> com.baidu.location.f.a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    long g -> g
    int h -> h
    char i -> i
    boolean j -> j
    boolean a(com.baidu.location.f.a) -> a
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    void f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
com.baidu.location.f.b -> com.baidu.location.f.b:
    com.baidu.location.f.b c -> c
    android.telephony.TelephonyManager d -> d
    java.lang.Object e -> e
    com.baidu.location.f.a f -> f
    com.baidu.location.f.a g -> g
    java.util.List h -> h
    com.baidu.location.f.b$a i -> i
    boolean j -> j
    java.lang.reflect.Method k -> k
    java.lang.reflect.Method l -> l
    java.lang.reflect.Method m -> m
    java.lang.reflect.Method n -> n
    java.lang.reflect.Method o -> o
    java.lang.Class p -> p
    boolean q -> q
    int a -> a
    int b -> b
    com.baidu.location.f.b a() -> a
    void b() -> b
    void c() -> c
    boolean d() -> d
    void h() -> h
    void i() -> i
    int e() -> e
    com.baidu.location.f.a f() -> f
    void j() -> j
    android.telephony.CellLocation k() -> k
    java.lang.Class l() -> l
    android.telephony.CellLocation a(java.util.List) -> a
    com.baidu.location.f.a a(android.telephony.CellLocation) -> a
    com.baidu.location.f.a a(android.telephony.CellLocation,boolean) -> a
    void c(com.baidu.location.f.a) -> c
    com.baidu.location.f.a m() -> m
    com.baidu.location.f.a a(android.telephony.CellInfo) -> a
    int a(int) -> a
    int g() -> g
    java.lang.String d(com.baidu.location.f.a) -> d
    java.lang.String a(com.baidu.location.f.a) -> a
    java.lang.String b(com.baidu.location.f.a) -> b
    int n() -> n
    void a(com.baidu.location.f.b) -> a
    com.baidu.location.f.a b(com.baidu.location.f.b) -> b
com.baidu.location.f.b$a -> com.baidu.location.f.b$a:
    com.baidu.location.f.b a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.baidu.location.f.c -> com.baidu.location.f.c:
    java.lang.String a(int) -> a
    com.baidu.location.f.d a() -> a
com.baidu.location.f.d -> com.baidu.location.f.d:
    void b() -> b
    void c() -> c
    com.baidu.location.f.a f() -> f
    java.lang.String a(com.baidu.location.f.a) -> a
    int e() -> e
    int g() -> g
com.baidu.location.f.e -> com.baidu.location.f.e:
    long a -> a
    long b -> b
    com.baidu.location.f.e c -> c
    android.content.Context d -> d
    android.location.LocationManager e -> e
    android.location.Location f -> f
    com.baidu.location.f.e$b g -> g
    com.baidu.location.f.e$c h -> h
    android.location.GpsStatus i -> i
    com.baidu.location.f.e$a j -> j
    int k -> k
    long l -> l
    boolean m -> m
    boolean n -> n
    java.lang.String o -> o
    boolean p -> p
    long q -> q
    java.lang.String r -> r
    android.os.Handler s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    java.util.HashMap z -> z
    com.baidu.location.f.e a() -> a
    void b() -> b
    void a(java.lang.String,android.location.Location) -> a
    void c() -> c
    void d() -> d
    void e() -> e
    void a(boolean) -> a
    java.lang.String a(android.location.Location) -> a
    java.lang.String f() -> f
    android.location.Location g() -> g
    boolean h() -> h
    boolean i() -> i
    boolean a(android.location.Location,android.location.Location,boolean) -> a
    void d(android.location.Location) -> d
    void e(android.location.Location) -> e
    void a(double,double,float) -> a
    void b(boolean) -> b
    java.lang.String b(android.location.Location) -> b
    java.lang.String c(android.location.Location) -> c
    java.lang.String a(android.location.GpsSatellite,java.util.HashMap) -> a
    int a(java.util.HashMap) -> a
    double[] a(java.util.List) -> a
    double[] a(double,double) -> a
    double[] b(double,double) -> b
    int a(com.baidu.location.f.m,int) -> a
    void a(com.baidu.location.f.e,android.location.Location) -> a
    com.baidu.location.f.e$a a(com.baidu.location.f.e) -> a
    void a(com.baidu.location.f.e,java.lang.String,android.location.Location) -> a
    boolean b(com.baidu.location.f.e) -> b
    android.os.Handler c(com.baidu.location.f.e) -> c
    long a(com.baidu.location.f.e,long) -> a
    void a(com.baidu.location.f.e,boolean) -> a
    void b(com.baidu.location.f.e,android.location.Location) -> b
    boolean b(com.baidu.location.f.e,boolean) -> b
    long b(com.baidu.location.f.e,long) -> b
    android.location.LocationManager d(com.baidu.location.f.e) -> d
    android.location.GpsStatus e(com.baidu.location.f.e) -> e
    android.location.GpsStatus a(com.baidu.location.f.e,android.location.GpsStatus) -> a
    int a(com.baidu.location.f.e,int) -> a
    int b(com.baidu.location.f.e,int) -> b
    java.util.HashMap a(com.baidu.location.f.e,java.util.HashMap) -> a
    int f(com.baidu.location.f.e) -> f
    java.util.HashMap g(com.baidu.location.f.e) -> g
    java.lang.String a(com.baidu.location.f.e,android.location.GpsSatellite,java.util.HashMap) -> a
    int a(int) -> a
    int h(com.baidu.location.f.e) -> h
    int a(com.baidu.location.f.e,com.baidu.location.f.m,int) -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.location.f.e$a -> com.baidu.location.f.e$a:
    long a -> a
    long c -> c
    int d -> d
    boolean e -> e
    java.util.List f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    com.baidu.location.f.e b -> b
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.baidu.location.f.e$b -> com.baidu.location.f.e$b:
    com.baidu.location.f.e a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.f.e$c -> com.baidu.location.f.e$c:
    long b -> b
    com.baidu.location.f.e a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.f.f -> com.baidu.location.f.f:
    com.baidu.location.f.g a() -> a
com.baidu.location.f.g -> com.baidu.location.f.g:
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    android.location.Location g() -> g
    boolean h() -> h
    boolean i() -> i
com.baidu.location.f.h -> com.baidu.location.f.h:
    com.baidu.location.f.e a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.f.i -> com.baidu.location.f.i:
    java.util.List a -> a
    long b -> b
    long c -> c
    boolean d -> d
    boolean e -> e
    int a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String a(int) -> a
    java.lang.String a(int,boolean) -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(int) -> b
    void i() -> i
    java.lang.String c(int) -> c
    boolean a(com.baidu.location.f.i) -> a
    boolean b(com.baidu.location.f.i) -> b
    boolean c(com.baidu.location.f.i) -> c
    int d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
com.baidu.location.f.j -> com.baidu.location.f.j:
    com.baidu.location.f.j b -> b
    android.net.wifi.WifiManager c -> c
    com.baidu.location.f.j$a d -> d
    com.baidu.location.f.i e -> e
    long f -> f
    long g -> g
    boolean h -> h
    java.lang.Object i -> i
    boolean j -> j
    android.os.Handler k -> k
    long a -> a
    com.baidu.location.f.j a() -> a
    void b() -> b
    void c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    android.net.wifi.WifiInfo h() -> h
    com.baidu.location.f.i i() -> i
    com.baidu.location.f.i j() -> j
    com.baidu.location.f.i k() -> k
    void m() -> m
    boolean a(com.baidu.location.f.i,com.baidu.location.f.i,float) -> a
    java.lang.String l() -> l
    void a(com.baidu.location.f.j) -> a
com.baidu.location.f.j$1 -> com.baidu.location.f.j$1:
com.baidu.location.f.j$a -> com.baidu.location.f.j$a:
    long b -> b
    boolean c -> c
    com.baidu.location.f.j a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.f.k -> com.baidu.location.f.k:
    com.baidu.location.f.l a() -> a
com.baidu.location.f.l -> com.baidu.location.f.l:
    void b() -> b
    void c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    com.baidu.location.f.i i() -> i
    com.baidu.location.f.i j() -> j
    com.baidu.location.f.i k() -> k
    java.lang.String l() -> l
    android.net.wifi.WifiInfo h() -> h
com.baidu.location.f.m -> com.baidu.location.f.m:
    boolean c -> c
    java.lang.String d -> d
    boolean e -> e
    double f -> f
    double g -> g
    java.lang.String a -> a
    int b -> b
    void d() -> d
    boolean a(java.lang.String) -> a
    boolean a() -> a
    double b() -> b
    double c() -> c
com.baidu.location.g.a -> com.baidu.location.g.a:
    com.baidu.location.g.a$a a -> a
    android.os.Messenger b -> b
    android.os.Looper c -> c
    android.os.HandlerThread d -> d
    boolean e -> e
    long f -> f
    void onCreate(android.content.Context) -> onCreate
    void b() -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void c() -> c
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.Handler a() -> a
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    boolean onUnBind(android.content.Intent) -> onUnBind
    double getVersion() -> getVersion
    void a(com.baidu.location.g.a,android.os.Message) -> a
    void b(com.baidu.location.g.a,android.os.Message) -> b
    void c(com.baidu.location.g.a,android.os.Message) -> c
    void a(com.baidu.location.g.a) -> a
    void b(com.baidu.location.g.a) -> b
com.baidu.location.g.a$a -> com.baidu.location.g.a$a:
    com.baidu.location.g.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.h.a -> com.baidu.location.h.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.location.h.a$a -> com.baidu.location.h.a$a:
    java.lang.String a(byte[]) -> a
com.baidu.location.h.b -> com.baidu.location.h.b:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
com.baidu.location.h.c -> com.baidu.location.h.c:
    com.baidu.location.h.c g -> g
    java.lang.String a -> a
    java.lang.String b -> b
    boolean h -> h
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.baidu.location.h.c a() -> a
    void a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String a(boolean) -> a
    java.lang.String a(boolean,java.lang.String) -> a
    java.lang.String d() -> d
com.baidu.location.h.d -> com.baidu.location.h.d:
    java.lang.String a -> a
    int b -> b
    com.baidu.location.h.d c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    com.baidu.location.h.d a() -> a
    void a(int,long) -> a
    long a(int) -> a
    long b() -> b
    void a(long) -> a
    long c() -> c
    void b(long) -> b
com.baidu.location.h.e -> com.baidu.location.h.e:
    com.baidu.location.h.e a -> a
    double[][] b -> b
    java.util.LinkedList c -> c
    com.baidu.location.h.e a() -> a
    boolean a(double,double) -> a
    int a(double) -> a
com.baidu.location.h.e$a -> com.baidu.location.h.e$a:
    double a -> a
    double b -> b
    com.baidu.location.h.e c -> c
com.baidu.location.h.e$b -> com.baidu.location.h.e$b:
    com.baidu.location.h.e$a a -> a
    com.baidu.location.h.e$a b -> b
    com.baidu.location.h.e c -> c
    double a(com.baidu.location.h.e$a) -> a
    boolean b(com.baidu.location.h.e$a) -> b
com.baidu.location.h.f -> com.baidu.location.h.f:
    int g -> g
    java.lang.String a -> a
    int b -> b
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    java.util.Map k -> k
    java.lang.String l -> l
    byte[] m -> m
    java.lang.String n -> n
    int o -> o
    void a() -> a
    void a(boolean) -> a
    void d() -> d
    void e() -> e
    void b(boolean) -> b
    void b() -> b
    int c() -> c
    int a(android.content.Context,android.net.NetworkInfo) -> a
    void a(com.baidu.location.h.f) -> a
com.baidu.location.h.g -> com.baidu.location.h.g:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    java.lang.String a() -> a
    java.lang.String toString() -> toString
com.baidu.location.h.h -> com.baidu.location.h.h:
    java.util.List b -> b
    com.baidu.location.h.h c -> c
    android.content.Context d -> d
    java.lang.String a -> a
    com.baidu.location.h.h a() -> a
    java.lang.String b() -> b
    java.util.List c() -> c
    java.util.List d() -> d
    java.util.List e() -> e
    boolean a(java.lang.String) -> a
com.baidu.location.h.i -> com.baidu.location.h.i:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    int d -> d
    java.lang.String as -> as
    java.lang.String e -> e
    java.lang.String at -> at
    java.lang.String au -> au
    java.lang.String av -> av
    java.lang.String aw -> aw
    java.lang.String ax -> ax
    java.lang.String ay -> ay
    java.lang.String az -> az
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    java.lang.String l -> l
    boolean m -> m
    int n -> n
    double o -> o
    double p -> p
    double q -> q
    double r -> r
    int s -> s
    byte[] t -> t
    boolean u -> u
    int v -> v
    float w -> w
    float x -> x
    float y -> y
    float z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    float H -> H
    float I -> I
    float J -> J
    float K -> K
    int L -> L
    float M -> M
    int N -> N
    float O -> O
    float P -> P
    float Q -> Q
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    boolean X -> X
    boolean Y -> Y
    int Z -> Z
    int aa -> aa
    int ab -> ab
    long ac -> ac
    long ad -> ad
    long ae -> ae
    long af -> af
    long ag -> ag
    long ah -> ah
    int ai -> ai
    int aj -> aj
    int ak -> ak
    int al -> al
    float am -> am
    float an -> an
    float ao -> ao
    int ap -> ap
    int aq -> aq
    int ar -> ar
    int a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.Object a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String a(com.baidu.location.f.a,com.baidu.location.f.i,android.location.Location,java.lang.String,int) -> a
    boolean a(android.content.Context) -> a
    java.lang.String b() -> b
    java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.String,java.lang.Object[]) -> b
    boolean a(com.baidu.location.BDLocation) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String a(java.io.File) -> a
com.baidu.location.h.j -> com.baidu.location.h.j:
    com.baidu.location.h.f a -> a
    void run() -> run
com.baidu.location.h.k -> com.baidu.location.h.k:
    boolean a -> a
    com.baidu.location.h.f b -> b
    void run() -> run
com.baidu.mapapi.BMapManager -> com.baidu.mapapi.BMapManager:
    void init() -> init
    void destroy() -> destroy
    android.content.Context getContext() -> getContext
com.baidu.mapapi.MessageCenter -> com.baidu.mapapi.MessageCenter:
    void registMessage(int,android.os.Handler) -> registMessage
    void unregistMessage(int,android.os.Handler) -> unregistMessage
com.baidu.mapapi.ModuleName -> com.baidu.mapapi.ModuleName:
    com.baidu.mapapi.ModuleName TILE_OVERLAY_MODULE -> TILE_OVERLAY_MODULE
    com.baidu.mapapi.ModuleName[] $VALUES -> $VALUES
    com.baidu.mapapi.ModuleName[] values() -> values
    com.baidu.mapapi.ModuleName valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.OpenLogUtil -> com.baidu.mapapi.OpenLogUtil:
    com.baidu.mapapi.ModuleName a -> a
    void setModuleLogEnable(com.baidu.mapapi.ModuleName,boolean) -> setModuleLogEnable
com.baidu.mapapi.SDKInitializer -> com.baidu.mapapi.SDKInitializer:
    java.lang.String SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_OK -> SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_OK
    java.lang.String SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR -> SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR
    java.lang.String SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR -> SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR
    java.lang.String SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE -> SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE
    void initialize(java.lang.String,android.content.Context) -> initialize
    void initialize(android.content.Context) -> initialize
com.baidu.mapapi.UIMsg -> com.baidu.mapapi.UIMsg:
    java.lang.String UI_TIP_MAX_SCALE -> UI_TIP_MAX_SCALE
    java.lang.String UI_TIP_MIN_SCALE -> UI_TIP_MIN_SCALE
    java.lang.String UI_TIP_GEO_ERROR -> UI_TIP_GEO_ERROR
    java.lang.String UI_TIP_LOCATION -> UI_TIP_LOCATION
    java.lang.String UI_TIP_LOCATION_ERROR -> UI_TIP_LOCATION_ERROR
    java.lang.String UI_TIP_LOCATION_CHANGE -> UI_TIP_LOCATION_CHANGE
    java.lang.String UI_TIP_POI_SEARCH_ERROR -> UI_TIP_POI_SEARCH_ERROR
    java.lang.String UI_TIP_TRAFFIC_ON -> UI_TIP_TRAFFIC_ON
    java.lang.String UI_TIP_TRAFFIC_OFF -> UI_TIP_TRAFFIC_OFF
    java.lang.String UI_TIP_TRAFFIC_NO -> UI_TIP_TRAFFIC_NO
    java.lang.String UI_TIP_TRAFFIC_CHINA_NO -> UI_TIP_TRAFFIC_CHINA_NO
    java.lang.String UI_TIP_FRIEND_ON -> UI_TIP_FRIEND_ON
    java.lang.String UI_TIP_FRIEND_OFF -> UI_TIP_FRIEND_OFF
    java.lang.String UI_TIP_FAVORITE_ON -> UI_TIP_FAVORITE_ON
    java.lang.String UI_TIP_FAVORITE_OFF -> UI_TIP_FAVORITE_OFF
    java.lang.String UI_TIP_SATELLITE_ON -> UI_TIP_SATELLITE_ON
    java.lang.String UI_TIP_SATELLITE_OFF -> UI_TIP_SATELLITE_OFF
    java.lang.String UI_TIP_SATELLITE_NO -> UI_TIP_SATELLITE_NO
    java.lang.String UI_TIP_SHOW_TO_FRIEND -> UI_TIP_SHOW_TO_FRIEND
    java.lang.String UI_TIP_HIDE_TO_FRIEND -> UI_TIP_HIDE_TO_FRIEND
    java.lang.String UI_TIP_NEW_VERSION -> UI_TIP_NEW_VERSION
    java.lang.String UI_TIP_NET_NETWORK_CONNECT_ERROR -> UI_TIP_NET_NETWORK_CONNECT_ERROR
    java.lang.String UI_TIP_NET_USER_CANCEL -> UI_TIP_NET_USER_CANCEL
    java.lang.String UI_TIP_NET_NETWORK_DATA_ERROR -> UI_TIP_NET_NETWORK_DATA_ERROR
    java.lang.String UI_TIP_NET_NETWORK_TIMEOUT_ERROR -> UI_TIP_NET_NETWORK_TIMEOUT_ERROR
    java.lang.String UI_TIP_NET_RESULT_NOT_FOUND -> UI_TIP_NET_RESULT_NOT_FOUND
    java.lang.String UI_TIP_NET_CORE_MEMORY_ALLOCATE_ERROR -> UI_TIP_NET_CORE_MEMORY_ALLOCATE_ERROR
    java.lang.String UI_TIP_NET_CORE_TRANS_CODE_ERROR -> UI_TIP_NET_CORE_TRANS_CODE_ERROR
    java.lang.String UI_TIP_NET_NETWORK_ERROR_404 -> UI_TIP_NET_NETWORK_ERROR_404
    java.lang.String UI_TIP_NET_RP_NOT_SUPPORT_BUS -> UI_TIP_NET_RP_NOT_SUPPORT_BUS
    java.lang.String UI_TIP_NET_RP_NOT_SUPPORT_BUS_2CITY -> UI_TIP_NET_RP_NOT_SUPPORT_BUS_2CITY
    java.lang.String UI_TIP_NET_RP_ST_EN_TOO_NEAR -> UI_TIP_NET_RP_ST_EN_TOO_NEAR
    java.lang.String UI_TIP_NET_NETWORK_GET_CITYID_ERROR -> UI_TIP_NET_NETWORK_GET_CITYID_ERROR
    java.lang.String UI_TIP_NET_UNDEFINED_ERROR -> UI_TIP_NET_UNDEFINED_ERROR
    java.lang.String UI_TIP_INPUT_START -> UI_TIP_INPUT_START
    java.lang.String UI_TIP_INPUT_GOALS -> UI_TIP_INPUT_GOALS
    java.lang.String UI_TIP_INPUT_START_EQUALS_GOAL -> UI_TIP_INPUT_START_EQUALS_GOAL
    java.lang.String UI_TIP_START_INVALID -> UI_TIP_START_INVALID
    java.lang.String UI_TIP_GOALS_INVALID -> UI_TIP_GOALS_INVALID
    java.lang.String UI_TIP_START_FAILURE -> UI_TIP_START_FAILURE
    java.lang.String UI_TIP_GOALS_FAILURE -> UI_TIP_GOALS_FAILURE
    java.lang.String UI_TIP_SEARCHING -> UI_TIP_SEARCHING
    java.lang.String UI_TIP_AR_ENTERING -> UI_TIP_AR_ENTERING
    java.lang.String UI_TIP_YOUR_SEARCH_START -> UI_TIP_YOUR_SEARCH_START
    java.lang.String UI_TIP_YOUR_SEARCH_GOALS -> UI_TIP_YOUR_SEARCH_GOALS
    java.lang.String UI_TIP_YOUR_SEARCH_START_IN_CITY -> UI_TIP_YOUR_SEARCH_START_IN_CITY
    java.lang.String UI_TIP_YOUR_SEARCH_GOALS_IN_CITY -> UI_TIP_YOUR_SEARCH_GOALS_IN_CITY
    java.lang.String UI_TIP_INDOOR_NOT_IN_BUILDING -> UI_TIP_INDOOR_NOT_IN_BUILDING
    java.lang.String UI_TIP_INDOOR_NO_GPS -> UI_TIP_INDOOR_NO_GPS
    java.lang.String UI_TIP_SDCARD_NO_SPACE -> UI_TIP_SDCARD_NO_SPACE
com.baidu.mapapi.UIMsg$UIGPSStatus -> com.baidu.mapapi.UIMsg$UIGPSStatus:
    int GPS_DEVICE_DISABLED -> GPS_DEVICE_DISABLED
    int GPS_DEVICE_ENABLED -> GPS_DEVICE_ENABLED
    int GPS_SIGNAL_CONNECTED -> GPS_SIGNAL_CONNECTED
    int GPS_SIGNAL_NOT_CONNECTED -> GPS_SIGNAL_NOT_CONNECTED
    int GPS_SIGNAL_SATELLITE_NUM -> GPS_SIGNAL_SATELLITE_NUM
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$UIHttpType -> com.baidu.mapapi.UIMsg$UIHttpType:
    int NET_HTTP_NONE -> NET_HTTP_NONE
    int APP_SEARCH_REQ -> APP_SEARCH_REQ
    int MAP_IMAGE_REQ -> MAP_IMAGE_REQ
    int VERSION_UPDATE -> VERSION_UPDATE
    int NET_HTTP_FLS -> NET_HTTP_FLS
    int ADD_FLS -> ADD_FLS
    int VOICE_SEARCH_REQ -> VOICE_SEARCH_REQ
    int VERSION_UPDATE_NAV_MODULE -> VERSION_UPDATE_NAV_MODULE
    int SHOW_TO_FRI_REQ -> SHOW_TO_FRI_REQ
    int HIDE_TO_FRI_REQ -> HIDE_TO_FRI_REQ
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$UIOffType -> com.baidu.mapapi.UIMsg$UIOffType:
    int MSG_OFFLINE_WIFICONNECT -> MSG_OFFLINE_WIFICONNECT
    int MSG_DATARUN_EXCEPTION -> MSG_DATARUN_EXCEPTION
    int MSG_OFFLINE_UPDATE -> MSG_OFFLINE_UPDATE
    int MSG_OFFLINE_FIRSTLOC -> MSG_OFFLINE_FIRSTLOC
    int MSG_OFFLINE_SECONDLOC -> MSG_OFFLINE_SECONDLOC
    int MSG_OFFLINE_VERUPDATE -> MSG_OFFLINE_VERUPDATE
    int MSG_OFFLINE_MEMENOUGH -> MSG_OFFLINE_MEMENOUGH
    int MSG_OFFLINE_FIND -> MSG_OFFLINE_FIND
    int MSG_TEMPORY_UPDATE -> MSG_TEMPORY_UPDATE
    int MSG_OFFLINE_DOWNLOADING -> MSG_OFFLINE_DOWNLOADING
    int MSG_OFFLINE_ADD -> MSG_OFFLINE_ADD
    int MSG_OFFLINE_NETERROR -> MSG_OFFLINE_NETERROR
    int MSG_OFFLINE_DELETE -> MSG_OFFLINE_DELETE
    int MSG_OFFLINE_DETECTED -> MSG_OFFLINE_DETECTED
    int MSG_OFFLINE_PROGRESS -> MSG_OFFLINE_PROGRESS
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$d_ResultType -> com.baidu.mapapi.UIMsg$d_ResultType:
    int TYPE_ERROR -> TYPE_ERROR
    int CITY_QUERY -> CITY_QUERY
    int CENTER_CITY -> CENTER_CITY
    int POI_DETAIL -> POI_DETAIL
    int CITY_LIST -> CITY_LIST
    int POI_LIST -> POI_LIST
    int CIRCUM_SEARCH_LIST -> CIRCUM_SEARCH_LIST
    int BUS_ROUTE -> BUS_ROUTE
    int BUS_DETAIL -> BUS_DETAIL
    int BUS_REPORT -> BUS_REPORT
    int CAR_ROUTE -> CAR_ROUTE
    int AREA_SEARCH_LIST -> AREA_SEARCH_LIST
    int NEARBY_CENTER_LIST -> NEARBY_CENTER_LIST
    int ADDR_LIST -> ADDR_LIST
    int ESPECIAL_QUERY -> ESPECIAL_QUERY
    int FOOT_ROUTE -> FOOT_ROUTE
    int POIRGC_DETAIL -> POIRGC_DETAIL
    int REVERSE_GEOCODING_SEARCH -> REVERSE_GEOCODING_SEARCH
    int SHORT_URL -> SHORT_URL
    int VERSION_CHECK -> VERSION_CHECK
    int NEWVERSION_DOWNLOAD -> NEWVERSION_DOWNLOAD
    int CELLID_LOCATE_REQ -> CELLID_LOCATE_REQ
    int LOC_INFO_UPLOAD -> LOC_INFO_UPLOAD
    int ITS_ROAD_SEARCH -> ITS_ROAD_SEARCH
    int SUGGESTION_SEARCH -> SUGGESTION_SEARCH
    int OFFLINETASK_SEARCH -> OFFLINETASK_SEARCH
    int LONG_URL -> LONG_URL
    int FLS_REQ -> FLS_REQ
    int POI_BKG_DATA -> POI_BKG_DATA
    int CITY_SUP_ITS -> CITY_SUP_ITS
    int VOICE_REQ -> VOICE_REQ
    int RECOMMANDLINK_SEARCH -> RECOMMANDLINK_SEARCH
    int VERSION_CHECK_NAV_MODULE -> VERSION_CHECK_NAV_MODULE
    int NEWVERSION_DOWNLOAD_NAV_MODULE -> NEWVERSION_DOWNLOAD_NAV_MODULE
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$f_FUN -> com.baidu.mapapi.UIMsg$f_FUN:
    int FUN_ID_MAP -> FUN_ID_MAP
    int FUN_ID_MAP_ACTION -> FUN_ID_MAP_ACTION
    int FUN_ID_MAP_ACTION_ZOOM_IN -> FUN_ID_MAP_ACTION_ZOOM_IN
    int FUN_ID_MAP_ACTION_ZOOM_OUT -> FUN_ID_MAP_ACTION_ZOOM_OUT
    int FUN_ID_MAP_ACTION_CLICK_DOWN -> FUN_ID_MAP_ACTION_CLICK_DOWN
    int FUN_ID_MAP_ACTION_CLICK_MOVE -> FUN_ID_MAP_ACTION_CLICK_MOVE
    int FUN_ID_MAP_ACTION_CLICK_UP -> FUN_ID_MAP_ACTION_CLICK_UP
    int FUN_ID_MAP_ACTION_FOCUS_AT -> FUN_ID_MAP_ACTION_FOCUS_AT
    int FUN_ID_MAP_OPTION -> FUN_ID_MAP_OPTION
    int FUN_ID_MAP_OPTION_POI -> FUN_ID_MAP_OPTION_POI
    int FUN_ID_MAP_OPTION_STATION -> FUN_ID_MAP_OPTION_STATION
    int FUN_ID_MAP_OPTION_ROUTE -> FUN_ID_MAP_OPTION_ROUTE
    int FUN_ID_MAP_OPTION_FAVORITE -> FUN_ID_MAP_OPTION_FAVORITE
    int FUN_ID_MAP_OPTION_REAL_ITS -> FUN_ID_MAP_OPTION_REAL_ITS
    int FUN_ID_MAP_OPTION_PREV_ITS -> FUN_ID_MAP_OPTION_PREV_ITS
    int FUN_ID_MAP_OPTION_SCALE -> FUN_ID_MAP_OPTION_SCALE
    int FUN_ID_MAP_OPTION_FLS -> FUN_ID_MAP_OPTION_FLS
    int FUN_ID_MAP_OPTION_RGC -> FUN_ID_MAP_OPTION_RGC
    int FUN_ID_MAP_OPTION_POI_SMS -> FUN_ID_MAP_OPTION_POI_SMS
    int FUN_ID_MAP_OPTION_RGC_SMS -> FUN_ID_MAP_OPTION_RGC_SMS
    int FUN_ID_MAP_STATE -> FUN_ID_MAP_STATE
    int FUN_ID_MAP_STATE_NORMAL -> FUN_ID_MAP_STATE_NORMAL
    int FUN_ID_MAP_STATE_LOCATE -> FUN_ID_MAP_STATE_LOCATE
    int FUN_ID_SCH -> FUN_ID_SCH
    int FUN_ID_SCH_POI -> FUN_ID_SCH_POI
    int FUN_ID_SCH_POI_OPTION -> FUN_ID_SCH_POI_OPTION
    int FUN_ID_SCH_POI_OPTION_ONE -> FUN_ID_SCH_POI_OPTION_ONE
    int FUN_ID_SCH_POI_OPTION_FORCE -> FUN_ID_SCH_POI_OPTION_FORCE
    int FUN_ID_SCH_POI_OPTION_CIRCUM -> FUN_ID_SCH_POI_OPTION_CIRCUM
    int FUN_ID_SCH_POI_OPTION_AREA -> FUN_ID_SCH_POI_OPTION_AREA
    int FUN_ID_SCH_POI_OPTION_BSLD -> FUN_ID_SCH_POI_OPTION_BSLD
    int FUN_ID_SCH_POI_OPTION_SUGGEST -> FUN_ID_SCH_POI_OPTION_SUGGEST
    int FUN_ID_SCH_POI_OPTION_OFFLINETASK -> FUN_ID_SCH_POI_OPTION_OFFLINETASK
    int FUN_ID_SCH_POI_OPTION_RGC -> FUN_ID_SCH_POI_OPTION_RGC
    int FUN_ID_SCH_POI_OPTION_RGC_SHORTURL -> FUN_ID_SCH_POI_OPTION_RGC_SHORTURL
    int FUN_ID_SCH_POI_OPTION_RECOMMANDLINK -> FUN_ID_SCH_POI_OPTION_RECOMMANDLINK
    int FUN_ID_SCH_POI_OPTION_NEARBY_CENTER -> FUN_ID_SCH_POI_OPTION_NEARBY_CENTER
    int FUN_ID_SCH_POI_ACTION -> FUN_ID_SCH_POI_ACTION
    int FUN_ID_SCH_POI_ACTION_SET_KEY -> FUN_ID_SCH_POI_ACTION_SET_KEY
    int FUN_ID_SCH_POI_ACTION_SET_PAGE -> FUN_ID_SCH_POI_ACTION_SET_PAGE
    int FUN_ID_SCH_POI_ACTION_SEARCH -> FUN_ID_SCH_POI_ACTION_SEARCH
    int FUN_ID_SCH_POI_ACTION_RECV_RET -> FUN_ID_SCH_POI_ACTION_RECV_RET
    int FUN_ID_SCH_POI_ACTION_VIEW_RCD -> FUN_ID_SCH_POI_ACTION_VIEW_RCD
    int FUN_ID_SCH_NAV -> FUN_ID_SCH_NAV
    int FUN_ID_SCH_NAV_OPTION -> FUN_ID_SCH_NAV_OPTION
    int FUN_ID_SCH_NAV_OPTION_BUS -> FUN_ID_SCH_NAV_OPTION_BUS
    int FUN_ID_SCH_NAV_OPTION_CAR -> FUN_ID_SCH_NAV_OPTION_CAR
    int FUN_ID_SCH_NAV_OPTION_FOOT -> FUN_ID_SCH_NAV_OPTION_FOOT
    int FUN_ID_SCH_NAV_OPTION_ALERT_START -> FUN_ID_SCH_NAV_OPTION_ALERT_START
    int FUN_ID_SCH_NAV_OPTION_ALERT_PAUSE -> FUN_ID_SCH_NAV_OPTION_ALERT_PAUSE
    int FUN_ID_SCH_NAV_OPTION_ALERT_STOP -> FUN_ID_SCH_NAV_OPTION_ALERT_STOP
    int FUN_ID_SCH_NAV_OPTION_ALERT_SETTING -> FUN_ID_SCH_NAV_OPTION_ALERT_SETTING
    int FUN_ID_SCH_NAV_ACTION -> FUN_ID_SCH_NAV_ACTION
    int FUN_ID_SCH_NAV_ACTION_SET_KEY -> FUN_ID_SCH_NAV_ACTION_SET_KEY
    int FUN_ID_SCH_NAV_ACTION_SET_PAGE -> FUN_ID_SCH_NAV_ACTION_SET_PAGE
    int FUN_ID_SCH_NAV_ACTION_SEARCH -> FUN_ID_SCH_NAV_ACTION_SEARCH
    int FUN_ID_SCH_NAV_ACTION_RECV_RET -> FUN_ID_SCH_NAV_ACTION_RECV_RET
    int FUN_ID_SCH_NAV_ACTION_VIEW_RCD -> FUN_ID_SCH_NAV_ACTION_VIEW_RCD
    int FUN_ID_SCH_NAV_ACTION_SEARCH_CHANGE -> FUN_ID_SCH_NAV_ACTION_SEARCH_CHANGE
    int FUN_ID_SCH_NAV_ACTION_SEARCH_BACK -> FUN_ID_SCH_NAV_ACTION_SEARCH_BACK
    int FUN_ID_SCH_NAV_ACTION_SEARCH_POILIST -> FUN_ID_SCH_NAV_ACTION_SEARCH_POILIST
    int FUN_ID_SCH_NAV_ACTION_SEARCH_CITY -> FUN_ID_SCH_NAV_ACTION_SEARCH_CITY
    int FUN_ID_SCH_NAV_ACTION_ALERT -> FUN_ID_SCH_NAV_ACTION_ALERT
    int FUN_ID_SCH_NAV_ACTION_ALERT_RECV_RET -> FUN_ID_SCH_NAV_ACTION_ALERT_RECV_RET
    int FUN_ID_SCH_NAV_ACTION_RECV_BUSREPORT -> FUN_ID_SCH_NAV_ACTION_RECV_BUSREPORT
    int FUN_ID_SCH_NAV_ACTION_RESET_POS -> FUN_ID_SCH_NAV_ACTION_RESET_POS
    int FUN_ID_NET -> FUN_ID_NET
    int FUN_ID_NET_OPTION -> FUN_ID_NET_OPTION
    int FUN_ID_GBS -> FUN_ID_GBS
    int FUN_ID_GBS_OPTION -> FUN_ID_GBS_OPTION
    int FUN_ID_GBS_OPTION_GPS -> FUN_ID_GBS_OPTION_GPS
    int FUN_ID_GBS_OPTION_CELL -> FUN_ID_GBS_OPTION_CELL
    int FUN_ID_HIS -> FUN_ID_HIS
    int FUN_ID_HIS_OPTION -> FUN_ID_HIS_OPTION
    int FUN_ID_HIS_OPTION_POI -> FUN_ID_HIS_OPTION_POI
    int FUN_ID_HIS_OPTION_ROT -> FUN_ID_HIS_OPTION_ROT
    int FUN_ID_HIS_ACTION -> FUN_ID_HIS_ACTION
    int FUN_ID_HIS_ACTION_VIEW_RET -> FUN_ID_HIS_ACTION_VIEW_RET
    int FUN_ID_HIS_ACTION_ADD -> FUN_ID_HIS_ACTION_ADD
    int FUN_ID_HIS_ACTION_EDIT_RCD -> FUN_ID_HIS_ACTION_EDIT_RCD
    int FUN_ID_HIS_ACTION_REMOVEAT -> FUN_ID_HIS_ACTION_REMOVEAT
    int FUN_ID_HIS_ACTION_VIEW_RCD -> FUN_ID_HIS_ACTION_VIEW_RCD
    int FUN_ID_HIS_ACTION_HOTKEY -> FUN_ID_HIS_ACTION_HOTKEY
    int FUN_ID_HIS_ACTION_HOTKEY_SET -> FUN_ID_HIS_ACTION_HOTKEY_SET
    int FUN_ID_HIS_ACTION_HOTKEY_GET -> FUN_ID_HIS_ACTION_HOTKEY_GET
    int FUN_ID_UTIL -> FUN_ID_UTIL
    int FUN_ID_UTIL_ACTION -> FUN_ID_UTIL_ACTION
    int FUN_ID_UTIL_ACTION_SCREENTOGEM -> FUN_ID_UTIL_ACTION_SCREENTOGEM
    int FUN_ID_UTIL_ACTION_LATILONGI_TO_BAIDUGEO -> FUN_ID_UTIL_ACTION_LATILONGI_TO_BAIDUGEO
    int FUN_ID_UTIL_ACTION_GEMTOSCREEN -> FUN_ID_UTIL_ACTION_GEMTOSCREEN
    int FUN_ID_UTIL_ACTION_SMS -> FUN_ID_UTIL_ACTION_SMS
    int FUN_ID_UTIL_ACTION_MMS -> FUN_ID_UTIL_ACTION_MMS
    int FUN_ID_UTIL_ACTION_SMSCALLBACK -> FUN_ID_UTIL_ACTION_SMSCALLBACK
    int FUN_ID_UTIL_OPTION_POI -> FUN_ID_UTIL_OPTION_POI
    int FUN_ID_UTIL_OPTION_POI_RGC -> FUN_ID_UTIL_OPTION_POI_RGC
    int FUN_ID_UTIL_OPTION_ROT -> FUN_ID_UTIL_OPTION_ROT
    int FUN_ID_UTIL_OPTION_FLS_ACTION -> FUN_ID_UTIL_OPTION_FLS_ACTION
    int FUN_ID_UTIL_ACTION_REQUIRE -> FUN_ID_UTIL_ACTION_REQUIRE
    int FUN_ID_UTIL_ACTION_UPDATE -> FUN_ID_UTIL_ACTION_UPDATE
    int FUN_ID_UTIL_OPTION_UPDATE_CHECK -> FUN_ID_UTIL_OPTION_UPDATE_CHECK
    int FUN_ID_UTIL_OPTION_UPDATE_START -> FUN_ID_UTIL_OPTION_UPDATE_START
    int FUN_ID_UTIL_OPTION_UPDATE_DESC -> FUN_ID_UTIL_OPTION_UPDATE_DESC
    int FUN_ID_UTIL_ACTION_UPDATE_NAV_MODULE -> FUN_ID_UTIL_ACTION_UPDATE_NAV_MODULE
    int FUN_ID_UTIL_OPTION_UPDATE_CHECK_NAV_MODULE -> FUN_ID_UTIL_OPTION_UPDATE_CHECK_NAV_MODULE
    int FUN_ID_UTIL_OPTION_UPDATE_START_NAV_MODULE -> FUN_ID_UTIL_OPTION_UPDATE_START_NAV_MODULE
    int FUN_ID_UTIL_OPTION_UPDATE_DESC_NAV_MODULE -> FUN_ID_UTIL_OPTION_UPDATE_DESC_NAV_MODULE
    int FUN_ID_UTIL_ACTION_SYSINFO -> FUN_ID_UTIL_ACTION_SYSINFO
    int FUN_ID_UTIL_OPTION_NOWIFI -> FUN_ID_UTIL_OPTION_NOWIFI
    int FUN_ID_UTIL_OPTION_SETWIFI -> FUN_ID_UTIL_OPTION_SETWIFI
    int FUN_ID_UTIL_OPTION_OTHERSYS -> FUN_ID_UTIL_OPTION_OTHERSYS
    int FUN_ID_UTIL_OPTION_GETINSTALL -> FUN_ID_UTIL_OPTION_GETINSTALL
    int FUN_ID_UTIL_OPTION_SETINSTALL -> FUN_ID_UTIL_OPTION_SETINSTALL
    int FUN_ID_UTIL_ACTION_LOC -> FUN_ID_UTIL_ACTION_LOC
    int FUN_ID_UTIL_OPTION_LOC_SET -> FUN_ID_UTIL_OPTION_LOC_SET
    int FUN_ID_UTIL_OPTION_LOC_GET -> FUN_ID_UTIL_OPTION_LOC_GET
    int FUN_ID_UTIL_ACTION_RESET -> FUN_ID_UTIL_ACTION_RESET
    int FUN_ID_UTIL_ACTION_ALRIGHT -> FUN_ID_UTIL_ACTION_ALRIGHT
    int FUN_ID_UTIL_OPTION_ALRIGHT_SET -> FUN_ID_UTIL_OPTION_ALRIGHT_SET
    int FUN_ID_UTIL_OPTION_ALRIGHT_GET -> FUN_ID_UTIL_OPTION_ALRIGHT_GET
    int FUN_ID_UTIL_ACTION_MAP -> FUN_ID_UTIL_ACTION_MAP
    int FUN_ID_UTIL_OPTION_MAPTMPAUTOUPDATE_SET -> FUN_ID_UTIL_OPTION_MAPTMPAUTOUPDATE_SET
    int FUN_ID_UTIL_OPTION_MAPTMPAUTOUPDATE_GET -> FUN_ID_UTIL_OPTION_MAPTMPAUTOUPDATE_GET
    int FUN_ID_UTIL_OPTION_MAPDATATMPSIZE_GET -> FUN_ID_UTIL_OPTION_MAPDATATMPSIZE_GET
    int FUN_ID_UTIL_OPTION_MAPDATAVMPSIZE_GET -> FUN_ID_UTIL_OPTION_MAPDATAVMPSIZE_GET
    int FUN_ID_UTIL_OPTION_MAPANIMATION -> FUN_ID_UTIL_OPTION_MAPANIMATION
    int FUN_ID_UTIL_OPTION_MAPDATADOMSIZE_GET -> FUN_ID_UTIL_OPTION_MAPDATADOMSIZE_GET
    int FUN_ID_UTIL_ACTION_SHOWPAOPAO -> FUN_ID_UTIL_ACTION_SHOWPAOPAO
    int FUN_ID_UTIL_ACTION_FLS_ADDPAOPAO -> FUN_ID_UTIL_ACTION_FLS_ADDPAOPAO
    int FUN_ID_UTIL_ACTION_FLS_SHOWPAOPAO -> FUN_ID_UTIL_ACTION_FLS_SHOWPAOPAO
    int FUN_ID_UTIL_ACTION_GETSCALEDATA -> FUN_ID_UTIL_ACTION_GETSCALEDATA
    int FUN_ID_OFFLINE_ACTION_CURRENTCITY -> FUN_ID_OFFLINE_ACTION_CURRENTCITY
    int FUN_ID_OFFLINE_ACTION_HOTCITYGETALL -> FUN_ID_OFFLINE_ACTION_HOTCITYGETALL
    int FUN_ID_OFFLINE_ACTION_DIRCITYSEARCH -> FUN_ID_OFFLINE_ACTION_DIRCITYSEARCH
    int FUN_ID_OFFLINE_ACTION_USRCITYGETALL -> FUN_ID_OFFLINE_ACTION_USRCITYGETALL
    int FUN_ID_OFFLINE_ACTION_USRCITYADDRCD -> FUN_ID_OFFLINE_ACTION_USRCITYADDRCD
    int FUN_ID_OFFLINE_ACTION_USRCITYBEGINLOAD -> FUN_ID_OFFLINE_ACTION_USRCITYBEGINLOAD
    int FUN_ID_OFFLINE_ACTION_USRCITYUPDATELOAD -> FUN_ID_OFFLINE_ACTION_USRCITYUPDATELOAD
    int FUN_ID_OFFLINE_ACTION_USRCITYSUSPEND -> FUN_ID_OFFLINE_ACTION_USRCITYSUSPEND
    int FUN_ID_OFFLINE_ACTION_USRCITYREMOVE -> FUN_ID_OFFLINE_ACTION_USRCITYREMOVE
    int FUN_ID_OFFLINE_ACTION_OFFLINEREQSUSPEND -> FUN_ID_OFFLINE_ACTION_OFFLINEREQSUSPEND
    int FUN_ID_OFFLINE_ACTION_OFFLINEREQRESUME -> FUN_ID_OFFLINE_ACTION_OFFLINEREQRESUME
    int FUN_ID_OFFLINE_ACTION_USRCITYBATBEGIN -> FUN_ID_OFFLINE_ACTION_USRCITYBATBEGIN
    int FUN_ID_OFFLINE_ACTION_USRCITYBATSUSPEND -> FUN_ID_OFFLINE_ACTION_USRCITYBATSUSPEND
    int FUN_ID_SET_POI_INFOR -> FUN_ID_SET_POI_INFOR
    int FUN_ID_VOICE -> FUN_ID_VOICE
    int FUN_ID_VOICE_SCH -> FUN_ID_VOICE_SCH
    int FUN_ID_VOICE_SCH_ACTION -> FUN_ID_VOICE_SCH_ACTION
    int FUN_ID_VOICE_SCH_ACTION_SEARCH -> FUN_ID_VOICE_SCH_ACTION_SEARCH
    int FUN_ID_VOICE_SCH_ACTION_RECV_RET -> FUN_ID_VOICE_SCH_ACTION_RECV_RET
    int FUN_ID_VOICE_SCH_OPTION -> FUN_ID_VOICE_SCH_OPTION
    int FUN_ID_VOICE_SCH_OPTION_IDENTITY -> FUN_ID_VOICE_SCH_OPTION_IDENTITY
    int FUN_ID_VOICE_SCH_OPTION_GLOBAL_KEY -> FUN_ID_VOICE_SCH_OPTION_GLOBAL_KEY
    int FUN_ID_ITS -> FUN_ID_ITS
    int FUN_ID_ITS_ACTION_VIEW_EVENT_RCD -> FUN_ID_ITS_ACTION_VIEW_EVENT_RCD
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$k_event -> com.baidu.mapapi.UIMsg$k_event:
    int V_WM_KEYDOWN -> V_WM_KEYDOWN
    int V_WM_KEYUP -> V_WM_KEYUP
    int V_WM_MOUSEMOVE -> V_WM_MOUSEMOVE
    int V_WM_LBUTTONDOWN -> V_WM_LBUTTONDOWN
    int V_WM_LBUTTONUP -> V_WM_LBUTTONUP
    int V_WM_ROTATEMOVE -> V_WM_ROTATEMOVE
    int V_WM_TRACKBALLMOVE -> V_WM_TRACKBALLMOVE
    int V_WM_ONFING -> V_WM_ONFING
    int V_LEFT -> V_LEFT
    int V_UP -> V_UP
    int V_RIGHT -> V_RIGHT
    int V_DOWN -> V_DOWN
    int V_W -> V_W
    int V_A -> V_A
    int V_S -> V_S
    int V_D -> V_D
    int MV_SCREENSIZE_CHANGE -> MV_SCREENSIZE_CHANGE
    int V_WM_CANCELREQ -> V_WM_CANCELREQ
    int V_WM_GLRENDER -> V_WM_GLRENDER
    int V_WM_GLCHANGE -> V_WM_GLCHANGE
    int V_WM_STATUS_CHANGE -> V_WM_STATUS_CHANGE
    int V_WM_LONGPRESS -> V_WM_LONGPRESS
    int V_WM_STREET_JUMP -> V_WM_STREET_JUMP
    int MV_MAP_ZOOMIN -> MV_MAP_ZOOMIN
    int MV_MAP_ZOOMOUT -> MV_MAP_ZOOMOUT
    int MV_MAP_ITS -> MV_MAP_ITS
    int MV_MAP_SHOWONMAP -> MV_MAP_SHOWONMAP
    int MV_MAP_LOCATION -> MV_MAP_LOCATION
    int MV_MAP_CLEANRESAULT -> MV_MAP_CLEANRESAULT
    int MV_MAP_MOVETOGEO -> MV_MAP_MOVETOGEO
    int MV_MAP_MOVETOSCREEN -> MV_MAP_MOVETOSCREEN
    int MV_MAP_MOVETOGEOBOUND -> MV_MAP_MOVETOGEOBOUND
    int MV_MAP_SAVEMAP -> MV_MAP_SAVEMAP
    int MV_MAP_CALDISTANCE -> MV_MAP_CALDISTANCE
    int MV_MAP_ADDLOGOBJ -> MV_MAP_ADDLOGOBJ
    int MV_MAP_SETMAPMODE -> MV_MAP_SETMAPMODE
    int MV_MAP_GETSAVEFLAX -> MV_MAP_GETSAVEFLAX
    int MV_MAP_RESETOPENGLRES -> MV_MAP_RESETOPENGLRES
    int MV_MAP_CHANGETO2D -> MV_MAP_CHANGETO2D
    int MV_MAP_GETMAPMODE -> MV_MAP_GETMAPMODE
    int MV_MAP_SATELLITE -> MV_MAP_SATELLITE
    int MV_MAP_CLEARSATECACHE -> MV_MAP_CLEARSATECACHE
    int MV_MAP_SETRENDER -> MV_MAP_SETRENDER
    int MV_MAP_SENDPVLOGOBJ -> MV_MAP_SENDPVLOGOBJ
    int MV_MAP_ZOOMTO -> MV_MAP_ZOOMTO
    int V_WM_ROTATE -> V_WM_ROTATE
    int V_WM_GETLASTCLRSATETIME -> V_WM_GETLASTCLRSATETIME
    int V_WM_DBCLICK -> V_WM_DBCLICK
    int MV_MAP_CACHEMANAGE -> MV_MAP_CACHEMANAGE
    int MV_MAP_CLEARLOCINFO -> MV_MAP_CLEARLOCINFO
    int MV_MAP_STOPUPDATEFLS -> MV_MAP_STOPUPDATEFLS
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$l_ErrorNo -> com.baidu.mapapi.UIMsg$l_ErrorNo:
    int REQUEST_OK -> REQUEST_OK
    int USER_CANCEL -> USER_CANCEL
    int NETWORK_CONNECT_ERROR -> NETWORK_CONNECT_ERROR
    int NETWORK_DATA_ERROR -> NETWORK_DATA_ERROR
    int NETWORK_SETTING_ERROR -> NETWORK_SETTING_ERROR
    int NETWORK_INITIALING -> NETWORK_INITIALING
    int NETWORK_INITIAL_OK -> NETWORK_INITIAL_OK
    int NETWORK_TIMEOUT_ERROR -> NETWORK_TIMEOUT_ERROR
    int RESULT_NOT_FOUND -> RESULT_NOT_FOUND
    int RP_NOT_SUPPORT_BUS -> RP_NOT_SUPPORT_BUS
    int RP_NOT_SUPPORT_BUS_2CITY -> RP_NOT_SUPPORT_BUS_2CITY
    int RP_ST_EN_TOO_NEAR -> RP_ST_EN_TOO_NEAR
    int CORE_MEMORY_ALLOCATE_ERROR -> CORE_MEMORY_ALLOCATE_ERROR
    int CORE_TRANS_CODE_ERROR -> CORE_TRANS_CODE_ERROR
    int NETWORK_ERROR_404 -> NETWORK_ERROR_404
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$m_AppUI -> com.baidu.mapapi.UIMsg$m_AppUI:
    int MSG_GET_GL_OK -> MSG_GET_GL_OK
    int MSG_APP_DATA_OK -> MSG_APP_DATA_OK
    int MSG_APP_VERSION -> MSG_APP_VERSION
    int MSG_APP_VERSION_FORCE -> MSG_APP_VERSION_FORCE
    int MSG_APP_VERSION_COMMEND -> MSG_APP_VERSION_COMMEND
    int MSG_CLOUD_SEARCH_RETURN_RESULT -> MSG_CLOUD_SEARCH_RETURN_RESULT
    int MSG_RADAR_SEARCH_RETURN_RESULT -> MSG_RADAR_SEARCH_RETURN_RESULT
    int MSG_APP_VERSION_NAV_MODULE -> MSG_APP_VERSION_NAV_MODULE
    int MSG_APP_VERSION_FORCE_NAV_MODULE -> MSG_APP_VERSION_FORCE_NAV_MODULE
    int MSG_APP_VERSION_COMMEND_NAV_MODULE -> MSG_APP_VERSION_COMMEND_NAV_MODULE
    int MSG_APP_GPS -> MSG_APP_GPS
    int MSG_APP_SAVESCREEN -> MSG_APP_SAVESCREEN
    int MSG_SCALE_UPDATE -> MSG_SCALE_UPDATE
    int CELLDATA_UPLOAD_REQ -> CELLDATA_UPLOAD_REQ
    int MSG_COMPASS_REQ -> MSG_COMPASS_REQ
    int MSG_LOCICON_TIMER -> MSG_LOCICON_TIMER
    int MSG_BKG_DATA_OK -> MSG_BKG_DATA_OK
    int MSG_CLICK_POPUP -> MSG_CLICK_POPUP
    int MSG_MAPMODE_UPDATE -> MSG_MAPMODE_UPDATE
    int MSG_CLICK_FLS_POPUP -> MSG_CLICK_FLS_POPUP
    int MSG_CITY_SUP_ITS -> MSG_CITY_SUP_ITS
    int MSG_CHINA_SUP_ITS -> MSG_CHINA_SUP_ITS
    int MSG_CITY_SUP_DOM -> MSG_CITY_SUP_DOM
    int MSG_COMPASS_DISPLAY -> MSG_COMPASS_DISPLAY
    int MSG_SET_SENSOR_STATUS -> MSG_SET_SENSOR_STATUS
    int MSG_PLACEFIELD_RELOAD -> MSG_PLACEFIELD_RELOAD
    int MSG_MAP_PAOPAO -> MSG_MAP_PAOPAO
    int MSG_MAP_OFFLINE -> MSG_MAP_OFFLINE
    int MSG_MAP_HOTKEYS -> MSG_MAP_HOTKEYS
    int MSG_MAP_HOTKEYSOPEN -> MSG_MAP_HOTKEYSOPEN
    int V_WM_INIT_OK -> V_WM_INIT_OK
    int V_WM_INIT_ERROR -> V_WM_INIT_ERROR
    int V_WM_DESTROY -> V_WM_DESTROY
    int V_WM_PAINT -> V_WM_PAINT
    int V_WM_SCALEFINISHED -> V_WM_SCALEFINISHED
    int MSG_SUG_TEXTCHAGNE -> MSG_SUG_TEXTCHAGNE
    int MSG_FAV_BUS_OLD -> MSG_FAV_BUS_OLD
    int MSG_CLICK_ITEM -> MSG_CLICK_ITEM
    int V_WM_WIFISTATECHANGE -> V_WM_WIFISTATECHANGE
    int V_WM_FLSPUDATE -> V_WM_FLSPUDATE
    int V_WM_HOTKEY -> V_WM_HOTKEY
    int V_WM_VDATAENGINE -> V_WM_VDATAENGINE
    int V_WM_GETPOIUID -> V_WM_GETPOIUID
    int V_WM_GETCITYITS -> V_WM_GETCITYITS
    int V_WM_GETBKGDATA -> V_WM_GETBKGDATA
    int MSG_MAP_ROUTEALERT_GPSSTATE -> MSG_MAP_ROUTEALERT_GPSSTATE
    int V_WM_PERMCHECK -> V_WM_PERMCHECK
    int V_WM_ADDLISTUPDATE -> V_WM_ADDLISTUPDATE
    int V_WM_LISTLISTUPDATE -> V_WM_LISTLISTUPDATE
    int MSG_SENSOR -> MSG_SENSOR
    int MSG_AUTOHIDE_TIMER -> MSG_AUTOHIDE_TIMER
    int MSG_ARMODE_ENTER -> MSG_ARMODE_ENTER
    int MSG_ARMODE_UIENTER -> MSG_ARMODE_UIENTER
    int MSG_ARTOAST_TIMER -> MSG_ARTOAST_TIMER
    int MSG_ARMODE_RESULT -> MSG_ARMODE_RESULT
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.VersionInfo -> com.baidu.mapapi.VersionInfo:
    java.lang.String VERSION_INFO -> VERSION_INFO
    java.lang.String VERSION_DESC -> VERSION_DESC
    java.lang.String KIT_NAME -> KIT_NAME
    java.lang.String getApiVersion() -> getApiVersion
    java.lang.String getVersionDesc() -> getVersionDesc
    java.lang.String getKitName() -> getKitName
com.baidu.mapapi.common.AppTools -> com.baidu.mapapi.common.AppTools:
    java.lang.String getBaiduMapToken() -> getBaiduMapToken
com.baidu.mapapi.common.BaiduMapSDKException -> com.baidu.mapapi.common.BaiduMapSDKException:
com.baidu.mapapi.common.EnvironmentUtilities -> com.baidu.mapapi.common.EnvironmentUtilities:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    com.baidu.platform.comapi.util.e g -> g
    void initAppDirectory(android.content.Context) -> initAppDirectory
    java.lang.String getSDCardPath() -> getSDCardPath
    void setSDCardPath(java.lang.String) -> setSDCardPath
    java.lang.String getAppSDCardPath() -> getAppSDCardPath
    java.lang.String getAppCachePath() -> getAppCachePath
    java.lang.String getAppSecondCachePath() -> getAppSecondCachePath
    int getMapTmpStgMax() -> getMapTmpStgMax
    int getDomTmpStgMax() -> getDomTmpStgMax
    int getItsTmpStgMax() -> getItsTmpStgMax
com.baidu.mapapi.common.Logger -> com.baidu.mapapi.common.Logger:
    void logD(java.lang.String,java.lang.String) -> logD
    void logI(java.lang.String,java.lang.String) -> logI
    void logE(java.lang.String,java.lang.String) -> logE
    void logW(java.lang.String,java.lang.String) -> logW
    void logV(java.lang.String,java.lang.String) -> logV
com.baidu.mapapi.common.SysOSUtil -> com.baidu.mapapi.common.SysOSUtil:
    int getDensityDpi() -> getDensityDpi
    float getDensity() -> getDensity
    java.lang.String getModuleFileName() -> getModuleFileName
    java.lang.String getDeviceID() -> getDeviceID
    int getScreenSizeX() -> getScreenSizeX
    int getScreenSizeY() -> getScreenSizeY
com.baidu.mapapi.map.Arc -> com.baidu.mapapi.map.Arc:
    java.lang.String f -> f
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setPoints(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> setPoints
    void setWidth(int) -> setWidth
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.ArcOptions -> com.baidu.mapapi.map.ArcOptions:
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.model.LatLng g -> g
    com.baidu.mapapi.model.LatLng h -> h
    com.baidu.mapapi.model.LatLng i -> i
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    com.baidu.mapapi.map.ArcOptions color(int) -> color
    com.baidu.mapapi.map.ArcOptions points(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> points
    com.baidu.mapapi.map.ArcOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.ArcOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.ArcOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.ArcOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.BaiduMap -> com.baidu.mapapi.map.BaiduMap:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    int MAP_TYPE_NONE -> MAP_TYPE_NONE
    java.lang.String d -> d
    com.baidu.mapapi.map.Projection e -> e
    com.baidu.mapapi.map.UiSettings f -> f
    com.baidu.platform.comapi.map.g g -> g
    com.baidu.platform.comapi.map.c h -> h
    com.baidu.platform.comapi.map.C i -> i
    java.util.List j -> j
    java.util.List k -> k
    java.util.List l -> l
    com.baidu.mapapi.map.Overlay$a m -> m
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener n -> n
    com.baidu.mapapi.map.BaiduMap$OnMapTouchListener o -> o
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener p -> p
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback q -> q
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener r -> r
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener s -> s
    java.util.concurrent.CopyOnWriteArrayList t -> t
    java.util.concurrent.CopyOnWriteArrayList u -> u
    com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener v -> v
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener w -> w
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback x -> x
    com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback y -> y
    com.baidu.mapapi.map.TileOverlay z -> z
    com.baidu.mapapi.map.HeatMap A -> A
    java.util.concurrent.locks.Lock B -> B
    java.util.concurrent.locks.Lock C -> C
    com.baidu.mapapi.map.InfoWindow D -> D
    com.baidu.mapapi.map.Marker E -> E
    android.view.View F -> F
    com.baidu.mapapi.map.Marker G -> G
    com.baidu.mapapi.map.MyLocationData H -> H
    com.baidu.mapapi.map.MyLocationConfiguration I -> I
    com.baidu.mapapi.map.MapView a -> a
    com.baidu.mapapi.map.TextureMapView b -> b
    com.baidu.platform.comapi.map.A c -> c
    boolean J -> J
    boolean K -> K
    android.graphics.Point L -> L
    void c() -> c
    com.baidu.mapapi.map.Overlay addOverlay(com.baidu.mapapi.map.OverlayOptions) -> addOverlay
    java.util.List addOverlays(java.util.List) -> addOverlays
    java.util.List getMarkersInBounds(com.baidu.mapapi.model.LatLngBounds) -> getMarkersInBounds
    void clear() -> clear
    void setMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> setMapStatus
    com.baidu.mapapi.map.MapStatus getMapStatus() -> getMapStatus
    com.baidu.mapapi.model.LatLngBounds getMapStatusLimit() -> getMapStatusLimit
    void setMapStatusLimits(com.baidu.mapapi.model.LatLngBounds) -> setMapStatusLimits
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate,int) -> animateMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> animateMapStatus
    com.baidu.platform.comapi.map.B a(com.baidu.mapapi.map.MapStatusUpdate) -> a
    void setMapType(int) -> setMapType
    int getMapType() -> getMapType
    float getMaxZoomLevel() -> getMaxZoomLevel
    void setMaxAndMinZoomLevel(float,float) -> setMaxAndMinZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    com.baidu.mapapi.map.Projection getProjection() -> getProjection
    com.baidu.mapapi.map.UiSettings getUiSettings() -> getUiSettings
    void setBuildingsEnabled(boolean) -> setBuildingsEnabled
    boolean isBuildingsEnabled() -> isBuildingsEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationData(com.baidu.mapapi.map.MyLocationData) -> setMyLocationData
    com.baidu.mapapi.map.MyLocationData getLocationData() -> getLocationData
    void setMyLocationConfigeration(com.baidu.mapapi.map.MyLocationConfiguration) -> setMyLocationConfigeration
    com.baidu.mapapi.map.MyLocationConfiguration getLocationConfigeration() -> getLocationConfigeration
    void a(com.baidu.mapapi.map.MyLocationData,com.baidu.mapapi.map.MyLocationConfiguration) -> a
    void addHeatMap(com.baidu.mapapi.map.HeatMap) -> addHeatMap
    void a(com.baidu.mapapi.map.HeatMap) -> a
    void a() -> a
    void setBaiduHeatMapEnabled(boolean) -> setBaiduHeatMapEnabled
    void setCompassPosition(android.graphics.Point) -> setCompassPosition
    void setCompassIcon(android.graphics.Bitmap) -> setCompassIcon
    android.graphics.Point getCompassPosition() -> getCompassPosition
    android.graphics.Point a(java.lang.String) -> a
    boolean isBaiduHeatMapEnabled() -> isBaiduHeatMapEnabled
    boolean isSupportBaiduHeatMap() -> isSupportBaiduHeatMap
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isTrafficEnabled() -> isTrafficEnabled
    void showMapPoi(boolean) -> showMapPoi
    void setPadding(int,int,int,int) -> setPadding
    void snapshot(com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback) -> snapshot
    void snapshotScope(android.graphics.Rect,com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback) -> snapshotScope
    void showInfoWindow(com.baidu.mapapi.map.InfoWindow) -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    void setOnMapStatusChangeListener(com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener) -> setOnMapStatusChangeListener
    void setOnMapTouchListener(com.baidu.mapapi.map.BaiduMap$OnMapTouchListener) -> setOnMapTouchListener
    void setOnMapClickListener(com.baidu.mapapi.map.BaiduMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapLoadedCallback(com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback) -> setOnMapLoadedCallback
    void setOnMapDoubleClickListener(com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener) -> setOnMapDoubleClickListener
    void setOnMapLongClickListener(com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnPolylineClickListener(com.baidu.mapapi.map.BaiduMap$OnPolylineClickListener) -> setOnPolylineClickListener
    void setOnMarkerClickListener(com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener) -> setOnMarkerDragListener
    void setOnMyLocationClickListener(com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener) -> setOnMyLocationClickListener
    void setOnMapDrawFrameCallback(com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback) -> setOnMapDrawFrameCallback
    void removeMarkerClickListener(com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener) -> removeMarkerClickListener
    com.baidu.mapapi.map.TileOverlay addTileLayer(com.baidu.mapapi.map.TileOverlayOptions) -> addTileLayer
    boolean b() -> b
    void a(com.baidu.mapapi.map.TileOverlay) -> a
    java.util.List a(com.baidu.mapapi.map.BaiduMap) -> a
    com.baidu.platform.comapi.map.c b(com.baidu.mapapi.map.BaiduMap) -> b
    java.util.List c(com.baidu.mapapi.map.BaiduMap) -> c
    java.util.List d(com.baidu.mapapi.map.BaiduMap) -> d
    android.view.View e(com.baidu.mapapi.map.BaiduMap) -> e
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener f(com.baidu.mapapi.map.BaiduMap) -> f
    com.baidu.mapapi.map.BaiduMap$OnMapTouchListener g(com.baidu.mapapi.map.BaiduMap) -> g
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener h(com.baidu.mapapi.map.BaiduMap) -> h
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener i(com.baidu.mapapi.map.BaiduMap) -> i
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener j(com.baidu.mapapi.map.BaiduMap) -> j
    com.baidu.mapapi.map.Projection a(com.baidu.mapapi.map.BaiduMap,com.baidu.mapapi.map.Projection) -> a
    boolean a(com.baidu.mapapi.map.BaiduMap,boolean) -> a
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback k(com.baidu.mapapi.map.BaiduMap) -> k
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback l(com.baidu.mapapi.map.BaiduMap) -> l
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener m(com.baidu.mapapi.map.BaiduMap) -> m
    com.baidu.mapapi.map.InfoWindow n(com.baidu.mapapi.map.BaiduMap) -> n
    com.baidu.mapapi.map.Marker o(com.baidu.mapapi.map.BaiduMap) -> o
    java.util.concurrent.CopyOnWriteArrayList p(com.baidu.mapapi.map.BaiduMap) -> p
    java.util.concurrent.CopyOnWriteArrayList q(com.baidu.mapapi.map.BaiduMap) -> q
    com.baidu.mapapi.map.Marker r(com.baidu.mapapi.map.BaiduMap) -> r
    com.baidu.mapapi.map.Projection s(com.baidu.mapapi.map.BaiduMap) -> s
    com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener t(com.baidu.mapapi.map.BaiduMap) -> t
    com.baidu.mapapi.map.Marker a(com.baidu.mapapi.map.BaiduMap,com.baidu.mapapi.map.Marker) -> a
    java.util.concurrent.locks.Lock u(com.baidu.mapapi.map.BaiduMap) -> u
    com.baidu.mapapi.map.HeatMap v(com.baidu.mapapi.map.BaiduMap) -> v
    com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback w(com.baidu.mapapi.map.BaiduMap) -> w
    java.util.concurrent.locks.Lock x(com.baidu.mapapi.map.BaiduMap) -> x
    com.baidu.mapapi.map.TileOverlay y(com.baidu.mapapi.map.BaiduMap) -> y
com.baidu.mapapi.map.BaiduMap$1 -> com.baidu.mapapi.map.BaiduMap$1:
    int[] a -> a
    int[] b -> b
com.baidu.mapapi.map.BaiduMap$OnMapClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapClickListener:
    void onMapClick(com.baidu.mapapi.model.LatLng) -> onMapClick
    boolean onMapPoiClick(com.baidu.mapapi.map.MapPoi) -> onMapPoiClick
com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener:
    void onMapDoubleClick(com.baidu.mapapi.model.LatLng) -> onMapDoubleClick
com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback -> com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback:
    void onMapDrawFrame(javax.microedition.khronos.opengles.GL10,com.baidu.mapapi.map.MapStatus) -> onMapDrawFrame
com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback -> com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback:
    void onMapLoaded() -> onMapLoaded
com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener:
    void onMapLongClick(com.baidu.mapapi.model.LatLng) -> onMapLongClick
com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener -> com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener:
    void onMapStatusChangeStart(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeStart
    void onMapStatusChange(com.baidu.mapapi.map.MapStatus) -> onMapStatusChange
    void onMapStatusChangeFinish(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeFinish
com.baidu.mapapi.map.BaiduMap$OnMapTouchListener -> com.baidu.mapapi.map.BaiduMap$OnMapTouchListener:
    void onTouch(android.view.MotionEvent) -> onTouch
com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener -> com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener:
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener -> com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener:
    void onMarkerDrag(com.baidu.mapapi.map.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.baidu.mapapi.map.Marker) -> onMarkerDragEnd
    void onMarkerDragStart(com.baidu.mapapi.map.Marker) -> onMarkerDragStart
com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener -> com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener:
    boolean onMyLocationClick() -> onMyLocationClick
com.baidu.mapapi.map.BaiduMap$OnPolylineClickListener -> com.baidu.mapapi.map.BaiduMap$OnPolylineClickListener:
    boolean onPolylineClick(com.baidu.mapapi.map.Polyline) -> onPolylineClick
com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback -> com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback:
    void onSnapshotReady(android.graphics.Bitmap) -> onSnapshotReady
com.baidu.mapapi.map.BaiduMapOptions -> com.baidu.mapapi.map.BaiduMapOptions:
    com.baidu.mapapi.map.MapStatus a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.baidu.mapapi.map.LogoPosition j -> j
    android.graphics.Point k -> k
    android.graphics.Point l -> l
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.baidu.mapapi.map.BaiduMapOptions mapStatus(com.baidu.mapapi.map.MapStatus) -> mapStatus
    com.baidu.mapapi.map.BaiduMapOptions compassEnabled(boolean) -> compassEnabled
    com.baidu.mapapi.map.BaiduMapOptions mapType(int) -> mapType
    com.baidu.mapapi.map.BaiduMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions overlookingGesturesEnabled(boolean) -> overlookingGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scaleControlEnabled(boolean) -> scaleControlEnabled
    com.baidu.mapapi.map.BaiduMapOptions scaleControlPosition(android.graphics.Point) -> scaleControlPosition
    com.baidu.mapapi.map.BaiduMapOptions zoomControlsPosition(android.graphics.Point) -> zoomControlsPosition
    com.baidu.mapapi.map.BaiduMapOptions logoPosition(com.baidu.mapapi.map.LogoPosition) -> logoPosition
    com.baidu.platform.comapi.map.z a() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.map.BitmapDescriptor -> com.baidu.mapapi.map.BitmapDescriptor:
    android.graphics.Bitmap a -> a
    android.os.Bundle b -> b
    android.graphics.Bitmap getBitmap() -> getBitmap
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    byte[] a() -> a
    android.os.Bundle b() -> b
    void recycle() -> recycle
com.baidu.mapapi.map.BitmapDescriptorFactory -> com.baidu.mapapi.map.BitmapDescriptorFactory:
    com.baidu.mapapi.map.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.baidu.mapapi.map.BitmapDescriptor fromAssetWithDpi(java.lang.String) -> fromAssetWithDpi
    com.baidu.mapapi.map.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
    com.baidu.mapapi.map.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.baidu.mapapi.map.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.baidu.mapapi.map.BitmapDescriptor fromResource(int) -> fromResource
    com.baidu.mapapi.map.BitmapDescriptor fromView(android.view.View) -> fromView
com.baidu.mapapi.map.Circle -> com.baidu.mapapi.map.Circle:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.map.Stroke d -> d
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setFillColor(int) -> setFillColor
    void setRadius(int) -> setRadius
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.CircleOptions -> com.baidu.mapapi.map.CircleOptions:
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    com.baidu.mapapi.map.Stroke h -> h
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.CircleOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.CircleOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.CircleOptions radius(int) -> radius
    com.baidu.mapapi.map.CircleOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.CircleOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.CircleOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.CircleOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Dot -> com.baidu.mapapi.map.Dot:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setColor(int) -> setColor
    void setRadius(int) -> setRadius
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.DotOptions -> com.baidu.mapapi.map.DotOptions:
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.DotOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.DotOptions color(int) -> color
    com.baidu.mapapi.map.DotOptions radius(int) -> radius
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.DotOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.DotOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.DotOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.FileTileProvider -> com.baidu.mapapi.map.FileTileProvider:
    com.baidu.mapapi.map.Tile getTile(int,int,int) -> getTile
com.baidu.mapapi.map.Gradient -> com.baidu.mapapi.map.Gradient:
    int a -> a
    int[] b -> b
    float[] c -> c
    java.util.HashMap a() -> a
    int[] a(double) -> a
    int a(int,int,float) -> a
com.baidu.mapapi.map.Gradient$1 -> com.baidu.mapapi.map.Gradient$1:
com.baidu.mapapi.map.Gradient$a -> com.baidu.mapapi.map.Gradient$a:
    int b -> b
    int c -> c
    float d -> d
    com.baidu.mapapi.map.Gradient a -> a
    float a(com.baidu.mapapi.map.Gradient$a) -> a
    int b(com.baidu.mapapi.map.Gradient$a) -> b
    int c(com.baidu.mapapi.map.Gradient$a) -> c
com.baidu.mapapi.map.GroundOverlay -> com.baidu.mapapi.map.GroundOverlay:
    java.lang.String j -> j
    int a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    com.baidu.mapapi.model.LatLng c -> c
    double d -> d
    double e -> e
    float f -> f
    float g -> g
    com.baidu.mapapi.model.LatLngBounds h -> h
    float i -> i
    void setImage(com.baidu.mapapi.map.BitmapDescriptor) -> setImage
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setDimensions(int) -> setDimensions
    void setDimensions(int,int) -> setDimensions
    double getWidth() -> getWidth
    double getHeight() -> getHeight
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setPositionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> setPositionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.GroundOverlayOptions -> com.baidu.mapapi.map.GroundOverlayOptions:
    com.baidu.mapapi.map.BitmapDescriptor d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    float h -> h
    float i -> i
    com.baidu.mapapi.model.LatLngBounds j -> j
    float k -> k
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.GroundOverlayOptions image(com.baidu.mapapi.map.BitmapDescriptor) -> image
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    com.baidu.mapapi.map.GroundOverlayOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int) -> dimensions
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int,int) -> dimensions
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.baidu.mapapi.map.GroundOverlayOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.GroundOverlayOptions positionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> positionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    com.baidu.mapapi.map.GroundOverlayOptions transparency(float) -> transparency
    float getTransparency() -> getTransparency
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.GroundOverlayOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.GroundOverlayOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.GroundOverlayOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.HeatMap -> com.baidu.mapapi.map.HeatMap:
    java.lang.String b -> b
    android.util.SparseIntArray c -> c
    int[] d -> d
    float[] e -> e
    com.baidu.mapapi.map.l f -> f
    java.util.Collection g -> g
    int h -> h
    com.baidu.mapapi.map.Gradient i -> i
    double j -> j
    com.baidu.mapapi.map.f k -> k
    int[] l -> l
    double[] m -> m
    double[] n -> n
    java.util.HashMap o -> o
    java.util.concurrent.ExecutorService p -> p
    java.util.HashSet q -> q
    com.baidu.mapapi.map.BaiduMap a -> a
    int DEFAULT_RADIUS -> DEFAULT_RADIUS
    double DEFAULT_OPACITY -> DEFAULT_OPACITY
    com.baidu.mapapi.map.Gradient DEFAULT_GRADIENT -> DEFAULT_GRADIENT
    int r -> r
    void removeHeatMap() -> removeHeatMap
    void b(java.util.Collection) -> b
    java.util.Collection c(java.util.Collection) -> c
    com.baidu.mapapi.map.Tile a(int,int,int) -> a
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    com.baidu.mapapi.map.Tile c(java.lang.String) -> c
    void a(java.lang.String,com.baidu.mapapi.map.Tile) -> a
    void d() -> d
    void b() -> b
    void c() -> c
    void b(int,int,int) -> b
    void a(com.baidu.mapapi.map.Gradient) -> a
    double[] a(int) -> a
    com.baidu.mapapi.map.Tile a(android.graphics.Bitmap) -> a
    com.baidu.mapapi.map.f d(java.util.Collection) -> d
    double[] a(int,double) -> a
    double[][] a(double[][],double[]) -> a
    android.graphics.Bitmap a(double[][],int[],double) -> a
    double a(java.util.Collection,com.baidu.mapapi.map.f,int,int) -> a
    java.util.Collection a(java.util.Collection) -> a
    void a(com.baidu.mapapi.map.HeatMap,int,int,int) -> a
com.baidu.mapapi.map.HeatMap$Builder -> com.baidu.mapapi.map.HeatMap$Builder:
    java.util.Collection a -> a
    int b -> b
    com.baidu.mapapi.map.Gradient c -> c
    double d -> d
    com.baidu.mapapi.map.HeatMap$Builder data(java.util.Collection) -> data
    com.baidu.mapapi.map.HeatMap$Builder weightedData(java.util.Collection) -> weightedData
    com.baidu.mapapi.map.HeatMap$Builder radius(int) -> radius
    com.baidu.mapapi.map.HeatMap$Builder gradient(com.baidu.mapapi.map.Gradient) -> gradient
    com.baidu.mapapi.map.HeatMap$Builder opacity(double) -> opacity
    com.baidu.mapapi.map.HeatMap build() -> build
    java.util.Collection a(com.baidu.mapapi.map.HeatMap$Builder) -> a
    int b(com.baidu.mapapi.map.HeatMap$Builder) -> b
    com.baidu.mapapi.map.Gradient c(com.baidu.mapapi.map.HeatMap$Builder) -> c
    double d(com.baidu.mapapi.map.HeatMap$Builder) -> d
com.baidu.mapapi.map.InfoWindow -> com.baidu.mapapi.map.InfoWindow:
    com.baidu.mapapi.map.BitmapDescriptor a -> a
    android.view.View b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener d -> d
    int e -> e
com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener -> com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener:
    void onInfoWindowClick() -> onInfoWindowClick
com.baidu.mapapi.map.LogoPosition -> com.baidu.mapapi.map.LogoPosition:
    com.baidu.mapapi.map.LogoPosition logoPostionleftBottom -> logoPostionleftBottom
    com.baidu.mapapi.map.LogoPosition logoPostionleftTop -> logoPostionleftTop
    com.baidu.mapapi.map.LogoPosition logoPostionCenterBottom -> logoPostionCenterBottom
    com.baidu.mapapi.map.LogoPosition logoPostionCenterTop -> logoPostionCenterTop
    com.baidu.mapapi.map.LogoPosition logoPostionRightBottom -> logoPostionRightBottom
    com.baidu.mapapi.map.LogoPosition logoPostionRightTop -> logoPostionRightTop
    com.baidu.mapapi.map.LogoPosition[] a -> a
    com.baidu.mapapi.map.LogoPosition[] values() -> values
    com.baidu.mapapi.map.LogoPosition valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.MapFragment -> com.baidu.mapapi.map.MapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.MapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.MapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.MapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.MapPoi -> com.baidu.mapapi.map.MapPoi:
    java.lang.String c -> c
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String getName() -> getName
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.map.MapStatus -> com.baidu.mapapi.map.MapStatus:
    float rotate -> rotate
    com.baidu.mapapi.model.LatLng target -> target
    float overlook -> overlook
    float zoom -> zoom
    android.graphics.Point targetScreen -> targetScreen
    com.baidu.mapapi.model.LatLngBounds bound -> bound
    double b -> b
    double c -> c
    com.baidu.platform.comapi.map.B a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    double a() -> a
    double b() -> b
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.B) -> a
    com.baidu.platform.comapi.map.B c() -> c
    com.baidu.platform.comapi.map.B b(com.baidu.platform.comapi.map.B) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.baidu.mapapi.map.MapStatus$Builder -> com.baidu.mapapi.map.MapStatus$Builder:
    float a -> a
    com.baidu.mapapi.model.LatLng b -> b
    float c -> c
    float d -> d
    android.graphics.Point e -> e
    com.baidu.mapapi.model.LatLngBounds f -> f
    double g -> g
    double h -> h
    com.baidu.mapapi.map.MapStatus$Builder rotate(float) -> rotate
    com.baidu.mapapi.map.MapStatus$Builder target(com.baidu.mapapi.model.LatLng) -> target
    com.baidu.mapapi.map.MapStatus$Builder overlook(float) -> overlook
    com.baidu.mapapi.map.MapStatus$Builder zoom(float) -> zoom
    com.baidu.mapapi.map.MapStatus$Builder targetScreen(android.graphics.Point) -> targetScreen
    com.baidu.mapapi.map.MapStatus build() -> build
com.baidu.mapapi.map.MapStatusUpdate -> com.baidu.mapapi.map.MapStatusUpdate:
    java.lang.String l -> l
    int a -> a
    com.baidu.mapapi.map.MapStatus b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLngBounds d -> d
    int e -> e
    int f -> f
    float g -> g
    int h -> h
    int i -> i
    float j -> j
    android.graphics.Point k -> k
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.c,com.baidu.mapapi.map.MapStatus) -> a
com.baidu.mapapi.map.MapStatusUpdateFactory -> com.baidu.mapapi.map.MapStatusUpdateFactory:
    com.baidu.mapapi.map.MapStatusUpdate newMapStatus(com.baidu.mapapi.map.MapStatus) -> newMapStatus
    com.baidu.mapapi.map.MapStatusUpdate newLatLng(com.baidu.mapapi.model.LatLng) -> newLatLng
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds,int,int) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngZoom(com.baidu.mapapi.model.LatLng,float) -> newLatLngZoom
    com.baidu.mapapi.map.MapStatusUpdate scrollBy(int,int) -> scrollBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomIn() -> zoomIn
    com.baidu.mapapi.map.MapStatusUpdate zoomOut() -> zoomOut
    com.baidu.mapapi.map.MapStatusUpdate zoomTo(float) -> zoomTo
com.baidu.mapapi.map.MapView -> com.baidu.mapapi.map.MapView:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.platform.comapi.map.g c -> c
    com.baidu.mapapi.map.BaiduMap d -> d
    android.widget.ImageView e -> e
    android.graphics.Bitmap f -> f
    com.baidu.platform.comapi.map.L g -> g
    android.graphics.Point h -> h
    android.graphics.Point i -> i
    android.widget.RelativeLayout j -> j
    android.widget.TextView k -> k
    android.widget.TextView l -> l
    android.widget.ImageView m -> m
    android.util.SparseArray n -> n
    int o -> o
    boolean p -> p
    boolean q -> q
    float r -> r
    com.baidu.platform.comapi.map.i s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    void setCustomMapStylePath(java.lang.String) -> setCustomMapStylePath
    void a(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> a
    void a(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void b() -> b
    void c(android.content.Context) -> c
    com.baidu.mapapi.map.BaiduMap getMap() -> getMap
    void onDestroy() -> onDestroy
    void setLogoPosition(com.baidu.mapapi.map.LogoPosition) -> setLogoPosition
    com.baidu.mapapi.map.LogoPosition getLogoPosition() -> getLogoPosition
    int getMapLevel() -> getMapLevel
    void onPause() -> onPause
    void onResume() -> onResume
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void setPadding(int,int,int,int) -> setPadding
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View) -> a
    void showZoomControls(boolean) -> showZoomControls
    void setZoomControlsPosition(android.graphics.Point) -> setZoomControlsPosition
    void showScaleControl(boolean) -> showScaleControl
    int getScaleControlViewWidth() -> getScaleControlViewWidth
    int getScaleControlViewHeight() -> getScaleControlViewHeight
    void setScaleControlPosition(android.graphics.Point) -> setScaleControlPosition
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.content.Context,android.os.Bundle) -> onCreate
    com.baidu.platform.comapi.map.g a(com.baidu.mapapi.map.MapView) -> a
    float b(com.baidu.mapapi.map.MapView) -> b
    android.util.SparseArray a() -> a
    android.widget.ImageView c(com.baidu.mapapi.map.MapView) -> c
    android.widget.TextView d(com.baidu.mapapi.map.MapView) -> d
    android.widget.TextView e(com.baidu.mapapi.map.MapView) -> e
    float a(com.baidu.mapapi.map.MapView,float) -> a
    void f(com.baidu.mapapi.map.MapView) -> f
com.baidu.mapapi.map.MapViewLayoutParams -> com.baidu.mapapi.map.MapViewLayoutParams:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    com.baidu.mapapi.model.LatLng a -> a
    android.graphics.Point b -> b
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode c -> c
    float d -> d
    float e -> e
    int f -> f
com.baidu.mapapi.map.MapViewLayoutParams$Builder -> com.baidu.mapapi.map.MapViewLayoutParams$Builder:
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    android.graphics.Point d -> d
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode e -> e
    int f -> f
    int g -> g
    int h -> h
    com.baidu.mapapi.map.MapViewLayoutParams build() -> build
    com.baidu.mapapi.map.MapViewLayoutParams$Builder width(int) -> width
    com.baidu.mapapi.map.MapViewLayoutParams$Builder height(int) -> height
    com.baidu.mapapi.map.MapViewLayoutParams$Builder align(int,int) -> align
    com.baidu.mapapi.map.MapViewLayoutParams$Builder position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.MapViewLayoutParams$Builder point(android.graphics.Point) -> point
    com.baidu.mapapi.map.MapViewLayoutParams$Builder layoutMode(com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode) -> layoutMode
    com.baidu.mapapi.map.MapViewLayoutParams$Builder yOffset(int) -> yOffset
com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode -> com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode:
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode mapMode -> mapMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode absoluteMode -> absoluteMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] $VALUES -> $VALUES
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] values() -> values
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.Marker -> com.baidu.mapapi.map.Marker:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    float c -> c
    float d -> d
    boolean e -> e
    boolean f -> f
    float g -> g
    java.lang.String h -> h
    int i -> i
    boolean j -> j
    boolean k -> k
    float l -> l
    int m -> m
    java.util.ArrayList n -> n
    int o -> o
    void setIcon(com.baidu.mapapi.map.BitmapDescriptor) -> setIcon
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    void setIcons(java.util.ArrayList) -> setIcons
    java.util.ArrayList getIcons() -> getIcons
    void setPeriod(int) -> setPeriod
    void setAlpha(float) -> setAlpha
    float getAlpha() -> getAlpha
    int getPeriod() -> getPeriod
    void setToTop() -> setToTop
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setPerspective(boolean) -> setPerspective
    boolean isPerspective() -> isPerspective
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    boolean isFlat() -> isFlat
    void setFlat(boolean) -> setFlat
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setRotate(float) -> setRotate
    float getRotate() -> getRotate
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    android.os.Bundle a(android.os.Bundle) -> a
    void a(java.util.ArrayList,android.os.Bundle) -> a
com.baidu.mapapi.map.MarkerOptions -> com.baidu.mapapi.map.MarkerOptions:
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.map.BitmapDescriptor e -> e
    float f -> f
    float g -> g
    boolean h -> h
    boolean i -> i
    float j -> j
    java.lang.String k -> k
    int l -> l
    boolean m -> m
    java.util.ArrayList n -> n
    int o -> o
    float p -> p
    int q -> q
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.MarkerOptions icon(com.baidu.mapapi.map.BitmapDescriptor) -> icon
    com.baidu.mapapi.map.MarkerOptions animateType(com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType) -> animateType
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType getAnimateType() -> getAnimateType
    com.baidu.mapapi.map.MarkerOptions alpha(float) -> alpha
    float getAlpha() -> getAlpha
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    com.baidu.mapapi.map.MarkerOptions icons(java.util.ArrayList) -> icons
    java.util.ArrayList getIcons() -> getIcons
    com.baidu.mapapi.map.MarkerOptions period(int) -> period
    int getPeriod() -> getPeriod
    com.baidu.mapapi.map.MarkerOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.MarkerOptions perspective(boolean) -> perspective
    boolean isPerspective() -> isPerspective
    com.baidu.mapapi.map.MarkerOptions a(int) -> a
    com.baidu.mapapi.map.MarkerOptions draggable(boolean) -> draggable
    boolean isFlat() -> isFlat
    com.baidu.mapapi.map.MarkerOptions flat(boolean) -> flat
    boolean isDraggable() -> isDraggable
    com.baidu.mapapi.map.MarkerOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.MarkerOptions rotate(float) -> rotate
    float getRotate() -> getRotate
    com.baidu.mapapi.map.MarkerOptions title(java.lang.String) -> title
    java.lang.String getTitle() -> getTitle
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.MarkerOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.MarkerOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.MarkerOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType -> com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType:
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType none -> none
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType drop -> drop
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType grow -> grow
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType[] a -> a
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType[] values() -> values
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.MyLocationConfiguration -> com.baidu.mapapi.map.MyLocationConfiguration:
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode locationMode -> locationMode
    boolean enableDirection -> enableDirection
    com.baidu.mapapi.map.BitmapDescriptor customMarker -> customMarker
    int accuracyCircleFillColor -> accuracyCircleFillColor
    int accuracyCircleStrokeColor -> accuracyCircleStrokeColor
    int a(int) -> a
com.baidu.mapapi.map.MyLocationConfiguration$LocationMode -> com.baidu.mapapi.map.MyLocationConfiguration$LocationMode:
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode NORMAL -> NORMAL
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode FOLLOWING -> FOLLOWING
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode COMPASS -> COMPASS
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode[] a -> a
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode[] values() -> values
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.MyLocationData -> com.baidu.mapapi.map.MyLocationData:
    double latitude -> latitude
    double longitude -> longitude
    float speed -> speed
    float direction -> direction
    float accuracy -> accuracy
    int satellitesNum -> satellitesNum
com.baidu.mapapi.map.MyLocationData$Builder -> com.baidu.mapapi.map.MyLocationData$Builder:
    double a -> a
    double b -> b
    float c -> c
    float d -> d
    float e -> e
    int f -> f
    com.baidu.mapapi.map.MyLocationData$Builder latitude(double) -> latitude
    com.baidu.mapapi.map.MyLocationData$Builder longitude(double) -> longitude
    com.baidu.mapapi.map.MyLocationData$Builder speed(float) -> speed
    com.baidu.mapapi.map.MyLocationData$Builder direction(float) -> direction
    com.baidu.mapapi.map.MyLocationData$Builder accuracy(float) -> accuracy
    com.baidu.mapapi.map.MyLocationData$Builder satellitesNum(int) -> satellitesNum
    com.baidu.mapapi.map.MyLocationData build() -> build
com.baidu.mapapi.map.Overlay -> com.baidu.mapapi.map.Overlay:
    java.lang.String p -> p
    com.baidu.platform.comapi.map.f q -> q
    int r -> r
    boolean s -> s
    android.os.Bundle t -> t
    com.baidu.mapapi.map.Overlay$a listener -> listener
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    android.os.Bundle getExtraInfo() -> getExtraInfo
    void setExtraInfo(android.os.Bundle) -> setExtraInfo
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
    void remove() -> remove
    void a(int,android.os.Bundle) -> a
    void a(java.util.List,android.os.Bundle) -> a
com.baidu.mapapi.map.Overlay$a -> com.baidu.mapapi.map.Overlay$a:
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.OverlayOptions -> com.baidu.mapapi.map.OverlayOptions:
    com.baidu.mapapi.map.Overlay a() -> a
com.baidu.mapapi.map.Polygon -> com.baidu.mapapi.map.Polygon:
    com.baidu.mapapi.map.Stroke a -> a
    int b -> b
    java.util.List c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setFillColor(int) -> setFillColor
    void setPoints(java.util.List) -> setPoints
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.PolygonOptions -> com.baidu.mapapi.map.PolygonOptions:
    com.baidu.mapapi.map.Stroke d -> d
    int e -> e
    java.util.List f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.PolygonOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.PolygonOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolygonOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolygonOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.PolygonOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolygonOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Polyline -> com.baidu.mapapi.map.Polyline:
    int a -> a
    java.util.List b -> b
    int[] c -> c
    int[] d -> d
    int e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    com.baidu.mapapi.map.BitmapDescriptor i -> i
    java.util.List j -> j
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setDottedLine(boolean) -> setDottedLine
    void setFocus(boolean) -> setFocus
    boolean isFocus() -> isFocus
    boolean isDottedLine() -> isDottedLine
    void setPoints(java.util.List) -> setPoints
    void setWidth(int) -> setWidth
    void a(int[],android.os.Bundle) -> a
    void b(int[],android.os.Bundle) -> b
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a(boolean) -> a
    android.os.Bundle b(boolean) -> b
com.baidu.mapapi.map.PolylineOptions -> com.baidu.mapapi.map.PolylineOptions:
    int e -> e
    java.util.List f -> f
    java.util.List g -> g
    java.util.List h -> h
    int i -> i
    com.baidu.mapapi.map.BitmapDescriptor j -> j
    java.util.List k -> k
    boolean l -> l
    boolean m -> m
    int a -> a
    boolean b -> b
    boolean c -> c
    android.os.Bundle d -> d
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    java.util.List getTextureIndexs() -> getTextureIndexs
    int getWidth() -> getWidth
    com.baidu.mapapi.map.PolylineOptions color(int) -> color
    com.baidu.mapapi.map.PolylineOptions keepScale(boolean) -> keepScale
    com.baidu.mapapi.map.PolylineOptions customTexture(com.baidu.mapapi.map.BitmapDescriptor) -> customTexture
    com.baidu.mapapi.map.PolylineOptions customTextureList(java.util.List) -> customTextureList
    java.util.List getCustomTextureList() -> getCustomTextureList
    com.baidu.mapapi.map.BitmapDescriptor getCustomTexture() -> getCustomTexture
    com.baidu.mapapi.map.PolylineOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolylineOptions colorsValues(java.util.List) -> colorsValues
    com.baidu.mapapi.map.PolylineOptions textureIndex(java.util.List) -> textureIndex
    com.baidu.mapapi.map.PolylineOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolylineOptions visible(boolean) -> visible
    com.baidu.mapapi.map.PolylineOptions focus(boolean) -> focus
    com.baidu.mapapi.map.PolylineOptions dottedLine(boolean) -> dottedLine
    boolean isDottedLine() -> isDottedLine
    boolean isVisible() -> isVisible
    boolean isFocus() -> isFocus
    com.baidu.mapapi.map.PolylineOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolylineOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Projection -> com.baidu.mapapi.map.Projection:
    com.baidu.platform.comapi.map.c a -> a
    com.baidu.mapapi.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.baidu.mapapi.model.LatLng) -> toScreenLocation
    android.graphics.PointF toOpenGLLocation(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.map.MapStatus) -> toOpenGLLocation
    float metersToEquatorPixels(float) -> metersToEquatorPixels
com.baidu.mapapi.map.Stroke -> com.baidu.mapapi.map.Stroke:
    int strokeWidth -> strokeWidth
    int color -> color
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.SupportMapFragment -> com.baidu.mapapi.map.SupportMapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.SupportMapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.SupportMapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.MapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.Text -> com.baidu.mapapi.map.Text:
    java.lang.String k -> k
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    int d -> d
    int e -> e
    android.graphics.Typeface f -> f
    int g -> g
    int h -> h
    float i -> i
    int j -> j
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    void setText(java.lang.String) -> setText
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    void setBgColor(int) -> setBgColor
    void setFontColor(int) -> setFontColor
    void setFontSize(int) -> setFontSize
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void setAlign(int,int) -> setAlign
    void setRotate(float) -> setRotate
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
com.baidu.mapapi.map.TextOptions -> com.baidu.mapapi.map.TextOptions:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    int h -> h
    android.graphics.Typeface i -> i
    int j -> j
    int k -> k
    float l -> l
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    com.baidu.mapapi.map.TextOptions text(java.lang.String) -> text
    com.baidu.mapapi.map.TextOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.TextOptions bgColor(int) -> bgColor
    com.baidu.mapapi.map.TextOptions fontColor(int) -> fontColor
    com.baidu.mapapi.map.TextOptions fontSize(int) -> fontSize
    com.baidu.mapapi.map.TextOptions typeface(android.graphics.Typeface) -> typeface
    com.baidu.mapapi.map.TextOptions align(int,int) -> align
    com.baidu.mapapi.map.TextOptions rotate(float) -> rotate
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.TextOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.TextOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.TextOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.TextureMapFragment -> com.baidu.mapapi.map.TextureMapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.TextureMapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.TextureMapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.TextureMapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.TextureMapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.TextureMapView -> com.baidu.mapapi.map.TextureMapView:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.C b -> b
    com.baidu.mapapi.map.BaiduMap c -> c
    android.widget.ImageView d -> d
    android.graphics.Bitmap e -> e
    com.baidu.platform.comapi.map.L f -> f
    android.graphics.Point g -> g
    android.graphics.Point h -> h
    java.lang.String i -> i
    android.widget.RelativeLayout j -> j
    android.widget.TextView k -> k
    android.widget.TextView l -> l
    android.widget.ImageView m -> m
    android.util.SparseArray n -> n
    float o -> o
    com.baidu.platform.comapi.map.i p -> p
    int q -> q
    boolean r -> r
    boolean s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    void setCustomMapStylePath(java.lang.String) -> setCustomMapStylePath
    void a(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> a
    void a(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions,java.lang.String) -> a
    void setPadding(int,int,int,int) -> setPadding
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void b() -> b
    void c(android.content.Context) -> c
    com.baidu.mapapi.map.BaiduMap getMap() -> getMap
    void onDestroy() -> onDestroy
    void setLogoPosition(com.baidu.mapapi.map.LogoPosition) -> setLogoPosition
    com.baidu.mapapi.map.LogoPosition getLogoPosition() -> getLogoPosition
    void onPause() -> onPause
    void onResume() -> onResume
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View) -> a
    void showZoomControls(boolean) -> showZoomControls
    void setZoomControlsPosition(android.graphics.Point) -> setZoomControlsPosition
    void showScaleControl(boolean) -> showScaleControl
    void setScaleControlPosition(android.graphics.Point) -> setScaleControlPosition
    int getScaleControlViewWidth() -> getScaleControlViewWidth
    int getScaleControlViewHeight() -> getScaleControlViewHeight
    int getMapLevel() -> getMapLevel
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.content.Context,android.os.Bundle) -> onCreate
    com.baidu.platform.comapi.map.C a(com.baidu.mapapi.map.TextureMapView) -> a
    float b(com.baidu.mapapi.map.TextureMapView) -> b
    android.util.SparseArray a() -> a
    android.widget.ImageView c(com.baidu.mapapi.map.TextureMapView) -> c
    android.widget.TextView d(com.baidu.mapapi.map.TextureMapView) -> d
    android.widget.TextView e(com.baidu.mapapi.map.TextureMapView) -> e
    float a(com.baidu.mapapi.map.TextureMapView,float) -> a
    void f(com.baidu.mapapi.map.TextureMapView) -> f
com.baidu.mapapi.map.TextureSupportMapFragment -> com.baidu.mapapi.map.TextureSupportMapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.TextureMapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.TextureSupportMapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.TextureSupportMapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.TextureMapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.Tile -> com.baidu.mapapi.map.Tile:
    byte[] data -> data
    int height -> height
    int width -> width
    android.os.Bundle toBundle() -> toBundle
com.baidu.mapapi.map.TileOverlay -> com.baidu.mapapi.map.TileOverlay:
    java.lang.String b -> b
    com.baidu.mapapi.map.BaiduMap a -> a
    java.util.concurrent.ExecutorService c -> c
    java.util.HashMap d -> d
    java.util.HashSet e -> e
    int f -> f
    com.baidu.mapapi.map.TileProvider g -> g
    com.baidu.mapapi.map.Tile a(java.lang.String) -> a
    void a(java.lang.String,com.baidu.mapapi.map.Tile) -> a
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a() -> a
    boolean clearTileCache() -> clearTileCache
    void b() -> b
    void removeTileOverlay() -> removeTileOverlay
    com.baidu.mapapi.map.Tile a(int,int,int) -> a
    com.baidu.mapapi.map.TileProvider a(com.baidu.mapapi.map.TileOverlay) -> a
    void a(com.baidu.mapapi.map.TileOverlay,java.lang.String,com.baidu.mapapi.map.Tile) -> a
    java.lang.String c() -> c
    java.util.HashSet b(com.baidu.mapapi.map.TileOverlay) -> b
com.baidu.mapapi.map.TileOverlayOptions -> com.baidu.mapapi.map.TileOverlayOptions:
    int a -> a
    com.baidu.mapapi.map.TileProvider b -> b
    android.os.Bundle c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int datasource -> datasource
    java.lang.String urlString -> urlString
    java.lang.String j -> j
    com.baidu.mapapi.map.TileOverlayOptions setMaxTileTmp(int) -> setMaxTileTmp
    com.baidu.mapapi.map.TileOverlayOptions tileProvider(com.baidu.mapapi.map.TileProvider) -> tileProvider
    com.baidu.mapapi.map.TileOverlayOptions a(int,int) -> a
    com.baidu.mapapi.map.TileOverlayOptions setPositionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> setPositionFromBounds
    com.baidu.mapapi.map.TileOverlay a(com.baidu.mapapi.map.BaiduMap) -> a
    android.os.Bundle a() -> a
com.baidu.mapapi.map.TileProvider -> com.baidu.mapapi.map.TileProvider:
    int getMaxDisLevel() -> getMaxDisLevel
    int getMinDisLevel() -> getMinDisLevel
com.baidu.mapapi.map.UiSettings -> com.baidu.mapapi.map.UiSettings:
    com.baidu.platform.comapi.map.c a -> a
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isOverlookingGesturesEnabled() -> isOverlookingGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setOverlookingGesturesEnabled(boolean) -> setOverlookingGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
com.baidu.mapapi.map.UrlTileProvider -> com.baidu.mapapi.map.UrlTileProvider:
    java.lang.String getTileUrl() -> getTileUrl
com.baidu.mapapi.map.WeightedLatLng -> com.baidu.mapapi.map.WeightedLatLng:
    android.graphics.Point a -> a
    double DEFAULT_INTENSITY -> DEFAULT_INTENSITY
    double intensity -> intensity
    com.baidu.mapapi.model.LatLng latLng -> latLng
    android.graphics.Point a() -> a
com.baidu.mapapi.map.a -> com.baidu.mapapi.map.a:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.b -> com.baidu.mapapi.map.b:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a() -> a
    void a(com.baidu.platform.comapi.map.B) -> a
    void b(com.baidu.platform.comapi.map.B) -> b
    void c(com.baidu.platform.comapi.map.B) -> c
    void a(android.view.MotionEvent) -> a
    void a(com.baidu.mapapi.model.inner.GeoPoint) -> a
    void b(com.baidu.mapapi.model.inner.GeoPoint) -> b
    void c(com.baidu.mapapi.model.inner.GeoPoint) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void d(com.baidu.mapapi.model.inner.GeoPoint) -> d
    void e(com.baidu.mapapi.model.inner.GeoPoint) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.B) -> a
    void d() -> d
    void e() -> e
com.baidu.mapapi.map.c -> com.baidu.mapapi.map.c:
    com.baidu.mapapi.map.BaiduMap a -> a
    android.os.Bundle a(int,int,int) -> a
com.baidu.mapapi.map.d -> com.baidu.mapapi.map.d:
    com.baidu.mapapi.map.BaiduMap a -> a
    android.os.Bundle a(int,int,int,android.content.Context) -> a
com.baidu.mapapi.map.e -> com.baidu.mapapi.map.e:
    com.baidu.mapapi.map.BaiduMapOptions a(android.os.Parcel) -> a
    com.baidu.mapapi.map.BaiduMapOptions[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.map.f -> com.baidu.mapapi.map.f:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    double e -> e
    double f -> f
    boolean a(double,double) -> a
    boolean a(android.graphics.Point) -> a
    boolean a(double,double,double,double) -> a
    boolean a(com.baidu.mapapi.map.f) -> a
    boolean b(com.baidu.mapapi.map.f) -> b
    java.lang.String toString() -> toString
com.baidu.mapapi.map.g -> com.baidu.mapapi.map.g:
    int a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.map.HeatMap d -> d
    void run() -> run
com.baidu.mapapi.map.h -> com.baidu.mapapi.map.h:
    com.baidu.mapapi.map.MapStatus a(android.os.Parcel) -> a
    com.baidu.mapapi.map.MapStatus[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.map.i -> com.baidu.mapapi.map.i:
    com.baidu.mapapi.map.MapView a -> a
    void a() -> a
    void a(com.baidu.mapapi.model.inner.GeoPoint) -> a
    void b(com.baidu.mapapi.model.inner.GeoPoint) -> b
    void c(com.baidu.mapapi.model.inner.GeoPoint) -> c
    void b() -> b
    void a(com.baidu.platform.comapi.map.B) -> a
    void b(com.baidu.platform.comapi.map.B) -> b
    void c(com.baidu.platform.comapi.map.B) -> c
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void d(com.baidu.mapapi.model.inner.GeoPoint) -> d
    void e(com.baidu.mapapi.model.inner.GeoPoint) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.B) -> a
    void d() -> d
    void e() -> e
    void a(android.view.MotionEvent) -> a
com.baidu.mapapi.map.j -> com.baidu.mapapi.map.j:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.k -> com.baidu.mapapi.map.k:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.l -> com.baidu.mapapi.map.l:
    com.baidu.mapapi.map.f a -> a
    int b -> b
    java.util.List c -> c
    java.util.List d -> d
    void a(com.baidu.mapapi.map.l$a) -> a
    void a(double,double,com.baidu.mapapi.map.l$a) -> a
    void a() -> a
    java.util.Collection a(com.baidu.mapapi.map.f) -> a
    void a(com.baidu.mapapi.map.f,java.util.Collection) -> a
com.baidu.mapapi.map.l$a -> com.baidu.mapapi.map.l$a:
    android.graphics.Point a() -> a
com.baidu.mapapi.map.m -> com.baidu.mapapi.map.m:
    com.baidu.mapapi.map.TextureMapView a -> a
    void a() -> a
    void a(com.baidu.mapapi.model.inner.GeoPoint) -> a
    void b(com.baidu.mapapi.model.inner.GeoPoint) -> b
    void c(com.baidu.mapapi.model.inner.GeoPoint) -> c
    void b() -> b
    void a(com.baidu.platform.comapi.map.B) -> a
    void b(com.baidu.platform.comapi.map.B) -> b
    void c(com.baidu.platform.comapi.map.B) -> c
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void d(com.baidu.mapapi.model.inner.GeoPoint) -> d
    void e(com.baidu.mapapi.model.inner.GeoPoint) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.B) -> a
    void d() -> d
    void e() -> e
    void a(android.view.MotionEvent) -> a
com.baidu.mapapi.map.n -> com.baidu.mapapi.map.n:
    com.baidu.mapapi.map.TextureMapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.o -> com.baidu.mapapi.map.o:
    com.baidu.mapapi.map.TextureMapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.offline.MKOLSearchRecord -> com.baidu.mapapi.map.offline.MKOLSearchRecord:
    int cityID -> cityID
    int size -> size
    java.lang.String cityName -> cityName
    int cityType -> cityType
    java.util.ArrayList childCities -> childCities
com.baidu.mapapi.map.offline.MKOLUpdateElement -> com.baidu.mapapi.map.offline.MKOLUpdateElement:
    int UNDEFINED -> UNDEFINED
    int DOWNLOADING -> DOWNLOADING
    int WAITING -> WAITING
    int SUSPENDED -> SUSPENDED
    int FINISHED -> FINISHED
    int eOLDSMd5Error -> eOLDSMd5Error
    int eOLDSNetError -> eOLDSNetError
    int eOLDSIOError -> eOLDSIOError
    int eOLDSWifiError -> eOLDSWifiError
    int eOLDSFormatError -> eOLDSFormatError
    int eOLDSInstalling -> eOLDSInstalling
    int cityID -> cityID
    java.lang.String cityName -> cityName
    int ratio -> ratio
    int status -> status
    com.baidu.mapapi.model.LatLng geoPt -> geoPt
    int size -> size
    int serversize -> serversize
    int level -> level
    boolean update -> update
com.baidu.mapapi.map.offline.MKOfflineMap -> com.baidu.mapapi.map.offline.MKOfflineMap:
    java.lang.String a -> a
    int TYPE_NEW_OFFLINE -> TYPE_NEW_OFFLINE
    int TYPE_DOWNLOAD_UPDATE -> TYPE_DOWNLOAD_UPDATE
    int TYPE_VER_UPDATE -> TYPE_VER_UPDATE
    com.baidu.platform.comapi.map.r b -> b
    com.baidu.mapapi.map.offline.MKOfflineMapListener c -> c
    boolean init(com.baidu.mapapi.map.offline.MKOfflineMapListener) -> init
    boolean start(int) -> start
    boolean update(int) -> update
    boolean pause(int) -> pause
    void destroy() -> destroy
    boolean remove(int) -> remove
    java.util.ArrayList getHotCityList() -> getHotCityList
    java.util.ArrayList getOfflineCityList() -> getOfflineCityList
    java.util.ArrayList searchCity(java.lang.String) -> searchCity
    java.util.ArrayList getAllUpdateInfo() -> getAllUpdateInfo
    com.baidu.mapapi.map.offline.MKOLUpdateElement getUpdateInfo(int) -> getUpdateInfo
    int importOfflineData() -> importOfflineData
    int importOfflineData(boolean) -> importOfflineData
    com.baidu.platform.comapi.map.r a(com.baidu.mapapi.map.offline.MKOfflineMap) -> a
    com.baidu.mapapi.map.offline.MKOfflineMapListener b(com.baidu.mapapi.map.offline.MKOfflineMap) -> b
com.baidu.mapapi.map.offline.MKOfflineMapListener -> com.baidu.mapapi.map.offline.MKOfflineMapListener:
    void onGetOfflineMapState(int,int) -> onGetOfflineMapState
com.baidu.mapapi.map.offline.OfflineMapUtil -> com.baidu.mapapi.map.offline.OfflineMapUtil:
    com.baidu.mapapi.map.offline.MKOLSearchRecord getSearchRecordFromLocalCityInfo(com.baidu.platform.comapi.map.q) -> getSearchRecordFromLocalCityInfo
    com.baidu.mapapi.map.offline.MKOLUpdateElement getUpdatElementFromLocalMapElement(com.baidu.platform.comapi.map.t) -> getUpdatElementFromLocalMapElement
com.baidu.mapapi.map.offline.a -> com.baidu.mapapi.map.offline.a:
    com.baidu.mapapi.map.offline.MKOfflineMap a -> a
    void a(int,int) -> a
com.baidu.mapapi.map.p -> com.baidu.mapapi.map.p:
    int a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    com.baidu.mapapi.map.TileOverlay e -> e
    void run() -> run
com.baidu.mapapi.model.CoordUtil -> com.baidu.mapapi.model.CoordUtil:
    com.baidu.mapapi.model.LatLng mc2ll(com.baidu.mapapi.model.inner.GeoPoint) -> mc2ll
    com.baidu.mapapi.model.inner.GeoPoint ll2mc(com.baidu.mapapi.model.LatLng) -> ll2mc
    com.baidu.mapapi.model.inner.Point ll2point(com.baidu.mapapi.model.LatLng) -> ll2point
    int getMCDistanceByOneLatLngAndRadius(com.baidu.mapapi.model.LatLng,int) -> getMCDistanceByOneLatLngAndRadius
    com.baidu.mapapi.model.LatLng decodeLocation(java.lang.String) -> decodeLocation
    com.baidu.mapapi.model.LatLng decodeNodeLocation(java.lang.String) -> decodeNodeLocation
    java.util.List decodeLocationList(java.lang.String) -> decodeLocationList
    java.util.List decodeLocationList2D(java.lang.String) -> decodeLocationList2D
    com.baidu.mapapi.model.inner.Point Coordinate_encryptEx(float,float,java.lang.String) -> Coordinate_encryptEx
    double getDistance(com.baidu.mapapi.model.inner.Point,com.baidu.mapapi.model.inner.Point) -> getDistance
com.baidu.mapapi.model.LatLng -> com.baidu.mapapi.model.LatLng:
    java.lang.String a -> a
    double latitude -> latitude
    double longitude -> longitude
    double latitudeE6 -> latitudeE6
    double longitudeE6 -> longitudeE6
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.model.LatLngBounds -> com.baidu.mapapi.model.LatLngBounds:
    com.baidu.mapapi.model.LatLng northeast -> northeast
    com.baidu.mapapi.model.LatLng southwest -> southwest
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean contains(com.baidu.mapapi.model.LatLng) -> contains
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.baidu.mapapi.model.LatLngBounds$Builder -> com.baidu.mapapi.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    boolean e -> e
    com.baidu.mapapi.model.LatLngBounds build() -> build
    com.baidu.mapapi.model.LatLngBounds$Builder include(com.baidu.mapapi.model.LatLng) -> include
com.baidu.mapapi.model.ParcelItem -> com.baidu.mapapi.model.ParcelItem:
    android.os.Bundle a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setBundle(android.os.Bundle) -> setBundle
    android.os.Bundle getBundle() -> getBundle
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.mapapi.model.a -> com.baidu.mapapi.model.a:
    com.baidu.mapapi.model.LatLng a(android.os.Parcel) -> a
    com.baidu.mapapi.model.LatLng[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.model.b -> com.baidu.mapapi.model.b:
    com.baidu.mapapi.model.LatLngBounds a(android.os.Parcel) -> a
    com.baidu.mapapi.model.LatLngBounds[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.model.c -> com.baidu.mapapi.model.c:
    com.baidu.mapapi.model.ParcelItem a(android.os.Parcel) -> a
    com.baidu.mapapi.model.ParcelItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.model.inner.GeoPoint -> com.baidu.mapapi.model.inner.GeoPoint:
    double a -> a
    double b -> b
    double getLatitudeE6() -> getLatitudeE6
    double getLongitudeE6() -> getLongitudeE6
    void setLatitudeE6(double) -> setLatitudeE6
    void setLongitudeE6(double) -> setLongitudeE6
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.mapapi.model.inner.MapBound -> com.baidu.mapapi.model.inner.MapBound:
    com.baidu.mapapi.model.inner.Point ptLB -> ptLB
    com.baidu.mapapi.model.inner.Point ptRT -> ptRT
    com.baidu.mapapi.model.inner.Point getPtLB() -> getPtLB
    void setPtLB(com.baidu.mapapi.model.inner.Point) -> setPtLB
    com.baidu.mapapi.model.inner.Point getPtRT() -> getPtRT
    void setPtRT(com.baidu.mapapi.model.inner.Point) -> setPtRT
com.baidu.mapapi.model.inner.Point -> com.baidu.mapapi.model.inner.Point:
    int x -> x
    int y -> y
    int getmPtx() -> getmPtx
    void setmPtx(int) -> setmPtx
    int getmPty() -> getmPty
    void setmPty(int) -> setmPty
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.mapapi.model.inner.a -> com.baidu.mapapi.model.inner.a:
    int a -> a
    com.baidu.mapapi.model.inner.Point b -> b
    com.baidu.mapapi.model.inner.Point c -> c
    java.util.ArrayList d -> d
com.baidu.platform.comapi.a -> com.baidu.platform.comapi.a:
    java.lang.String a -> a
    android.content.Context b -> b
    android.os.Handler c -> c
    com.baidu.platform.comapi.d d -> d
    int e -> e
    com.baidu.platform.comapi.a f -> f
    int g -> g
    com.baidu.platform.comapi.a a() -> a
    void a(android.content.Context) -> a
    void b() -> b
    boolean c() -> c
    void d() -> d
    android.content.Context e() -> e
    void f() -> f
    void g() -> g
    void a(android.os.Message) -> a
    void a(com.baidu.platform.comapi.util.PermissionCheck$b) -> a
com.baidu.platform.comapi.b -> com.baidu.platform.comapi.b:
    com.baidu.platform.comapi.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.c -> com.baidu.platform.comapi.c:
    boolean a -> a
    void a(java.lang.String,android.content.Context) -> a
com.baidu.platform.comapi.d -> com.baidu.platform.comapi.d:
    java.lang.String a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
com.baidu.platform.comapi.location.CoordinateType -> com.baidu.platform.comapi.location.CoordinateType:
    java.lang.String BD09LL -> BD09LL
    java.lang.String BD09MC -> BD09MC
    java.lang.String GCJ02 -> GCJ02
    java.lang.String WGS84 -> WGS84
com.baidu.platform.comapi.map.A -> com.baidu.platform.comapi.map.A:
    com.baidu.platform.comapi.map.A a -> a
    com.baidu.platform.comapi.map.A b -> b
    int c -> c
    com.baidu.platform.comapi.map.A[] d -> d
    com.baidu.platform.comapi.map.A[] values() -> values
    com.baidu.platform.comapi.map.A valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.B -> com.baidu.platform.comapi.map.B:
    java.lang.String t -> t
    float a -> a
    int b -> b
    int c -> c
    double d -> d
    double e -> e
    int f -> f
    int g -> g
    long h -> h
    long i -> i
    com.baidu.platform.comapi.map.B$b j -> j
    com.baidu.platform.comapi.map.B$a k -> k
    boolean l -> l
    double m -> m
    double n -> n
    int o -> o
    java.lang.String p -> p
    float q -> q
    boolean r -> r
    int s -> s
    void a(android.os.Bundle) -> a
    android.os.Bundle a(com.baidu.platform.comapi.map.c) -> a
com.baidu.platform.comapi.map.B$a -> com.baidu.platform.comapi.map.B$a:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    com.baidu.mapapi.model.inner.Point e -> e
    com.baidu.mapapi.model.inner.Point f -> f
    com.baidu.mapapi.model.inner.Point g -> g
    com.baidu.mapapi.model.inner.Point h -> h
    com.baidu.platform.comapi.map.B i -> i
com.baidu.platform.comapi.map.B$b -> com.baidu.platform.comapi.map.B$b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.baidu.platform.comapi.map.B e -> e
com.baidu.platform.comapi.map.C -> com.baidu.platform.comapi.map.C:
    android.view.GestureDetector c -> c
    android.os.Handler d -> d
    int a -> a
    int b -> b
    com.baidu.platform.comapi.map.j e -> e
    com.baidu.platform.comapi.map.c f -> f
    com.baidu.platform.comapi.map.c b() -> b
    void a(android.content.Context,com.baidu.platform.comapi.map.z,java.lang.String) -> a
    void f() -> f
    void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    int a() -> a
    void c() -> c
    void d() -> d
    void e() -> e
    void a(java.lang.String,android.graphics.Rect) -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    com.baidu.platform.comapi.map.c a(com.baidu.platform.comapi.map.C) -> a
    com.baidu.platform.comapi.map.j b(com.baidu.platform.comapi.map.C) -> b
com.baidu.platform.comapi.map.D -> com.baidu.platform.comapi.map.D:
    com.baidu.platform.comapi.map.C a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.E -> com.baidu.platform.comapi.map.E:
com.baidu.platform.comapi.map.F -> com.baidu.platform.comapi.map.F:
    com.baidu.platform.comjni.map.basemap.a a -> a
    com.baidu.mapapi.model.inner.GeoPoint a(int,int) -> a
    android.graphics.Point a(com.baidu.mapapi.model.inner.GeoPoint) -> a
com.baidu.platform.comapi.map.G -> com.baidu.platform.comapi.map.G:
    java.lang.String h -> h
    android.os.Bundle e -> e
    java.lang.String f -> f
    int g -> g
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    android.os.Bundle b() -> b
    void a(android.os.Bundle) -> a
com.baidu.platform.comapi.map.H -> com.baidu.platform.comapi.map.H:
com.baidu.platform.comapi.map.I -> com.baidu.platform.comapi.map.I:
    android.os.Bundle a(int,int,int,android.content.Context) -> a
com.baidu.platform.comapi.map.J -> com.baidu.platform.comapi.map.J:
com.baidu.platform.comapi.map.K -> com.baidu.platform.comapi.map.K:
    java.lang.String a() -> a
    java.lang.String b() -> b
com.baidu.platform.comapi.map.L -> com.baidu.platform.comapi.map.L:
    android.widget.ImageView a -> a
    android.widget.ImageView b -> b
    android.content.Context c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.graphics.Bitmap g -> g
    int h -> h
    void b() -> b
    void a(android.view.View,java.lang.String) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void a(android.view.View$OnClickListener) -> a
    void b(android.view.View$OnClickListener) -> b
    android.graphics.Bitmap a(java.lang.String) -> a
    void a() -> a
    int a(int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.baidu.platform.comapi.map.MapRenderer -> com.baidu.platform.comapi.map.MapRenderer:
    java.lang.String d -> d
    long e -> e
    com.baidu.platform.comapi.map.MapRenderer$a f -> f
    com.baidu.platform.comapi.map.g g -> g
    int a -> a
    int b -> b
    int c -> c
    void nativeInit(long) -> nativeInit
    void nativeResize(long,int,int) -> nativeResize
    int nativeRender(long) -> nativeRender
    void a(long) -> a
    boolean a() -> a
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void a(javax.microedition.khronos.opengles.GL10) -> a
com.baidu.platform.comapi.map.MapRenderer$a -> com.baidu.platform.comapi.map.MapRenderer$a:
    void c() -> c
com.baidu.platform.comapi.map.a -> com.baidu.platform.comapi.map.a:
com.baidu.platform.comapi.map.b -> com.baidu.platform.comapi.map.b:
    long a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
com.baidu.platform.comapi.map.c -> com.baidu.platform.comapi.map.c:
    java.lang.String o -> o
    float a -> a
    float b -> b
    float c -> c
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    boolean t -> t
    boolean u -> u
    boolean v -> v
    boolean d -> d
    boolean e -> e
    boolean w -> w
    boolean x -> x
    com.baidu.platform.comapi.map.J y -> y
    com.baidu.platform.comapi.map.I z -> z
    android.content.Context A -> A
    java.util.List f -> f
    com.baidu.platform.comjni.map.basemap.a g -> g
    long h -> h
    java.util.List B -> B
    com.baidu.platform.comapi.map.x C -> C
    com.baidu.platform.comapi.map.e D -> D
    com.baidu.platform.comapi.map.l E -> E
    com.baidu.platform.comapi.map.E F -> F
    com.baidu.platform.comapi.map.H G -> G
    com.baidu.platform.comapi.map.p H -> H
    com.baidu.platform.comapi.map.k I -> I
    com.baidu.platform.comapi.map.m J -> J
    com.baidu.platform.comapi.map.a K -> K
    com.baidu.platform.comapi.map.n L -> L
    com.baidu.platform.comapi.map.F M -> M
    boolean i -> i
    int N -> N
    int O -> O
    int P -> P
    int Q -> Q
    int R -> R
    int j -> j
    com.baidu.platform.comapi.map.g$a S -> S
    android.view.VelocityTracker T -> T
    long U -> U
    long V -> V
    long W -> W
    long X -> X
    int Y -> Y
    long k -> k
    float Z -> Z
    float aa -> aa
    boolean ab -> ab
    long ac -> ac
    long ad -> ad
    boolean l -> l
    boolean m -> m
    boolean n -> n
    com.baidu.platform.comapi.map.d ae -> ae
    java.lang.String af -> af
    void a() -> a
    android.app.Activity a(android.content.Context) -> a
    void a(com.baidu.platform.comapi.map.z) -> a
    void a(int,int) -> a
    boolean a(android.graphics.Point) -> a
    void a(android.graphics.Bitmap) -> a
    void a(boolean) -> a
    void a(float,float) -> a
    void I() -> I
    void a(android.os.Handler) -> a
    void b(android.os.Handler) -> b
    void b() -> b
    boolean c() -> c
    void b(boolean) -> b
    void a(com.baidu.platform.comapi.map.b) -> a
    boolean a(android.os.Bundle) -> a
    boolean e(android.os.Bundle) -> e
    boolean f(android.os.Bundle) -> f
    void c(boolean) -> c
    void d(boolean) -> d
    void a(com.baidu.platform.comapi.map.I) -> a
    boolean d() -> d
    void e() -> e
    com.baidu.mapapi.model.inner.GeoPoint b(int,int) -> b
    android.graphics.Point a(com.baidu.mapapi.model.inner.GeoPoint) -> a
    boolean f() -> f
    void e(boolean) -> e
    java.lang.String g() -> g
    boolean h() -> h
    boolean i() -> i
    void f(boolean) -> f
    boolean j() -> j
    boolean k() -> k
    void g(boolean) -> g
    boolean l() -> l
    void h(boolean) -> h
    void m() -> m
    void b(android.os.Bundle) -> b
    void a(java.util.List) -> a
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    void g(android.os.Bundle) -> g
    void n() -> n
    int a(int,int,int) -> a
    float a(int,int,int,int,int,int) -> a
    boolean o() -> o
    void i(boolean) -> i
    boolean p() -> p
    void j(boolean) -> j
    void q() -> q
    void a(java.lang.String,android.os.Bundle) -> a
    void b(java.lang.String,android.os.Bundle) -> b
    boolean r() -> r
    void k(boolean) -> k
    void l(boolean) -> l
    boolean s() -> s
    void m(boolean) -> m
    boolean t() -> t
    void n(boolean) -> n
    boolean u() -> u
    void a(com.baidu.platform.comapi.map.i) -> a
    void a(com.baidu.platform.comapi.map.n) -> a
    void a(com.baidu.platform.comapi.map.B) -> a
    void a(com.baidu.platform.comapi.map.B,int) -> a
    void v() -> v
    void w() -> w
    boolean x() -> x
    void o(boolean) -> o
    com.baidu.platform.comapi.map.B y() -> y
    void a(com.baidu.mapapi.model.LatLngBounds) -> a
    com.baidu.mapapi.model.LatLngBounds z() -> z
    int A() -> A
    int B() -> B
    com.baidu.platform.comapi.map.B C() -> C
    double D() -> D
    void E() -> E
    void F() -> F
    int a(android.os.Bundle,long,int,android.os.Bundle) -> a
    boolean a(long) -> a
    boolean a(android.view.MotionEvent) -> a
    void b(android.view.MotionEvent) -> b
    boolean c(android.view.MotionEvent) -> c
    boolean d(android.view.MotionEvent) -> d
    boolean c(int,int) -> c
    void G() -> G
    void H() -> H
com.baidu.platform.comapi.map.d -> com.baidu.platform.comapi.map.d:
com.baidu.platform.comapi.map.e -> com.baidu.platform.comapi.map.e:
com.baidu.platform.comapi.map.f -> com.baidu.platform.comapi.map.f:
    com.baidu.platform.comapi.map.f a -> a
    com.baidu.platform.comapi.map.f b -> b
    com.baidu.platform.comapi.map.f c -> c
    com.baidu.platform.comapi.map.f d -> d
    com.baidu.platform.comapi.map.f e -> e
    com.baidu.platform.comapi.map.f f -> f
    com.baidu.platform.comapi.map.f g -> g
    com.baidu.platform.comapi.map.f h -> h
    com.baidu.platform.comapi.map.f i -> i
    com.baidu.platform.comapi.map.f j -> j
    com.baidu.platform.comapi.map.f[] k -> k
    com.baidu.platform.comapi.map.f[] values() -> values
    com.baidu.platform.comapi.map.f valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.g -> com.baidu.platform.comapi.map.g:
    java.lang.String a -> a
    android.os.Handler b -> b
    com.baidu.platform.comapi.map.MapRenderer c -> c
    int d -> d
    int e -> e
    android.view.GestureDetector f -> f
    com.baidu.platform.comapi.map.c g -> g
    com.baidu.platform.comapi.map.c a() -> a
    void d() -> d
    boolean a(int,int,int,int,int,int) -> a
    void e() -> e
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void b() -> b
    void a(java.lang.String,android.graphics.Rect) -> a
    void c() -> c
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    com.baidu.platform.comapi.map.c a(com.baidu.platform.comapi.map.g) -> a
    int b(com.baidu.platform.comapi.map.g) -> b
    int c(com.baidu.platform.comapi.map.g) -> c
com.baidu.platform.comapi.map.g$a -> com.baidu.platform.comapi.map.g$a:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean e -> e
    float f -> f
    float g -> g
    double h -> h
com.baidu.platform.comapi.map.h -> com.baidu.platform.comapi.map.h:
    com.baidu.platform.comapi.map.g a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.i -> com.baidu.platform.comapi.map.i:
    void a() -> a
    void a(com.baidu.platform.comapi.map.B) -> a
    void b(com.baidu.platform.comapi.map.B) -> b
    void c(com.baidu.platform.comapi.map.B) -> c
    void a(android.view.MotionEvent) -> a
    void a(com.baidu.mapapi.model.inner.GeoPoint) -> a
    void a(java.lang.String) -> a
    void b(com.baidu.mapapi.model.inner.GeoPoint) -> b
    void c(com.baidu.mapapi.model.inner.GeoPoint) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
    void d(com.baidu.mapapi.model.inner.GeoPoint) -> d
    void e(com.baidu.mapapi.model.inner.GeoPoint) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.B) -> a
    void d() -> d
    void e() -> e
com.baidu.platform.comapi.map.j -> com.baidu.platform.comapi.map.j:
    java.util.concurrent.atomic.AtomicBoolean a -> a
    android.graphics.SurfaceTexture b -> b
    com.baidu.platform.comapi.map.j$a c -> c
    javax.microedition.khronos.egl.EGL10 d -> d
    javax.microedition.khronos.egl.EGLDisplay e -> e
    javax.microedition.khronos.egl.EGLContext f -> f
    javax.microedition.khronos.egl.EGLSurface g -> g
    javax.microedition.khronos.opengles.GL10 h -> h
    int i -> i
    boolean j -> j
    com.baidu.platform.comapi.map.C k -> k
    void a() -> a
    void b() -> b
    void c() -> c
    boolean a(int,int,int,int,int,int) -> a
    void d() -> d
    void e() -> e
    void run() -> run
com.baidu.platform.comapi.map.j$a -> com.baidu.platform.comapi.map.j$a:
    int a() -> a
com.baidu.platform.comapi.map.k -> com.baidu.platform.comapi.map.k:
com.baidu.platform.comapi.map.l -> com.baidu.platform.comapi.map.l:
com.baidu.platform.comapi.map.m -> com.baidu.platform.comapi.map.m:
com.baidu.platform.comapi.map.n -> com.baidu.platform.comapi.map.n:
    android.os.Bundle a(int,int,int) -> a
com.baidu.platform.comapi.map.o -> com.baidu.platform.comapi.map.o:
com.baidu.platform.comapi.map.p -> com.baidu.platform.comapi.map.p:
com.baidu.platform.comapi.map.q -> com.baidu.platform.comapi.map.q:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    java.util.ArrayList e -> e
    void a(java.util.ArrayList) -> a
    java.util.ArrayList a() -> a
com.baidu.platform.comapi.map.r -> com.baidu.platform.comapi.map.r:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.basemap.a b -> b
    com.baidu.platform.comapi.map.r c -> c
    com.baidu.platform.comapi.map.w d -> d
    android.os.Handler e -> e
    com.baidu.platform.comapi.map.r a() -> a
    void g() -> g
    void h() -> h
    void b() -> b
    void a(com.baidu.platform.comapi.map.v) -> a
    void b(com.baidu.platform.comapi.map.v) -> b
    boolean a(int) -> a
    boolean b(int) -> b
    boolean c(int) -> c
    boolean d(int) -> d
    boolean e(int) -> e
    boolean a(boolean,boolean) -> a
    boolean f(int) -> f
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
    java.util.ArrayList a(java.lang.String) -> a
    com.baidu.platform.comapi.map.u g(int) -> g
    java.util.ArrayList e() -> e
    com.baidu.platform.comapi.map.r f() -> f
    com.baidu.platform.comapi.map.w a(com.baidu.platform.comapi.map.r) -> a
com.baidu.platform.comapi.map.s -> com.baidu.platform.comapi.map.s:
    com.baidu.platform.comapi.map.r a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.t -> com.baidu.platform.comapi.map.t:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.model.inner.GeoPoint g -> g
    int h -> h
    int i -> i
    boolean j -> j
    int k -> k
    int l -> l
com.baidu.platform.comapi.map.u -> com.baidu.platform.comapi.map.u:
    com.baidu.platform.comapi.map.t a -> a
    void a(com.baidu.platform.comapi.map.t) -> a
    com.baidu.platform.comapi.map.t a() -> a
com.baidu.platform.comapi.map.v -> com.baidu.platform.comapi.map.v:
    void a(int,int) -> a
com.baidu.platform.comapi.map.w -> com.baidu.platform.comapi.map.w:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.v b -> b
    void a(com.baidu.platform.comapi.map.v) -> a
    void b(com.baidu.platform.comapi.map.v) -> b
    void a(android.os.Message) -> a
com.baidu.platform.comapi.map.x -> com.baidu.platform.comapi.map.x:
com.baidu.platform.comapi.map.y -> com.baidu.platform.comapi.map.y:
    com.baidu.platform.comapi.map.y a -> a
    com.baidu.platform.comapi.map.y b -> b
    com.baidu.platform.comapi.map.y c -> c
    int d -> d
    com.baidu.platform.comapi.map.y[] e -> e
    com.baidu.platform.comapi.map.y[] values() -> values
    com.baidu.platform.comapi.map.y valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.z -> com.baidu.platform.comapi.map.z:
    com.baidu.platform.comapi.map.B a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.baidu.platform.comapi.map.z a(com.baidu.platform.comapi.map.B) -> a
    com.baidu.platform.comapi.map.z a(boolean) -> a
    com.baidu.platform.comapi.map.z a(int) -> a
    com.baidu.platform.comapi.map.z b(boolean) -> b
    com.baidu.platform.comapi.map.z c(boolean) -> c
    com.baidu.platform.comapi.map.z d(boolean) -> d
    com.baidu.platform.comapi.map.z e(boolean) -> e
com.baidu.platform.comapi.util.PermissionCheck -> com.baidu.platform.comapi.util.PermissionCheck:
    java.lang.String a -> a
    android.content.Context b -> b
    java.util.Hashtable c -> c
    com.baidu.lbsapi.auth.LBSAuthManager d -> d
    com.baidu.lbsapi.auth.LBSAuthManagerListener e -> e
    com.baidu.platform.comapi.util.PermissionCheck$c f -> f
    void setPermissionCheckResultListener(com.baidu.platform.comapi.util.PermissionCheck$c) -> setPermissionCheckResultListener
    void init(android.content.Context) -> init
    int permissionCheck() -> permissionCheck
    void destory() -> destory
    com.baidu.platform.comapi.util.PermissionCheck$c a() -> a
com.baidu.platform.comapi.util.PermissionCheck$1 -> com.baidu.platform.comapi.util.PermissionCheck$1:
com.baidu.platform.comapi.util.PermissionCheck$a -> com.baidu.platform.comapi.util.PermissionCheck$a:
    void onAuthResult(int,java.lang.String) -> onAuthResult
com.baidu.platform.comapi.util.PermissionCheck$b -> com.baidu.platform.comapi.util.PermissionCheck$b:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String toString() -> toString
com.baidu.platform.comapi.util.PermissionCheck$c -> com.baidu.platform.comapi.util.PermissionCheck$c:
    void a(com.baidu.platform.comapi.util.PermissionCheck$b) -> a
com.baidu.platform.comapi.util.a -> com.baidu.platform.comapi.util.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.platform.comapi.util.a$a -> com.baidu.platform.comapi.util.a$a:
    java.lang.String a(byte[]) -> a
com.baidu.platform.comapi.util.b -> com.baidu.platform.comapi.util.b:
    android.os.Bundle a -> a
    double[] b -> b
    double[] c -> c
    double[][] d -> d
    double[][] e -> e
    com.baidu.platform.comapi.util.b$a a(com.baidu.platform.comapi.util.b$a,double[]) -> a
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.inner.GeoPoint) -> a
    com.baidu.mapapi.model.inner.GeoPoint a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.mapapi.model.inner.Point b(com.baidu.mapapi.model.LatLng) -> b
    int a(com.baidu.mapapi.model.LatLng,int) -> a
    com.baidu.mapapi.model.LatLng a(java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(java.lang.String) -> b
    java.util.List c(java.lang.String) -> c
    com.baidu.mapapi.model.inner.Point a(float,float,java.lang.String) -> a
    java.util.List d(java.lang.String) -> d
com.baidu.platform.comapi.util.b$a -> com.baidu.platform.comapi.util.b$a:
    double a -> a
    double b -> b
com.baidu.platform.comapi.util.c -> com.baidu.platform.comapi.util.c:
    boolean a -> a
    java.lang.String b -> b
    int c -> c
    void a(android.content.Context) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean a(android.net.NetworkInfo) -> a
com.baidu.platform.comapi.util.d -> com.baidu.platform.comapi.util.d:
    boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.util.e -> com.baidu.platform.comapi.util.e:
    com.baidu.platform.comapi.util.e a -> a
    boolean b -> b
    boolean c -> c
    java.util.List d -> d
    com.baidu.platform.comapi.util.d e -> e
    java.lang.String f -> f
    com.baidu.platform.comapi.util.e a() -> a
    void a(android.content.Context) -> a
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    com.baidu.platform.comapi.util.d b() -> b
    com.baidu.platform.comapi.util.d b(android.content.Context) -> b
    boolean a(android.content.Context,com.baidu.platform.comapi.util.d) -> a
    boolean a(java.lang.String) -> a
com.baidu.platform.comapi.util.f -> com.baidu.platform.comapi.util.f:
    java.lang.String B -> B
    com.baidu.platform.comjni.map.commonmemcache.a a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    android.content.Context x -> x
    int y -> y
    float z -> z
    boolean C -> C
    int D -> D
    int E -> E
    java.lang.String A -> A
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    byte[] a(android.content.Context) -> a
    void f(android.content.Context) -> f
    void b(android.content.Context) -> b
    android.os.Bundle a() -> a
    void b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void d() -> d
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String e() -> e
    int f() -> f
    java.lang.String g() -> g
    int h() -> h
    java.lang.String i() -> i
    int j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
com.baidu.platform.comjni.engine.AppEngine -> com.baidu.platform.comjni.engine.AppEngine:
    void despatchMessage(int,int,int,long) -> despatchMessage
    void InitClass() -> InitClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.JNIEngine -> com.baidu.platform.comjni.engine.JNIEngine:
    int initClass(java.lang.Object,int) -> initClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.a -> com.baidu.platform.comjni.engine.a:
    java.lang.String a -> a
    android.util.SparseArray b -> b
    void a(int,android.os.Handler) -> a
    void b(int,android.os.Handler) -> b
    void a(int,int,int,long) -> a
    void a() -> a
com.baidu.platform.comjni.map.basemap.BaseMapCallback -> com.baidu.platform.comjni.map.basemap.BaseMapCallback:
    android.util.LongSparseArray a -> a
    void addLayerDataInterface(long,com.baidu.platform.comjni.map.basemap.b) -> addLayerDataInterface
    void removeLayerDataInterface(long) -> removeLayerDataInterface
    int ReqLayerData(android.os.Bundle,long,int,android.os.Bundle) -> ReqLayerData
com.baidu.platform.comjni.map.basemap.JNIBaseMap -> com.baidu.platform.comjni.map.basemap.JNIBaseMap:
    long a -> a
    long Create() -> Create
    int SetCallback(long,com.baidu.platform.comjni.map.basemap.BaseMapCallback) -> SetCallback
    int Release(long) -> Release
    boolean Init(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> Init
    void OnPause(long) -> OnPause
    void OnResume(long) -> OnResume
    void ResetImageRes(long) -> ResetImageRes
    void SetMapStatus(long,android.os.Bundle) -> SetMapStatus
    int SetMapControlMode(long,int) -> SetMapControlMode
    android.os.Bundle GetMapStatus(long) -> GetMapStatus
    android.os.Bundle getMapStatusLimits(long) -> getMapStatusLimits
    void setMapStatusLimits(long,android.os.Bundle) -> setMapStatusLimits
    android.os.Bundle getDrawingMapStatus(long) -> getDrawingMapStatus
    float GetZoomToBound(long,android.os.Bundle) -> GetZoomToBound
    void ShowSatelliteMap(long,boolean) -> ShowSatelliteMap
    void ShowTrafficMap(long,boolean) -> ShowTrafficMap
    void ShowHotMap(long,boolean) -> ShowHotMap
    boolean GetBaiduHotMapCityInfo(long) -> GetBaiduHotMapCityInfo
    void ShowLayers(long,long,boolean) -> ShowLayers
    boolean LayersIsShow(long,long) -> LayersIsShow
    void UpdateLayers(long,long) -> UpdateLayers
    long AddLayer(long,int,int,java.lang.String) -> AddLayer
    void ClearLayer(long,long) -> ClearLayer
    java.lang.String GetNearlyObjID(long,long,int,int,int) -> GetNearlyObjID
    java.lang.String ScrPtToGeoPoint(long,int,int) -> ScrPtToGeoPoint
    java.lang.String GeoPtToScrPoint(long,int,int) -> GeoPtToScrPoint
    void SaveScreenToLocal(long,java.lang.String,android.os.Bundle) -> SaveScreenToLocal
    boolean OnRecordAdd(long,int) -> OnRecordAdd
    boolean OnRecordStart(long,int,boolean,int) -> OnRecordStart
    boolean OnRecordSuspend(long,int,boolean,int) -> OnRecordSuspend
    boolean OnRecordReload(long,int,boolean) -> OnRecordReload
    boolean OnRecordRemove(long,int,boolean) -> OnRecordRemove
    java.lang.String OnRecordGetAll(long) -> OnRecordGetAll
    java.lang.String OnRecordGetAt(long,int) -> OnRecordGetAt
    boolean OnRecordImport(long,boolean,boolean) -> OnRecordImport
    java.lang.String OnHotcityGet(long) -> OnHotcityGet
    java.lang.String OnSchcityGet(long,java.lang.String) -> OnSchcityGet
    void addOneOverlayItem(long,android.os.Bundle) -> addOneOverlayItem
    void addOverlayItems(long,android.os.Bundle[],int) -> addOverlayItems
    boolean addtileOverlay(long,android.os.Bundle) -> addtileOverlay
    void updateOneOverlayItem(long,android.os.Bundle) -> updateOneOverlayItem
    boolean updateSDKTile(long,android.os.Bundle) -> updateSDKTile
    boolean cleanSDKTileDataCache(long,long) -> cleanSDKTileDataCache
    void removeOneOverlayItem(long,android.os.Bundle) -> removeOneOverlayItem
    void PostStatInfo(long) -> PostStatInfo
    int MapProc(long,int,int,int) -> MapProc
    long CreateDuplicate(long) -> CreateDuplicate
    int[] GetScreenBuf(long,int[],int,int) -> GetScreenBuf
    void enableDrawHouseHeight(long,boolean) -> enableDrawHouseHeight
    boolean isDrawHouseHeightEnable(long) -> isDrawHouseHeightEnable
    void clearHeatMapLayerCache(long) -> clearHeatMapLayerCache
    java.lang.String getCompassPosition(long,long) -> getCompassPosition
com.baidu.platform.comjni.map.basemap.a -> com.baidu.platform.comjni.map.basemap.a:
    java.lang.String a -> a
    long b -> b
    com.baidu.platform.comjni.map.basemap.JNIBaseMap c -> c
    java.util.List d -> d
    boolean a() -> a
    boolean b() -> b
    long c() -> c
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void a(android.os.Bundle) -> a
    int a(int) -> a
    android.os.Bundle g() -> g
    void b(android.os.Bundle) -> b
    android.os.Bundle h() -> h
    android.os.Bundle i() -> i
    float c(android.os.Bundle) -> c
    void a(boolean) -> a
    void b(boolean) -> b
    boolean j() -> j
    void c(boolean) -> c
    void a(long,boolean) -> a
    boolean a(long) -> a
    void b(long) -> b
    boolean d(android.os.Bundle) -> d
    boolean c(long) -> c
    boolean e(android.os.Bundle) -> e
    long a(int,int,java.lang.String) -> a
    void d(long) -> d
    java.lang.String a(int,int,int,int) -> a
    java.lang.String a(int,int) -> a
    java.lang.String b(int,int) -> b
    void a(java.lang.String,android.os.Bundle) -> a
    boolean b(int) -> b
    boolean a(int,boolean,int) -> a
    boolean b(int,boolean,int) -> b
    boolean a(int,boolean) -> a
    boolean b(int,boolean) -> b
    java.lang.String k() -> k
    java.lang.String c(int) -> c
    boolean a(boolean,boolean) -> a
    java.lang.String l() -> l
    java.lang.String a(java.lang.String) -> a
    void f(android.os.Bundle) -> f
    void a(android.os.Bundle[]) -> a
    void g(android.os.Bundle) -> g
    void h(android.os.Bundle) -> h
    void m() -> m
    int a(long,int,int,int) -> a
    int[] a(int[],int,int) -> a
    void d(boolean) -> d
    boolean n() -> n
    void o() -> o
    java.lang.String e(long) -> e
    void a(android.content.Context) -> a
com.baidu.platform.comjni.map.basemap.b -> com.baidu.platform.comjni.map.basemap.b:
    int a(android.os.Bundle,long,int,android.os.Bundle) -> a
    boolean a(long) -> a
com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache -> com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache:
    long Create() -> Create
    void Init(long,android.os.Bundle) -> Init
com.baidu.platform.comjni.map.commonmemcache.a -> com.baidu.platform.comjni.map.commonmemcache.a:
    long a -> a
    com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache b -> b
    long a() -> a
    void a(android.os.Bundle) -> a
com.baidu.platform.comjni.tools.BundleKeySet -> com.baidu.platform.comjni.tools.BundleKeySet:
    java.lang.String[] getBundleKeys(android.os.Bundle) -> getBundleKeys
com.baidu.platform.comjni.tools.JNITools -> com.baidu.platform.comjni.tools.JNITools:
    boolean TransGeoStr2Pt(java.lang.Object) -> TransGeoStr2Pt
    void TransNodeStr2Pt(java.lang.Object) -> TransNodeStr2Pt
    boolean TransGeoStr2ComplexPt(java.lang.Object) -> TransGeoStr2ComplexPt
    void GetDistanceByMC(java.lang.Object) -> GetDistanceByMC
    boolean CoordinateEncryptEx(float,float,java.lang.String,java.lang.Object) -> CoordinateEncryptEx
    java.lang.String GetToken() -> GetToken
    void openLogEnable(boolean,int) -> openLogEnable
com.baidu.platform.comjni.tools.ParcelItem -> com.baidu.platform.comjni.tools.ParcelItem:
    android.os.Bundle b -> b
    android.os.Parcelable$Creator a -> a
    void setBundle(android.os.Bundle) -> setBundle
    android.os.Bundle getBundle() -> getBundle
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.platform.comjni.tools.a -> com.baidu.platform.comjni.tools.a:
    com.baidu.mapapi.model.inner.a a(java.lang.String) -> a
    double a(com.baidu.mapapi.model.inner.Point,com.baidu.mapapi.model.inner.Point) -> a
    java.lang.String a() -> a
    void a(boolean,int) -> a
com.baidu.platform.comjni.tools.b -> com.baidu.platform.comjni.tools.b:
    com.baidu.platform.comjni.tools.ParcelItem a(android.os.Parcel) -> a
    com.baidu.platform.comjni.tools.ParcelItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.vi.VDeviceAPI -> com.baidu.vi.VDeviceAPI:
    android.os.PowerManager$WakeLock a -> a
    android.content.BroadcastReceiver b -> b
    long getTotalSpace() -> getTotalSpace
    long getFreeSpace() -> getFreeSpace
    long getSdcardTotalSpace() -> getSdcardTotalSpace
    long getSdcardFreeSpace() -> getSdcardFreeSpace
    long getTotalMemory() -> getTotalMemory
    long getAvailableMemory() -> getAvailableMemory
    java.lang.String getOsVersion() -> getOsVersion
    void setupSoftware(java.lang.String) -> setupSoftware
    java.lang.String getModuleFileName() -> getModuleFileName
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getCachePath() -> getCachePath
    java.lang.String getAppVersion() -> getAppVersion
    int getCurrentNetworkType() -> getCurrentNetworkType
    boolean isWifiConnected() -> isWifiConnected
    com.baidu.vi.c getNetworkInfo(int) -> getNetworkInfo
    void setNetworkChangedCallback() -> setNetworkChangedCallback
    void unsetNetworkChangedCallback() -> unsetNetworkChangedCallback
    void onNetworkStateChanged() -> onNetworkStateChanged
    android.net.wifi.ScanResult[] getWifiHotpot() -> getWifiHotpot
    float getSystemMetricsX() -> getSystemMetricsX
    float getSystemMetricsY() -> getSystemMetricsY
    float getScreenDensity() -> getScreenDensity
    int getScreenDensityDpi() -> getScreenDensityDpi
    void setScreenAlwaysOn(boolean) -> setScreenAlwaysOn
    int getScreenBrightness() -> getScreenBrightness
    void makeCall(java.lang.String) -> makeCall
    void sendSMS(java.lang.String,java.lang.String) -> sendSMS
    int sendMMS(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMMS
    void openUrl(java.lang.String) -> openUrl
    java.lang.String getCellId() -> getCellId
    java.lang.String getLac() -> getLac
    java.lang.String getImei() -> getImei
    java.lang.String getImsi() -> getImsi
com.baidu.vi.VMsg -> com.baidu.vi.VMsg:
    java.lang.String a -> a
    android.os.Handler b -> b
    android.os.HandlerThread c -> c
    void init() -> init
    void destroy() -> destroy
    void postMessage(int,int,int,long) -> postMessage
    void OnUserCommand1(int,int,int,long) -> OnUserCommand1
    void a(int,int,int,long) -> a
com.baidu.vi.VMsg$a -> com.baidu.vi.VMsg$a:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.vi.a -> com.baidu.vi.a:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.vi.b -> com.baidu.vi.b:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    android.content.Context a() -> a
com.baidu.vi.c -> com.baidu.vi.c:
    java.lang.String a -> a
    int b -> b
    int c -> c
com.baidu.vi.c$1 -> com.baidu.vi.c$1:
    int[] a -> a
com.iflytek.cloud.DataDownloader -> com.iflytek.cloud.DataDownloader:
    void downloadData(com.iflytek.cloud.SpeechListener) -> downloadData
    boolean a_() -> a_
com.iflytek.cloud.DataUploader -> com.iflytek.cloud.DataUploader:
    void uploadData(com.iflytek.cloud.SpeechListener,java.lang.String,byte[]) -> uploadData
    boolean a_() -> a_
com.iflytek.cloud.ErrorCode -> com.iflytek.cloud.ErrorCode:
    int SUCCESS -> SUCCESS
    int MSP_ERROR_FAIL -> MSP_ERROR_FAIL
    int MSP_ERROR_EXCEPTION -> MSP_ERROR_EXCEPTION
    int MSP_ERROR_GENERAL -> MSP_ERROR_GENERAL
    int MSP_ERROR_OUT_OF_MEMORY -> MSP_ERROR_OUT_OF_MEMORY
    int MSP_ERROR_FILE_NOT_FOUND -> MSP_ERROR_FILE_NOT_FOUND
    int MSP_ERROR_NOT_SUPPORT -> MSP_ERROR_NOT_SUPPORT
    int MSP_ERROR_NOT_IMPLEMENT -> MSP_ERROR_NOT_IMPLEMENT
    int MSP_ERROR_ACCESS -> MSP_ERROR_ACCESS
    int MSP_ERROR_INVALID_PARA -> MSP_ERROR_INVALID_PARA
    int MSP_ERROR_INVALID_PARA_VALUE -> MSP_ERROR_INVALID_PARA_VALUE
    int MSP_ERROR_INVALID_HANDLE -> MSP_ERROR_INVALID_HANDLE
    int MSP_ERROR_INVALID_DATA -> MSP_ERROR_INVALID_DATA
    int MSP_ERROR_NO_LICENSE -> MSP_ERROR_NO_LICENSE
    int MSP_ERROR_NOT_INIT -> MSP_ERROR_NOT_INIT
    int MSP_ERROR_NULL_HANDLE -> MSP_ERROR_NULL_HANDLE
    int MSP_ERROR_OVERFLOW -> MSP_ERROR_OVERFLOW
    int MSP_ERROR_TIME_OUT -> MSP_ERROR_TIME_OUT
    int MSP_ERROR_OPEN_FILE -> MSP_ERROR_OPEN_FILE
    int MSP_ERROR_NOT_FOUND -> MSP_ERROR_NOT_FOUND
    int MSP_ERROR_NO_ENOUGH_BUFFER -> MSP_ERROR_NO_ENOUGH_BUFFER
    int MSP_ERROR_NO_DATA -> MSP_ERROR_NO_DATA
    int MSP_ERROR_NO_MORE_DATA -> MSP_ERROR_NO_MORE_DATA
    int MSP_ERROR_NO_RESPONSE_DATA -> MSP_ERROR_NO_RESPONSE_DATA
    int MSP_ERROR_ALREADY_EXIST -> MSP_ERROR_ALREADY_EXIST
    int MSP_ERROR_LOAD_MODULE -> MSP_ERROR_LOAD_MODULE
    int MSP_ERROR_BUSY -> MSP_ERROR_BUSY
    int MSP_ERROR_INVALID_CONFIG -> MSP_ERROR_INVALID_CONFIG
    int MSP_ERROR_VERSION_CHECK -> MSP_ERROR_VERSION_CHECK
    int MSP_ERROR_CANCELED -> MSP_ERROR_CANCELED
    int MSP_ERROR_INVALID_MEDIA_TYPE -> MSP_ERROR_INVALID_MEDIA_TYPE
    int MSP_ERROR_CONFIG_INITIALIZE -> MSP_ERROR_CONFIG_INITIALIZE
    int MSP_ERROR_CREATE_HANDLE -> MSP_ERROR_CREATE_HANDLE
    int MSP_ERROR_CODING_LIB_NOT_LOAD -> MSP_ERROR_CODING_LIB_NOT_LOAD
    int MSP_ERROR_USER_CANCELLED -> MSP_ERROR_USER_CANCELLED
    int MSP_ERROR_INVALID_OPERATION -> MSP_ERROR_INVALID_OPERATION
    int MSP_ERROR_MESSAGE_NOT_COMPLETE -> MSP_ERROR_MESSAGE_NOT_COMPLETE
    int MSP_ERROR_USER_ACTIVE_ABORT -> MSP_ERROR_USER_ACTIVE_ABORT
    int MSP_ERROR_BUSY_GRMBUILDING -> MSP_ERROR_BUSY_GRMBUILDING
    int MSP_ERROR_BUSY_LEXUPDATING -> MSP_ERROR_BUSY_LEXUPDATING
    int MSP_ERROR_NET_GENERAL -> MSP_ERROR_NET_GENERAL
    int MSP_ERROR_NET_OPENSOCK -> MSP_ERROR_NET_OPENSOCK
    int MSP_ERROR_NET_CONNECTSOCK -> MSP_ERROR_NET_CONNECTSOCK
    int MSP_ERROR_NET_ACCEPTSOCK -> MSP_ERROR_NET_ACCEPTSOCK
    int MSP_ERROR_NET_SENDSOCK -> MSP_ERROR_NET_SENDSOCK
    int MSP_ERROR_NET_RECVSOCK -> MSP_ERROR_NET_RECVSOCK
    int MSP_ERROR_NET_INVALIDSOCK -> MSP_ERROR_NET_INVALIDSOCK
    int MSP_ERROR_NET_BADADDRESS -> MSP_ERROR_NET_BADADDRESS
    int MSP_ERROR_NET_BINDSEQUENCE -> MSP_ERROR_NET_BINDSEQUENCE
    int MSP_ERROR_NET_NOTOPENSOCK -> MSP_ERROR_NET_NOTOPENSOCK
    int MSP_ERROR_NET_NOTBIND -> MSP_ERROR_NET_NOTBIND
    int MSP_ERROR_NET_NOTLISTEN -> MSP_ERROR_NET_NOTLISTEN
    int MSP_ERROR_NET_CONNECTCLOSE -> MSP_ERROR_NET_CONNECTCLOSE
    int MSP_ERROR_NET_NOTDGRAMSOCK -> MSP_ERROR_NET_NOTDGRAMSOCK
    int MSP_ERROR_NET_DNS -> MSP_ERROR_NET_DNS
    int MSP_ERROR_NET_INIT -> MSP_ERROR_NET_INIT
    int MSP_ERROR_MSG_GENERAL -> MSP_ERROR_MSG_GENERAL
    int MSP_ERROR_MSG_PARSE_ERROR -> MSP_ERROR_MSG_PARSE_ERROR
    int MSP_ERROR_MSG_BUILD_ERROR -> MSP_ERROR_MSG_BUILD_ERROR
    int MSP_ERROR_MSG_PARAM_ERROR -> MSP_ERROR_MSG_PARAM_ERROR
    int MSP_ERROR_MSG_CONTENT_EMPTY -> MSP_ERROR_MSG_CONTENT_EMPTY
    int MSP_ERROR_MSG_INVALID_CONTENT_TYPE -> MSP_ERROR_MSG_INVALID_CONTENT_TYPE
    int MSP_ERROR_MSG_INVALID_CONTENT_LENGTH -> MSP_ERROR_MSG_INVALID_CONTENT_LENGTH
    int MSP_ERROR_MSG_INVALID_CONTENT_ENCODE -> MSP_ERROR_MSG_INVALID_CONTENT_ENCODE
    int MSP_ERROR_MSG_INVALID_KEY -> MSP_ERROR_MSG_INVALID_KEY
    int MSP_ERROR_MSG_KEY_EMPTY -> MSP_ERROR_MSG_KEY_EMPTY
    int MSP_ERROR_MSG_SESSION_ID_EMPTY -> MSP_ERROR_MSG_SESSION_ID_EMPTY
    int MSP_ERROR_MSG_LOGIN_ID_EMPTY -> MSP_ERROR_MSG_LOGIN_ID_EMPTY
    int MSP_ERROR_MSG_SYNC_ID_EMPTY -> MSP_ERROR_MSG_SYNC_ID_EMPTY
    int MSP_ERROR_MSG_APP_ID_EMPTY -> MSP_ERROR_MSG_APP_ID_EMPTY
    int MSP_ERROR_MSG_EXTERN_ID_EMPTY -> MSP_ERROR_MSG_EXTERN_ID_EMPTY
    int MSP_ERROR_MSG_INVALID_CMD -> MSP_ERROR_MSG_INVALID_CMD
    int MSP_ERROR_MSG_INVALID_SUBJECT -> MSP_ERROR_MSG_INVALID_SUBJECT
    int MSP_ERROR_MSG_INVALID_VERSION -> MSP_ERROR_MSG_INVALID_VERSION
    int MSP_ERROR_MSG_NO_CMD -> MSP_ERROR_MSG_NO_CMD
    int MSP_ERROR_MSG_NO_SUBJECT -> MSP_ERROR_MSG_NO_SUBJECT
    int MSP_ERROR_MSG_NO_VERSION -> MSP_ERROR_MSG_NO_VERSION
    int MSP_ERROR_MSG_MSSP_EMPTY -> MSP_ERROR_MSG_MSSP_EMPTY
    int MSP_ERROR_MSG_NEW_RESPONSE -> MSP_ERROR_MSG_NEW_RESPONSE
    int MSP_ERROR_MSG_NEW_CONTENT -> MSP_ERROR_MSG_NEW_CONTENT
    int MSP_ERROR_MSG_INVALID_SESSION_ID -> MSP_ERROR_MSG_INVALID_SESSION_ID
    int MSP_ERROR_MSG_INVALID_CONTENT -> MSP_ERROR_MSG_INVALID_CONTENT
    int MSP_ERROR_DB_GENERAL -> MSP_ERROR_DB_GENERAL
    int MSP_ERROR_DB_EXCEPTION -> MSP_ERROR_DB_EXCEPTION
    int MSP_ERROR_DB_NO_RESULT -> MSP_ERROR_DB_NO_RESULT
    int MSP_ERROR_DB_INVALID_USER -> MSP_ERROR_DB_INVALID_USER
    int MSP_ERROR_DB_INVALID_PWD -> MSP_ERROR_DB_INVALID_PWD
    int MSP_ERROR_DB_CONNECT -> MSP_ERROR_DB_CONNECT
    int MSP_ERROR_DB_INVALID_SQL -> MSP_ERROR_DB_INVALID_SQL
    int MSP_ERROR_DB_INVALID_APPID -> MSP_ERROR_DB_INVALID_APPID
    int MSP_ERROR_RES_GENERAL -> MSP_ERROR_RES_GENERAL
    int MSP_ERROR_RES_LOAD -> MSP_ERROR_RES_LOAD
    int MSP_ERROR_RES_FREE -> MSP_ERROR_RES_FREE
    int MSP_ERROR_RES_MISSING -> MSP_ERROR_RES_MISSING
    int MSP_ERROR_RES_INVALID_NAME -> MSP_ERROR_RES_INVALID_NAME
    int MSP_ERROR_RES_INVALID_ID -> MSP_ERROR_RES_INVALID_ID
    int MSP_ERROR_RES_INVALID_IMG -> MSP_ERROR_RES_INVALID_IMG
    int MSP_ERROR_RES_WRITE -> MSP_ERROR_RES_WRITE
    int MSP_ERROR_RES_LEAK -> MSP_ERROR_RES_LEAK
    int MSP_ERROR_RES_HEAD -> MSP_ERROR_RES_HEAD
    int MSP_ERROR_RES_DATA -> MSP_ERROR_RES_DATA
    int MSP_ERROR_RES_SKIP -> MSP_ERROR_RES_SKIP
    int MSP_ERROR_TTS_GENERAL -> MSP_ERROR_TTS_GENERAL
    int MSP_ERROR_TTS_TEXTEND -> MSP_ERROR_TTS_TEXTEND
    int MSP_ERROR_TTS_TEXT_EMPTY -> MSP_ERROR_TTS_TEXT_EMPTY
    int MSP_ERROR_TTS_LTTS_ERROR -> MSP_ERROR_TTS_LTTS_ERROR
    int MSP_ERROR_REC_GENERAL -> MSP_ERROR_REC_GENERAL
    int MSP_ERROR_REC_INACTIVE -> MSP_ERROR_REC_INACTIVE
    int MSP_ERROR_REC_GRAMMAR_ERROR -> MSP_ERROR_REC_GRAMMAR_ERROR
    int MSP_ERROR_REC_NO_ACTIVE_GRAMMARS -> MSP_ERROR_REC_NO_ACTIVE_GRAMMARS
    int MSP_ERROR_REC_DUPLICATE_GRAMMAR -> MSP_ERROR_REC_DUPLICATE_GRAMMAR
    int MSP_ERROR_REC_INVALID_MEDIA_TYPE -> MSP_ERROR_REC_INVALID_MEDIA_TYPE
    int MSP_ERROR_REC_INVALID_LANGUAGE -> MSP_ERROR_REC_INVALID_LANGUAGE
    int MSP_ERROR_REC_URI_NOT_FOUND -> MSP_ERROR_REC_URI_NOT_FOUND
    int MSP_ERROR_REC_URI_TIMEOUT -> MSP_ERROR_REC_URI_TIMEOUT
    int MSP_ERROR_REC_URI_FETCH_ERROR -> MSP_ERROR_REC_URI_FETCH_ERROR
    int MSP_ERROR_EP_GENERAL -> MSP_ERROR_EP_GENERAL
    int MSP_ERROR_EP_NO_SESSION_NAME -> MSP_ERROR_EP_NO_SESSION_NAME
    int MSP_ERROR_EP_INACTIVE -> MSP_ERROR_EP_INACTIVE
    int MSP_ERROR_EP_INITIALIZED -> MSP_ERROR_EP_INITIALIZED
    int MSP_ERROR_TUV_GENERAL -> MSP_ERROR_TUV_GENERAL
    int MSP_ERROR_TUV_GETHIDPARAM -> MSP_ERROR_TUV_GETHIDPARAM
    int MSP_ERROR_TUV_TOKEN -> MSP_ERROR_TUV_TOKEN
    int MSP_ERROR_TUV_CFGFILE -> MSP_ERROR_TUV_CFGFILE
    int MSP_ERROR_TUV_RECV_CONTENT -> MSP_ERROR_TUV_RECV_CONTENT
    int MSP_ERROR_TUV_VERFAIL -> MSP_ERROR_TUV_VERFAIL
    int MSP_ERROR_LOGIN_SUCCESS -> MSP_ERROR_LOGIN_SUCCESS
    int MSP_ERROR_LOGIN_NO_LICENSE -> MSP_ERROR_LOGIN_NO_LICENSE
    int MSP_ERROR_LOGIN_SESSIONID_INVALID -> MSP_ERROR_LOGIN_SESSIONID_INVALID
    int MSP_ERROR_LOGIN_SESSIONID_ERROR -> MSP_ERROR_LOGIN_SESSIONID_ERROR
    int MSP_ERROR_LOGIN_UNLOGIN -> MSP_ERROR_LOGIN_UNLOGIN
    int MSP_ERROR_LOGIN_INVALID_USER -> MSP_ERROR_LOGIN_INVALID_USER
    int MSP_ERROR_LOGIN_INVALID_PWD -> MSP_ERROR_LOGIN_INVALID_PWD
    int MSP_ERROR_LOGIN_SYSTEM_ERROR -> MSP_ERROR_LOGIN_SYSTEM_ERROR
    int MSP_ERROR_AUTH_NO_LICENSE -> MSP_ERROR_AUTH_NO_LICENSE
    int MSP_ERROR_AUTH_NO_ENOUGH_LICENSE -> MSP_ERROR_AUTH_NO_ENOUGH_LICENSE
    int MSP_ERROR_AUTH_INVALID_LICENSE -> MSP_ERROR_AUTH_INVALID_LICENSE
    int MSP_ERROR_AUTH_LICENSE_EXPIRED -> MSP_ERROR_AUTH_LICENSE_EXPIRED
    int MSP_ERROR_AUTH_NEED_MORE_DATA -> MSP_ERROR_AUTH_NEED_MORE_DATA
    int MSP_ERROR_AUTH_LICENSE_TO_BE_EXPIRED -> MSP_ERROR_AUTH_LICENSE_TO_BE_EXPIRED
    int MSP_ERROR_AUTH_INVALID_MACHINE_ID -> MSP_ERROR_AUTH_INVALID_MACHINE_ID
    int MSP_ERROR_AUTH_LOCAL_ASR_FORBIDDEN -> MSP_ERROR_AUTH_LOCAL_ASR_FORBIDDEN
    int MSP_ERROR_AUTH_LOCAL_TTS_FORBIDDEN -> MSP_ERROR_AUTH_LOCAL_TTS_FORBIDDEN
    int MSP_ERROR_AUTH_LOCAL_IVW_FORBIDDEN -> MSP_ERROR_AUTH_LOCAL_IVW_FORBIDDEN
    int MSP_ERROR_AUTH_ERROR_END -> MSP_ERROR_AUTH_ERROR_END
    int MSP_ERROR_HCR_GENERAL -> MSP_ERROR_HCR_GENERAL
    int MSP_ERROR_HCR_RESOURCE_NOT_EXIST -> MSP_ERROR_HCR_RESOURCE_NOT_EXIST
    int MSP_ERROR_HCR_CREATE -> MSP_ERROR_HCR_CREATE
    int MSP_ERROR_HCR_DESTROY -> MSP_ERROR_HCR_DESTROY
    int MSP_ERROR_HCR_START -> MSP_ERROR_HCR_START
    int MSP_ERROR_HCR_APPEND_STROKES -> MSP_ERROR_HCR_APPEND_STROKES
    int MSP_ERROR_HCR_INIT -> MSP_ERROR_HCR_INIT
    int MSP_ERROR_HCR_POINT_DECODE -> MSP_ERROR_HCR_POINT_DECODE
    int MSP_ERROR_HCR_DISPATCH -> MSP_ERROR_HCR_DISPATCH
    int MSP_ERROR_HCR_GETRESULT -> MSP_ERROR_HCR_GETRESULT
    int MSP_ERROR_HCR_RESOURCE -> MSP_ERROR_HCR_RESOURCE
    int MSS_ERROR_IVP_MODEL_NOT_FOUND_IN_HBASE -> MSS_ERROR_IVP_MODEL_NOT_FOUND_IN_HBASE
    int MSP_ERROR_HTTP_BASE -> MSP_ERROR_HTTP_BASE
    int MSP_ERROR_ISV_NO_USER -> MSP_ERROR_ISV_NO_USER
    int MSP_ERROR_LUA_BASE -> MSP_ERROR_LUA_BASE
    int MSP_ERROR_LUA_YIELD -> MSP_ERROR_LUA_YIELD
    int MSP_ERROR_LUA_ERRRUN -> MSP_ERROR_LUA_ERRRUN
    int MSP_ERROR_LUA_ERRSYNTAX -> MSP_ERROR_LUA_ERRSYNTAX
    int MSP_ERROR_LUA_ERRMEM -> MSP_ERROR_LUA_ERRMEM
    int MSP_ERROR_LUA_ERRERR -> MSP_ERROR_LUA_ERRERR
    int MSP_ERROR_LUA_INVALID_PARAM -> MSP_ERROR_LUA_INVALID_PARAM
    int MSP_ERROR_MMP_BASE -> MSP_ERROR_MMP_BASE
    int MSP_ERROR_MMP_MYSQL_INITFAIL -> MSP_ERROR_MMP_MYSQL_INITFAIL
    int MSP_ERROR_MMP_REDIS_INITFAIL -> MSP_ERROR_MMP_REDIS_INITFAIL
    int MSP_ERROR_MMP_NETDSS_INITFAIL -> MSP_ERROR_MMP_NETDSS_INITFAIL
    int MSP_ERROR_MMP_TAIR_INITFAIL -> MSP_ERROR_MMP_TAIR_INITFAIL
    int MSP_ERROR_MMP_MAIL_SESSION_FAIL -> MSP_ERROR_MMP_MAIL_SESSION_FAIL
    int MSP_ERROR_MMP_MAIL_LOGON_FAIL -> MSP_ERROR_MMP_MAIL_LOGON_FAIL
    int MSP_ERROR_MMP_MAIL_USER_ILLEGAL -> MSP_ERROR_MMP_MAIL_USER_ILLEGAL
    int MSP_ERROR_MMP_MAIL_PWD_ERR -> MSP_ERROR_MMP_MAIL_PWD_ERR
    int MSP_ERROR_MMP_MAIL_SOCKET_ERR -> MSP_ERROR_MMP_MAIL_SOCKET_ERR
    int MSP_ERROR_MMP_MAIL_INIT_FAIL -> MSP_ERROR_MMP_MAIL_INIT_FAIL
    int MSP_ERROR_MMP_STORE_MNR_NO_INIT -> MSP_ERROR_MMP_STORE_MNR_NO_INIT
    int MSP_ERROR_MMP_STORE_MNR_POOL_FULL -> MSP_ERROR_MMP_STORE_MNR_POOL_FULL
    int MSP_ERROR_MMP_STRATGY_PARAM_ILLEGAL -> MSP_ERROR_MMP_STRATGY_PARAM_ILLEGAL
    int MSP_ERROR_MMP_STRATGY_PARAM_TOOLOOG -> MSP_ERROR_MMP_STRATGY_PARAM_TOOLOOG
    int MSP_ERROR_MMP_PARAM_NULL -> MSP_ERROR_MMP_PARAM_NULL
    int MSP_ERROR_MMP_ERR_MORE_TOTAL -> MSP_ERROR_MMP_ERR_MORE_TOTAL
    int MSP_ERROR_MMP_PROC_THRESHOLD -> MSP_ERROR_MMP_PROC_THRESHOLD
    int MSP_ERROR_MMP_SERVER_THRESHOLD -> MSP_ERROR_MMP_SERVER_THRESHOLD
    int MSP_ERROR_MMP_PYTHON_NO_EXIST -> MSP_ERROR_MMP_PYTHON_NO_EXIST
    int MSP_ERROR_MMP_PYTHON_IMPORT_FAILED -> MSP_ERROR_MMP_PYTHON_IMPORT_FAILED
    int MSP_ERROR_MMP_PYTHON_BAD_FUNC -> MSP_ERROR_MMP_PYTHON_BAD_FUNC
    int MSP_ERROR_MMP_DB_DATA_ILLEGAL -> MSP_ERROR_MMP_DB_DATA_ILLEGAL
    int MSP_ERROR_MMP_REDIS_NOT_CONN -> MSP_ERROR_MMP_REDIS_NOT_CONN
    int MSP_ERROR_MMP_PMA_NOT_FOUND_STRATEGY -> MSP_ERROR_MMP_PMA_NOT_FOUND_STRATEGY
    int MSP_ERROR_MMP_TAIR_CONNECT -> MSP_ERROR_MMP_TAIR_CONNECT
    int MSP_ERROR_MMP_PMC_SERVINFO_INVALID -> MSP_ERROR_MMP_PMC_SERVINFO_INVALID
    int MSP_ERROR_MMP_ALARM_GROUP_NULL -> MSP_ERROR_MMP_ALARM_GROUP_NULL
    int MSP_ERROR_MMP_ALARM_CONTXT_NULL -> MSP_ERROR_MMP_ALARM_CONTXT_NULL
    int MSP_ERROR_LMOD_BASE -> MSP_ERROR_LMOD_BASE
    int MSP_ERROR_LMOD_NOT_FOUND -> MSP_ERROR_LMOD_NOT_FOUND
    int MSP_ERROR_LMOD_UNEXPECTED_BIN -> MSP_ERROR_LMOD_UNEXPECTED_BIN
    int MSP_ERROR_LMOD_LOADCODE -> MSP_ERROR_LMOD_LOADCODE
    int MSP_ERROR_LMOD_PRECALL -> MSP_ERROR_LMOD_PRECALL
    int MSP_ERROR_LMOD_RUNTIME_EXCEPTION -> MSP_ERROR_LMOD_RUNTIME_EXCEPTION
    int MSP_ERROR_LMOD_ALREADY_LOADED -> MSP_ERROR_LMOD_ALREADY_LOADED
    int MSP_ERROR_BIZ_BASE -> MSP_ERROR_BIZ_BASE
    int MSP_ERROR_NGX_LOG_MORE_TOTEL_SIZE -> MSP_ERROR_NGX_LOG_MORE_TOTEL_SIZE
    int ERROR_NO_NETWORK -> ERROR_NO_NETWORK
    int ERROR_NETWORK_TIMEOUT -> ERROR_NETWORK_TIMEOUT
    int ERROR_NET_EXPECTION -> ERROR_NET_EXPECTION
    int ERROR_INVALID_RESULT -> ERROR_INVALID_RESULT
    int ERROR_NO_MATCH -> ERROR_NO_MATCH
    int ERROR_AUDIO_RECORD -> ERROR_AUDIO_RECORD
    int ERROR_NO_SPPECH -> ERROR_NO_SPPECH
    int ERROR_SPEECH_TIMEOUT -> ERROR_SPEECH_TIMEOUT
    int ERROR_EMPTY_UTTERANCE -> ERROR_EMPTY_UTTERANCE
    int ERROR_FILE_ACCESS -> ERROR_FILE_ACCESS
    int ERROR_PLAY_MEDIA -> ERROR_PLAY_MEDIA
    int ERROR_INVALID_PARAM -> ERROR_INVALID_PARAM
    int ERROR_TEXT_OVERFLOW -> ERROR_TEXT_OVERFLOW
    int ERROR_INVALID_DATA -> ERROR_INVALID_DATA
    int ERROR_LOGIN -> ERROR_LOGIN
    int ERROR_PERMISSION_DENIED -> ERROR_PERMISSION_DENIED
    int ERROR_INTERRUPT -> ERROR_INTERRUPT
    int ERROR_VERSION_LOWER -> ERROR_VERSION_LOWER
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_COMPONENT_NOT_INSTALLED -> ERROR_COMPONENT_NOT_INSTALLED
    int ERROR_ENGINE_NOT_SUPPORTED -> ERROR_ENGINE_NOT_SUPPORTED
    int ERROR_ENGINE_INIT_FAIL -> ERROR_ENGINE_INIT_FAIL
    int ERROR_ENGINE_CALL_FAIL -> ERROR_ENGINE_CALL_FAIL
    int ERROR_ENGINE_BUSY -> ERROR_ENGINE_BUSY
    int ERROR_LOCAL_NO_INIT -> ERROR_LOCAL_NO_INIT
    int ERROR_LOCAL_RESOURCE -> ERROR_LOCAL_RESOURCE
    int ERROR_LOCAL_ENGINE -> ERROR_LOCAL_ENGINE
    int ERROR_IVW_INTERRUPT -> ERROR_IVW_INTERRUPT
    int ERROR_ASR_CLIENT -> ERROR_ASR_CLIENT
    int ERROR_ASR_INVALID_PARA -> ERROR_ASR_INVALID_PARA
    int ERROR_ASR_INVALID_PARA_VALUE -> ERROR_ASR_INVALID_PARA_VALUE
    int ERROR_ASR_OUT_OF_MEMORY -> ERROR_ASR_OUT_OF_MEMORY
    int ERROR_ASR_CREATE_HANDLE_FAILED -> ERROR_ASR_CREATE_HANDLE_FAILED
    int ERROR_ASR_ENGINE_INIT_FAILED -> ERROR_ASR_ENGINE_INIT_FAILED
    int ERROR_ASR_ENGINE_STARTED -> ERROR_ASR_ENGINE_STARTED
    int ERROR_ASR_ENGINE_UNINIT -> ERROR_ASR_ENGINE_UNINIT
    int ERROR_ASR_SPEECH_TIMEOUT -> ERROR_ASR_SPEECH_TIMEOUT
    int ERROR_ASR_NO_RECOGNIZED_RESULT -> ERROR_ASR_NO_RECOGNIZED_RESULT
    int ERROR_ASR_INVALID_HANDLE -> ERROR_ASR_INVALID_HANDLE
    int ERROR_ASR_FILE_ACCESS -> ERROR_ASR_FILE_ACCESS
    int ERROR_AITALK_FALSE -> ERROR_AITALK_FALSE
    int ERROR_AITALK_PERMISSION_DENIED -> ERROR_AITALK_PERMISSION_DENIED
    int ERROR_AITALK_INVALID_PARA -> ERROR_AITALK_INVALID_PARA
    int ERROR_AITALK_BUFFER_OVERFLOW -> ERROR_AITALK_BUFFER_OVERFLOW
    int ERROR_AITALK_FAILED -> ERROR_AITALK_FAILED
    int ERROR_AITALK_NOT_SUPPORTED -> ERROR_AITALK_NOT_SUPPORTED
    int ERROR_AITALK_OUT_OF_MEMORY -> ERROR_AITALK_OUT_OF_MEMORY
    int ERROR_AITALK_INVALID_RESOURCE -> ERROR_AITALK_INVALID_RESOURCE
    int ERROR_AITALK_NOT_FOUND -> ERROR_AITALK_NOT_FOUND
    int ERROR_AITALK_INVALID_GRAMMAR -> ERROR_AITALK_INVALID_GRAMMAR
    int ERROR_AITALK_INVALID_CALL -> ERROR_AITALK_INVALID_CALL
    int ERROR_AITALK_SYNTAX_ERROR -> ERROR_AITALK_SYNTAX_ERROR
    int ERROR_AITALK_RESET -> ERROR_AITALK_RESET
    int ERROR_AITALK_ENDED -> ERROR_AITALK_ENDED
    int ERROR_AITALK_IDLE -> ERROR_AITALK_IDLE
    int ERROR_AITALK_CANNOT_SAVE_FILE -> ERROR_AITALK_CANNOT_SAVE_FILE
    int ERROR_AITALK_INVALID_GRAMMAR_NAME -> ERROR_AITALK_INVALID_GRAMMAR_NAME
    int ERROR_AITALK_BUFFER_EMPTY -> ERROR_AITALK_BUFFER_EMPTY
    int ERROR_AITALK_GET_RESULT -> ERROR_AITALK_GET_RESULT
    int ERROR_AITALK_REACT_OUT_TIME -> ERROR_AITALK_REACT_OUT_TIME
    int ERROR_AITALK_SPEECH_OUT_TIME -> ERROR_AITALK_SPEECH_OUT_TIME
    int ERROR_AITALK_AUDIO_CUT -> ERROR_AITALK_AUDIO_CUT
    int ERROR_AITALK_AUDIO_LOWER -> ERROR_AITALK_AUDIO_LOWER
    int ERROR_AITALK_INSUFFICIENT_PERMISSIONS -> ERROR_AITALK_INSUFFICIENT_PERMISSIONS
    int ERROR_AITALK_RESULT_ERROR -> ERROR_AITALK_RESULT_ERROR
    int ERROR_AITALK_SHORT_PAUSE -> ERROR_AITALK_SHORT_PAUSE
    int ERROR_AITALK_BUSY -> ERROR_AITALK_BUSY
    int ERROR_AITALK_GRM_NOT_UPDATE -> ERROR_AITALK_GRM_NOT_UPDATE
    int ERROR_AITALK_STARTED -> ERROR_AITALK_STARTED
    int ERROR_AITALK_STOPPED -> ERROR_AITALK_STOPPED
    int ERROR_AITALK_ALREADY_STARTED -> ERROR_AITALK_ALREADY_STARTED
    int ERROR_AITALK_ALREADY_STOPPED -> ERROR_AITALK_ALREADY_STOPPED
    int ERROR_AITALK_TOO_MANY_COMMAND -> ERROR_AITALK_TOO_MANY_COMMAND
    int ERROR_AITALK_WAIT -> ERROR_AITALK_WAIT
    int ERROR_AITALK_MAE_RIGHT -> ERROR_AITALK_MAE_RIGHT
    int ERROR_AITALK_MAE_WRONG -> ERROR_AITALK_MAE_WRONG
    int ERROR_AITALK_GRM_ERR -> ERROR_AITALK_GRM_ERR
    int ERROR_TTS_INVALID_PARA -> ERROR_TTS_INVALID_PARA
    int ERROR_TTS_INVALID_PARA_VALUE -> ERROR_TTS_INVALID_PARA_VALUE
    int ERROR_TTS_OUT_OF_MEMORY -> ERROR_TTS_OUT_OF_MEMORY
    int ERROR_TTS_INVALID_HANDLE -> ERROR_TTS_INVALID_HANDLE
    int ERROR_TTS_CREATE_HANDLE_FAILED -> ERROR_TTS_CREATE_HANDLE_FAILED
    int ERROR_TTS_INVALID_RESOURCE -> ERROR_TTS_INVALID_RESOURCE
    int ERROR_TTS_INVALID_VOICE_NAME -> ERROR_TTS_INVALID_VOICE_NAME
    int ERROR_TTS_ENGINE_UNINIT -> ERROR_TTS_ENGINE_UNINIT
    int ERROR_TTS_ENGINE_INIT_FAILED -> ERROR_TTS_ENGINE_INIT_FAILED
    int ERROR_TTS_ENGINE_BUSY -> ERROR_TTS_ENGINE_BUSY
    int ERROR_AISOUND_BASE -> ERROR_AISOUND_BASE
    int ERROR_AISOUND_UNIMPEMENTED -> ERROR_AISOUND_UNIMPEMENTED
    int ERROR_AISOUND_UNSUPPORTED -> ERROR_AISOUND_UNSUPPORTED
    int ERROR_AISOUND_INVALID_HANDLE -> ERROR_AISOUND_INVALID_HANDLE
    int ERROR_AISOUND_INVALID_PARA -> ERROR_AISOUND_INVALID_PARA
    int ERROR_AISOUND_INSUFFICIENT_HEAP -> ERROR_AISOUND_INSUFFICIENT_HEAP
    int ERROR_AISOUND_STATE_REFUSE -> ERROR_AISOUND_STATE_REFUSE
    int ERROR_AISOUND_INVALID_PARA_ID -> ERROR_AISOUND_INVALID_PARA_ID
    int ERROR_AISOUND_INVALID_PARA_VALUE -> ERROR_AISOUND_INVALID_PARA_VALUE
    int ERROR_AISOUND_RESOURCE -> ERROR_AISOUND_RESOURCE
    int ERROR_AISOUND_RESOURCE_READ -> ERROR_AISOUND_RESOURCE_READ
    int ERROR_AISOUND_LBENDIAN -> ERROR_AISOUND_LBENDIAN
    int ERROR_AISOUND_HEADFILE -> ERROR_AISOUND_HEADFILE
    int ERROR_AISOUND_BUFFER_OVERFLOW -> ERROR_AISOUND_BUFFER_OVERFLOW
    int ERROR_AISOUND_INVALID_ISAMPA -> ERROR_AISOUND_INVALID_ISAMPA
    int ERROR_AISOUND_INVALID_CSSML -> ERROR_AISOUND_INVALID_CSSML
com.iflytek.cloud.GrammarListener -> com.iflytek.cloud.GrammarListener:
    void onBuildFinish(java.lang.String,com.iflytek.cloud.SpeechError) -> onBuildFinish
com.iflytek.cloud.InitListener -> com.iflytek.cloud.InitListener:
    void onInit(int) -> onInit
com.iflytek.cloud.LexiconListener -> com.iflytek.cloud.LexiconListener:
    void onLexiconUpdated(java.lang.String,com.iflytek.cloud.SpeechError) -> onLexiconUpdated
com.iflytek.cloud.RecognizerListener -> com.iflytek.cloud.RecognizerListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.RecognizerResult -> com.iflytek.cloud.RecognizerResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    java.lang.String getResultString() -> getResultString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.Setting -> com.iflytek.cloud.Setting:
    boolean a -> a
    boolean b -> b
    com.iflytek.cloud.Setting$LOG_LEVEL c -> c
    java.lang.String d -> d
    void saveLogFile(com.iflytek.cloud.Setting$LOG_LEVEL,java.lang.String) -> saveLogFile
    void showLogcat(boolean) -> showLogcat
    void setLocationEnable(boolean) -> setLocationEnable
com.iflytek.cloud.Setting$LOG_LEVEL -> com.iflytek.cloud.Setting$LOG_LEVEL:
    com.iflytek.cloud.Setting$LOG_LEVEL all -> all
    com.iflytek.cloud.Setting$LOG_LEVEL detail -> detail
    com.iflytek.cloud.Setting$LOG_LEVEL normal -> normal
    com.iflytek.cloud.Setting$LOG_LEVEL low -> low
    com.iflytek.cloud.Setting$LOG_LEVEL none -> none
    com.iflytek.cloud.Setting$LOG_LEVEL[] a -> a
    com.iflytek.cloud.Setting$LOG_LEVEL[] values() -> values
    com.iflytek.cloud.Setting$LOG_LEVEL valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.SpeakerVerifier -> com.iflytek.cloud.SpeakerVerifier:
    com.iflytek.cloud.SpeakerVerifier a -> a
    com.iflytek.cloud.d.a.a c -> c
    com.iflytek.cloud.SpeakerVerifier createVerifier(android.content.Context,com.iflytek.cloud.InitListener) -> createVerifier
    com.iflytek.cloud.SpeakerVerifier getVerifier() -> getVerifier
    void getPasswordList(com.iflytek.cloud.SpeechListener) -> getPasswordList
    java.lang.String generatePassword(int) -> generatePassword
    void startListening(com.iflytek.cloud.VerifierListener) -> startListening
    void stopListening() -> stopListening
    int writeAudio(byte[],int,int) -> writeAudio
    boolean isListening() -> isListening
    void cancel(boolean) -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
    void sendRequest(java.lang.String,java.lang.String,com.iflytek.cloud.SpeechListener) -> sendRequest
com.iflytek.cloud.SpeechConstant -> com.iflytek.cloud.SpeechConstant:
    java.lang.String APPID -> APPID
    java.lang.String RESULT_TYPE -> RESULT_TYPE
    java.lang.String LANGUAGE -> LANGUAGE
    java.lang.String ACCENT -> ACCENT
    java.lang.String DOMAIN -> DOMAIN
    java.lang.String VAD_BOS -> VAD_BOS
    java.lang.String VAD_EOS -> VAD_EOS
    java.lang.String SAMPLE_RATE -> SAMPLE_RATE
    java.lang.String PARAMS -> PARAMS
    java.lang.String WAP_PROXY -> WAP_PROXY
    java.lang.String FORCE_LOGIN -> FORCE_LOGIN
    java.lang.String NET_CHECK -> NET_CHECK
    java.lang.String NET_TIMEOUT -> NET_TIMEOUT
    java.lang.String KEY_SPEECH_TIMEOUT -> KEY_SPEECH_TIMEOUT
    java.lang.String ENGINE_MODE -> ENGINE_MODE
    java.lang.String ENGINE_TYPE -> ENGINE_TYPE
    java.lang.String AUDIO_SOURCE -> AUDIO_SOURCE
    java.lang.String ASR_SOURCE_PATH -> ASR_SOURCE_PATH
    java.lang.String FILTER_AUDIO_TIME -> FILTER_AUDIO_TIME
    java.lang.String LOCAL_GRAMMAR -> LOCAL_GRAMMAR
    java.lang.String CLOUD_GRAMMAR -> CLOUD_GRAMMAR
    java.lang.String GRAMMAR_TYPE -> GRAMMAR_TYPE
    java.lang.String GRAMMAR_CONTENT -> GRAMMAR_CONTENT
    java.lang.String LEXICON_CONTENT -> LEXICON_CONTENT
    java.lang.String LEXICON_NAME -> LEXICON_NAME
    java.lang.String GRAMMAR_LIST -> GRAMMAR_LIST
    java.lang.String LOCAL_GRAMMAR_PACKAGE -> LOCAL_GRAMMAR_PACKAGE
    java.lang.String MIXED_THRESHOLD -> MIXED_THRESHOLD
    java.lang.String ASR_THRESHOLD -> ASR_THRESHOLD
    java.lang.String GRAMMAR_NAME -> GRAMMAR_NAME
    java.lang.String LEXICON_TYPE -> LEXICON_TYPE
    java.lang.String ASR_NBEST -> ASR_NBEST
    java.lang.String ASR_WBEST -> ASR_WBEST
    java.lang.String ASR_PTT -> ASR_PTT
    java.lang.String SEARCH_AREA -> SEARCH_AREA
    java.lang.String NLP_VERSION -> NLP_VERSION
    java.lang.String TYPE_LOCAL -> TYPE_LOCAL
    java.lang.String TYPE_CLOUD -> TYPE_CLOUD
    java.lang.String TYPE_MIX -> TYPE_MIX
    java.lang.String TYPE_AUTO -> TYPE_AUTO
    java.lang.String ISV_SST -> ISV_SST
    java.lang.String ISV_PWDT -> ISV_PWDT
    java.lang.String ISV_VID -> ISV_VID
    java.lang.String ISV_RGN -> ISV_RGN
    java.lang.String ISV_PWD -> ISV_PWD
    java.lang.String ISV_AUDIOPATH -> ISV_AUDIOPATH
    java.lang.String ISV_CMD -> ISV_CMD
    java.lang.String ISV_AUTHID -> ISV_AUTHID
    java.lang.String ISV_INTERRUPT_ERROR -> ISV_INTERRUPT_ERROR
    java.lang.String WFR_SST -> WFR_SST
    java.lang.String WFR_AUTHID -> WFR_AUTHID
    java.lang.String WFR_GID -> WFR_GID
    java.lang.String WFR_PSET -> WFR_PSET
    java.lang.String IVW_SST -> IVW_SST
    java.lang.String IVW_WORD_PATH -> IVW_WORD_PATH
    java.lang.String IVW_THRESHOLD -> IVW_THRESHOLD
    java.lang.String KEEP_ALIVE -> KEEP_ALIVE
    java.lang.String IVW_SHOT_WORD -> IVW_SHOT_WORD
    java.lang.String VOICE_NAME -> VOICE_NAME
    java.lang.String TEXT -> TEXT
    java.lang.String NEXT_TEXT -> NEXT_TEXT
    java.lang.String LOCAL_SPEAKERS -> LOCAL_SPEAKERS
    java.lang.String AUDIO_FORMAT -> AUDIO_FORMAT
    java.lang.String SPEED -> SPEED
    java.lang.String PITCH -> PITCH
    java.lang.String VOLUME -> VOLUME
    java.lang.String BACKGROUND_SOUND -> BACKGROUND_SOUND
    java.lang.String TTS_BUFFER_TIME -> TTS_BUFFER_TIME
    java.lang.String TTS_PLAY_STATE -> TTS_PLAY_STATE
    java.lang.String TTS_DATA_NOTIFY -> TTS_DATA_NOTIFY
    java.lang.String TTS_INTERRUPT_ERROR -> TTS_INTERRUPT_ERROR
    java.lang.String TTS_SPELL_INFO -> TTS_SPELL_INFO
    java.lang.String STREAM_TYPE -> STREAM_TYPE
    java.lang.String KEY_REQUEST_FOCUS -> KEY_REQUEST_FOCUS
    java.lang.String TTS_AUDIO_PATH -> TTS_AUDIO_PATH
    java.lang.String DATA_TYPE -> DATA_TYPE
    java.lang.String SUBJECT -> SUBJECT
    java.lang.String ASR_AUDIO_PATH -> ASR_AUDIO_PATH
    java.lang.String ASR_INTERRUPT_ERROR -> ASR_INTERRUPT_ERROR
    java.lang.String ASR_NOMATCH_ERROR -> ASR_NOMATCH_ERROR
    java.lang.String ASR_NET_PERF -> ASR_NET_PERF
    java.lang.String ENG_ASR -> ENG_ASR
    java.lang.String ENG_TTS -> ENG_TTS
    java.lang.String ENG_NLU -> ENG_NLU
    java.lang.String ENG_IVW -> ENG_IVW
    java.lang.String ENG_IVP -> ENG_IVP
    java.lang.String ENG_WFR -> ENG_WFR
    java.lang.String MODE_MSC -> MODE_MSC
    java.lang.String MODE_PLUS -> MODE_PLUS
    java.lang.String MODE_AUTO -> MODE_AUTO
    java.lang.String TEXT_ENCODING -> TEXT_ENCODING
    java.lang.String PLUS_LOCAL_TTS -> PLUS_LOCAL_TTS
    java.lang.String PLUS_LOCAL_ASR -> PLUS_LOCAL_ASR
    java.lang.String PLUS_LOCAL_IVW -> PLUS_LOCAL_IVW
    java.lang.String PLUS_LOCAL_ALL -> PLUS_LOCAL_ALL
    java.lang.String IST_SESSION_ID -> IST_SESSION_ID
    java.lang.String IST_SYNC_ID -> IST_SYNC_ID
    java.lang.String IST_AUDIO_UPLOADED -> IST_AUDIO_UPLOADED
    java.lang.String IST_AUDIO_PATH -> IST_AUDIO_PATH
    java.lang.String IST_SESSION_TRY -> IST_SESSION_TRY
com.iflytek.cloud.SpeechError -> com.iflytek.cloud.SpeechError:
    long serialVersionUID -> serialVersionUID
    int a -> a
    java.lang.String b -> b
    java.lang.String toString() -> toString
    int getErrorCode() -> getErrorCode
    java.lang.String getErrorDescription() -> getErrorDescription
    java.lang.String getHtmlDescription(boolean) -> getHtmlDescription
    java.lang.String getPlainDescription(boolean) -> getPlainDescription
com.iflytek.cloud.SpeechEvent -> com.iflytek.cloud.SpeechEvent:
    int EVENT_NETPREF -> EVENT_NETPREF
    int EVENT_SESSION_ID -> EVENT_SESSION_ID
    java.lang.String KEY_EVENT_SESSION_ID -> KEY_EVENT_SESSION_ID
    int EVENT_TTS_BUFFER -> EVENT_TTS_BUFFER
    java.lang.String KEY_EVENT_TTS_BUFFER -> KEY_EVENT_TTS_BUFFER
    int EVENT_TTS_CANCEL -> EVENT_TTS_CANCEL
    int EVENT_IVW_RESULT -> EVENT_IVW_RESULT
    java.lang.String KEY_EVENT_IVW_RESULT -> KEY_EVENT_IVW_RESULT
    int EVENT_SPEECH_START -> EVENT_SPEECH_START
    int EVENT_RECORD_STOP -> EVENT_RECORD_STOP
    int EVENT_AUDIO_URL -> EVENT_AUDIO_URL
    java.lang.String KEY_EVENT_AUDIO_URL -> KEY_EVENT_AUDIO_URL
    int EVENT_IST_AUDIO_FILE -> EVENT_IST_AUDIO_FILE
    int EVENT_IST_UPLOAD_BYTES -> EVENT_IST_UPLOAD_BYTES
    java.lang.String KEY_EVENT_IST_UPLOAD_COMPLETE -> KEY_EVENT_IST_UPLOAD_COMPLETE
    int EVENT_IST_RESULT_TIME -> EVENT_IST_RESULT_TIME
    int EVENT_IST_SYNC_ID -> EVENT_IST_SYNC_ID
    int EVENT_SESSION_BEGIN -> EVENT_SESSION_BEGIN
    int EVENT_SESSION_END -> EVENT_SESSION_END
com.iflytek.cloud.SpeechListener -> com.iflytek.cloud.SpeechListener:
    void onEvent(int,android.os.Bundle) -> onEvent
    void onBufferReceived(byte[]) -> onBufferReceived
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
com.iflytek.cloud.SpeechRecognizer -> com.iflytek.cloud.SpeechRecognizer:
    com.iflytek.cloud.SpeechRecognizer a -> a
    com.iflytek.cloud.d.a.c c -> c
    com.iflytek.speech.SpeechRecognizerAidl d -> d
    com.iflytek.cloud.SpeechRecognizer$a e -> e
    com.iflytek.cloud.InitListener f -> f
    android.os.Handler g -> g
    com.iflytek.cloud.SpeechRecognizer createRecognizer(android.content.Context,com.iflytek.cloud.InitListener) -> createRecognizer
    com.iflytek.cloud.SpeechRecognizer getRecognizer() -> getRecognizer
    void a(android.content.Context) -> a
    int buildGrammar(java.lang.String,java.lang.String,com.iflytek.cloud.GrammarListener) -> buildGrammar
    int updateLexicon(java.lang.String,java.lang.String,com.iflytek.cloud.LexiconListener) -> updateLexicon
    int startListening(com.iflytek.cloud.RecognizerListener) -> startListening
    int writeAudio(byte[],int,int) -> writeAudio
    void stopListening() -> stopListening
    boolean isListening() -> isListening
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
    com.iflytek.cloud.InitListener a(com.iflytek.cloud.SpeechRecognizer) -> a
com.iflytek.cloud.SpeechRecognizer$a -> com.iflytek.cloud.SpeechRecognizer$a:
    com.iflytek.cloud.RecognizerListener b -> b
    com.iflytek.speech.RecognizerListener c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.SpeechRecognizer a -> a
    void onVolumeChanged(int) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    android.os.Handler a(com.iflytek.cloud.SpeechRecognizer$a) -> a
    com.iflytek.cloud.RecognizerListener b(com.iflytek.cloud.SpeechRecognizer$a) -> b
    com.iflytek.speech.RecognizerListener c(com.iflytek.cloud.SpeechRecognizer$a) -> c
com.iflytek.cloud.SpeechSynthesizer -> com.iflytek.cloud.SpeechSynthesizer:
    com.iflytek.cloud.SpeechSynthesizer c -> c
    com.iflytek.cloud.d.a.g d -> d
    com.iflytek.speech.SpeechSynthesizerAidl e -> e
    com.iflytek.cloud.SpeechSynthesizer$a f -> f
    com.iflytek.cloud.InitListener a -> a
    android.os.Handler g -> g
    com.iflytek.cloud.SpeechSynthesizer createSynthesizer(android.content.Context,com.iflytek.cloud.InitListener) -> createSynthesizer
    com.iflytek.cloud.SpeechSynthesizer getSynthesizer() -> getSynthesizer
    void a(android.content.Context) -> a
    int startSpeaking(java.lang.String,com.iflytek.cloud.SynthesizerListener) -> startSpeaking
    int synthesizeToUri(java.lang.String,java.lang.String,com.iflytek.cloud.SynthesizerListener) -> synthesizeToUri
    void pauseSpeaking() -> pauseSpeaking
    void resumeSpeaking() -> resumeSpeaking
    void stopSpeaking() -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.cloud.SpeechSynthesizer$a -> com.iflytek.cloud.SpeechSynthesizer$a:
    com.iflytek.cloud.SynthesizerListener b -> b
    com.iflytek.speech.SynthesizerListener c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.SpeechSynthesizer a -> a
    void onSpeakBegin() -> onSpeakBegin
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    com.iflytek.cloud.SynthesizerListener a(com.iflytek.cloud.SpeechSynthesizer$a) -> a
    android.os.Handler b(com.iflytek.cloud.SpeechSynthesizer$a) -> b
    com.iflytek.speech.SynthesizerListener c(com.iflytek.cloud.SpeechSynthesizer$a) -> c
com.iflytek.cloud.SpeechUnderstander -> com.iflytek.cloud.SpeechUnderstander:
    com.iflytek.cloud.SpeechUnderstander a -> a
    com.iflytek.cloud.d.a.h c -> c
    com.iflytek.speech.SpeechUnderstanderAidl d -> d
    com.iflytek.cloud.SpeechUnderstander$a e -> e
    com.iflytek.cloud.InitListener f -> f
    android.os.Handler g -> g
    com.iflytek.cloud.SpeechUnderstander createUnderstander(android.content.Context,com.iflytek.cloud.InitListener) -> createUnderstander
    com.iflytek.cloud.SpeechUnderstander getUnderstander() -> getUnderstander
    void a(android.content.Context) -> a
    int startUnderstanding(com.iflytek.cloud.SpeechUnderstanderListener) -> startUnderstanding
    boolean isUnderstanding() -> isUnderstanding
    int writeAudio(byte[],int,int) -> writeAudio
    void stopUnderstanding() -> stopUnderstanding
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
    com.iflytek.cloud.InitListener a(com.iflytek.cloud.SpeechUnderstander) -> a
com.iflytek.cloud.SpeechUnderstander$a -> com.iflytek.cloud.SpeechUnderstander$a:
    com.iflytek.cloud.SpeechUnderstanderListener b -> b
    com.iflytek.speech.SpeechUnderstanderListener c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.SpeechUnderstander a -> a
    void onVolumeChanged(int) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.UnderstanderResult) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    com.iflytek.speech.SpeechUnderstanderListener a(com.iflytek.cloud.SpeechUnderstander$a) -> a
    android.os.Handler b(com.iflytek.cloud.SpeechUnderstander$a) -> b
    com.iflytek.cloud.SpeechUnderstanderListener c(com.iflytek.cloud.SpeechUnderstander$a) -> c
com.iflytek.cloud.SpeechUnderstanderListener -> com.iflytek.cloud.SpeechUnderstanderListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.UnderstanderResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.SpeechUtility -> com.iflytek.cloud.SpeechUtility:
    com.iflytek.cloud.SpeechUtility c -> c
    java.util.ArrayList d -> d
    int e -> e
    android.content.Context f -> f
    boolean g -> g
    com.iflytek.cloud.SpeechUtility$a h -> h
    com.iflytek.cloud.a.d.d$a a -> a
    java.lang.String TAG_RESOURCE_CONTENT -> TAG_RESOURCE_CONTENT
    java.lang.String TAG_RESOURCE_RET -> TAG_RESOURCE_RET
    java.lang.String TAG_RESOURCE_RESULT -> TAG_RESOURCE_RESULT
    com.iflytek.cloud.SpeechUtility createUtility(android.content.Context,java.lang.String) -> createUtility
    com.iflytek.cloud.SpeechUtility getUtility() -> getUtility
    int b() -> b
    boolean c() -> c
    boolean destroy() -> destroy
    boolean a() -> a
    void d() -> d
    void e() -> e
    boolean checkServiceInstalled() -> checkServiceInstalled
    void a(java.lang.String) -> a
    com.iflytek.speech.SpeechComponent b(java.lang.String) -> b
    java.lang.String[] queryAvailableEngines() -> queryAvailableEngines
    int openEngineSettings(java.lang.String) -> openEngineSettings
    boolean c(java.lang.String) -> c
    java.lang.String getComponentUrl() -> getComponentUrl
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getPlusLocalInfo(java.lang.String) -> getPlusLocalInfo
    com.iflytek.cloud.a.d.d$a getEngineMode() -> getEngineMode
    int getServiceVersion() -> getServiceVersion
    boolean a(android.content.Context) -> a
com.iflytek.cloud.SpeechUtility$1 -> com.iflytek.cloud.SpeechUtility$1:
com.iflytek.cloud.SpeechUtility$a -> com.iflytek.cloud.SpeechUtility$a:
    com.iflytek.cloud.SpeechUtility a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.iflytek.cloud.SynthesizerListener -> com.iflytek.cloud.SynthesizerListener:
    void onSpeakBegin() -> onSpeakBegin
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.TextUnderstander -> com.iflytek.cloud.TextUnderstander:
    com.iflytek.cloud.d.a.i a -> a
    com.iflytek.speech.TextUnderstanderAidl c -> c
    com.iflytek.cloud.TextUnderstander d -> d
    com.iflytek.cloud.TextUnderstander$a e -> e
    com.iflytek.cloud.InitListener f -> f
    android.os.Handler g -> g
    com.iflytek.cloud.TextUnderstander createTextUnderstander(android.content.Context,com.iflytek.cloud.InitListener) -> createTextUnderstander
    com.iflytek.cloud.TextUnderstander getTextUnderstander() -> getTextUnderstander
    void a(android.content.Context) -> a
    int understandText(java.lang.String,com.iflytek.cloud.TextUnderstanderListener) -> understandText
    boolean isUnderstanding() -> isUnderstanding
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
    com.iflytek.cloud.InitListener a(com.iflytek.cloud.TextUnderstander) -> a
com.iflytek.cloud.TextUnderstander$a -> com.iflytek.cloud.TextUnderstander$a:
    com.iflytek.cloud.TextUnderstanderListener b -> b
    com.iflytek.speech.TextUnderstanderListener c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.TextUnderstander a -> a
    void onResult(com.iflytek.cloud.UnderstanderResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    com.iflytek.speech.TextUnderstanderListener a(com.iflytek.cloud.TextUnderstander$a) -> a
    android.os.Handler b(com.iflytek.cloud.TextUnderstander$a) -> b
    com.iflytek.cloud.TextUnderstanderListener c(com.iflytek.cloud.TextUnderstander$a) -> c
com.iflytek.cloud.TextUnderstanderListener -> com.iflytek.cloud.TextUnderstanderListener:
    void onResult(com.iflytek.cloud.UnderstanderResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
com.iflytek.cloud.UnderstanderResult -> com.iflytek.cloud.UnderstanderResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.VerifierListener -> com.iflytek.cloud.VerifierListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.VerifierResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.VerifierResult -> com.iflytek.cloud.VerifierResult:
    java.lang.String TAG -> TAG
    int MSS_ERROR_IVP_GENERAL -> MSS_ERROR_IVP_GENERAL
    int MSS_ERROR_IVP_EXTRA_RGN_SOPPORT -> MSS_ERROR_IVP_EXTRA_RGN_SOPPORT
    int MSS_ERROR_IVP_TRUNCATED -> MSS_ERROR_IVP_TRUNCATED
    int MSS_ERROR_IVP_MUCH_NOISE -> MSS_ERROR_IVP_MUCH_NOISE
    int MSS_ERROR_IVP_TOO_LOW -> MSS_ERROR_IVP_TOO_LOW
    int MSS_ERROR_IVP_ZERO_AUDIO -> MSS_ERROR_IVP_ZERO_AUDIO
    int MSS_ERROR_IVP_UTTER_TOO_SHORT -> MSS_ERROR_IVP_UTTER_TOO_SHORT
    int MSS_ERROR_IVP_TEXT_NOT_MATCH -> MSS_ERROR_IVP_TEXT_NOT_MATCH
    int MSS_ERROR_IVP_NO_ENOUGH_AUDIO -> MSS_ERROR_IVP_NO_ENOUGH_AUDIO
    java.lang.String sst -> sst
    int ret -> ret
    java.lang.String dcs -> dcs
    java.lang.Double score -> score
    java.lang.Double score_raw -> score_raw
    java.lang.String vid -> vid
    int suc -> suc
    int rgn -> rgn
    java.lang.String trs -> trs
    int err -> err
    java.lang.String source -> source
com.iflytek.cloud.Version -> com.iflytek.cloud.Version:
    java.lang.String getVersion() -> getVersion
com.iflytek.cloud.VoiceWakeuper -> com.iflytek.cloud.VoiceWakeuper:
    com.iflytek.cloud.VoiceWakeuper a -> a
    com.iflytek.cloud.d.a.j c -> c
    com.iflytek.cloud.VoiceWakeuper createWakeuper(android.content.Context,com.iflytek.cloud.InitListener) -> createWakeuper
    com.iflytek.cloud.VoiceWakeuper getWakeuper() -> getWakeuper
    void startListening(com.iflytek.cloud.WakeuperListener) -> startListening
    int writeAudio(byte[],int,int) -> writeAudio
    void stopListening() -> stopListening
    boolean isListening() -> isListening
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.cloud.WakeuperListener -> com.iflytek.cloud.WakeuperListener:
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onResult(com.iflytek.cloud.WakeuperResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.WakeuperResult -> com.iflytek.cloud.WakeuperResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    java.lang.String getResultString() -> getResultString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.a -> com.iflytek.cloud.a:
    com.iflytek.cloud.RecognizerResult a(android.os.Parcel) -> a
    com.iflytek.cloud.RecognizerResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.a.a.a -> com.iflytek.cloud.a.a.a:
    com.iflytek.msc.MSCSessionInfo c -> c
    com.iflytek.msc.MSCSessionInfo d -> d
    byte[] e -> e
    com.iflytek.cloud.GrammarListener f -> f
    com.iflytek.cloud.LexiconListener g -> g
    java.lang.String h -> h
    int a(android.content.Context,java.lang.String,com.iflytek.cloud.a.d.a) -> a
    void a(java.lang.String) -> a
    void a(byte[],int) -> a
    void a() -> a
    void a(byte[],int,int) -> a
    int b() -> b
    int b(java.lang.String) -> b
    boolean a(java.lang.String,java.lang.String) -> a
    java.lang.String c(java.lang.String) -> c
    int grammarCallBack(int,char[]) -> grammarCallBack
    int lexiconCallBack(int,char[]) -> lexiconCallBack
    java.lang.String c() -> c
    java.lang.String d() -> d
com.iflytek.cloud.a.a.b -> com.iflytek.cloud.a.a.b:
    com.iflytek.cloud.RecognizerListener a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    int f -> f
    boolean g -> g
    com.iflytek.cloud.a.a.a h -> h
    com.iflytek.cloud.c.f i -> i
    int j -> j
    int k -> k
    java.lang.String l -> l
    java.util.concurrent.ConcurrentLinkedQueue m -> m
    java.util.ArrayList n -> n
    com.iflytek.cloud.a.d.c o -> o
    int v -> v
    int w -> w
    int a() -> a
    java.util.concurrent.ConcurrentLinkedQueue b() -> b
    void a(byte[],int) -> a
    void a(com.iflytek.cloud.RecognizerListener) -> a
    void c() -> c
    void a(android.os.Message) -> a
    void d() -> d
    void e() -> e
    void b(android.os.Message) -> b
    boolean a(boolean) -> a
    void w() -> w
    void b(boolean) -> b
    void f() -> f
    void a(com.iflytek.cloud.SpeechError) -> a
    void g() -> g
    void a(boolean,byte[]) -> a
    void h() -> h
    boolean i() -> i
    void stusCb(char[],int,int,int,byte[]) -> stusCb
    void rsltCb(char[],byte[],int,int) -> rsltCb
    void errCb(char[],int,byte[]) -> errCb
    void x() -> x
    void c(android.os.Message) -> c
    void a(byte[],boolean) -> a
    void a(byte[],int,int) -> a
    void b(com.iflytek.cloud.SpeechError) -> b
    void c(boolean) -> c
    com.iflytek.cloud.a.d.c j() -> j
    void k() -> k
    java.lang.String l() -> l
com.iflytek.cloud.a.b.a -> com.iflytek.cloud.a.b.a:
    com.iflytek.cloud.a.b.d a -> a
    com.iflytek.cloud.SpeechListener b -> b
    void a(com.iflytek.cloud.b.a,com.iflytek.cloud.a.b.a$a) -> a
    void a(android.os.Message) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.cloud.a.b.a$a -> com.iflytek.cloud.a.b.a$a:
    com.iflytek.cloud.SpeechListener a -> a
    android.os.Handler b -> b
    void onEvent(int,android.os.Bundle) -> onEvent
    void onBufferReceived(byte[]) -> onBufferReceived
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    com.iflytek.cloud.SpeechListener a(com.iflytek.cloud.a.b.a$a) -> a
com.iflytek.cloud.a.b.b -> com.iflytek.cloud.a.b.b:
    com.iflytek.cloud.a.b.a$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.a.b.c -> com.iflytek.cloud.a.b.c:
    com.iflytek.cloud.VerifierListener a -> a
    long b -> b
    boolean c -> c
    com.iflytek.cloud.a.b.d d -> d
    com.iflytek.cloud.c.f e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.iflytek.cloud.VerifierResult h -> h
    java.util.concurrent.ConcurrentLinkedQueue i -> i
    int j -> j
    long k -> k
    int l -> l
    void a(com.iflytek.cloud.VerifierListener) -> a
    boolean a() -> a
    boolean j() -> j
    void b(boolean) -> b
    void a(android.os.Message) -> a
    void b() -> b
    void d() -> d
    void b(android.os.Message) -> b
    void l() -> l
    void c(android.os.Message) -> c
    void a(com.iflytek.cloud.SpeechError) -> a
    void w() -> w
    void e() -> e
    void x() -> x
    void h() -> h
    void y() -> y
    void a(byte[],int) -> a
    void a(byte[],boolean) -> a
    java.util.concurrent.ConcurrentLinkedQueue f() -> f
    void a(byte[],int,int) -> a
    void b(com.iflytek.cloud.SpeechError) -> b
    void c(boolean) -> c
    int g() -> g
    void k() -> k
com.iflytek.cloud.a.b.c$1 -> com.iflytek.cloud.a.b.c$1:
    int[] a -> a
com.iflytek.cloud.a.b.d -> com.iflytek.cloud.a.b.d:
    com.iflytek.msc.MSCSessionInfo c -> c
    com.iflytek.msc.MSCSessionInfo d -> d
    com.iflytek.msc.MSCSessionInfo e -> e
    byte[] f -> f
    int a(android.content.Context,java.lang.String,com.iflytek.cloud.a.d.a) -> a
    void a(java.lang.String) -> a
    void a(byte[],int) -> a
    void a() -> a
    void a(byte[],int,int) -> a
    boolean b() -> b
    int c() -> c
    byte[] d() -> d
    com.iflytek.cloud.a.d.b$a e() -> e
    int a(android.content.Context,com.iflytek.cloud.a.d.a) -> a
com.iflytek.cloud.a.c.a -> com.iflytek.cloud.a.c.a:
    com.iflytek.msc.MSCSessionInfo c -> c
    com.iflytek.msc.MSCSessionInfo d -> d
    int a(android.content.Context,java.lang.String,com.iflytek.cloud.a.d.a) -> a
    void a(java.lang.String) -> a
    void a(byte[],int) -> a
    void a(byte[],int,int) -> a
    void a() -> a
com.iflytek.cloud.a.c.b -> com.iflytek.cloud.a.c.b:
    java.lang.String a -> a
    com.iflytek.cloud.WakeuperListener b -> b
    boolean c -> c
    int d -> d
    com.iflytek.cloud.a.c.a e -> e
    com.iflytek.cloud.c.f f -> f
    java.util.ArrayList g -> g
    boolean h -> h
    boolean i -> i
    int j -> j
    int a() -> a
    void a(com.iflytek.cloud.WakeuperListener) -> a
    void a(android.os.Message) -> a
    void b() -> b
    void d() -> d
    void b(android.os.Message) -> b
    int MsgProcCallBack(char[],int,int,int,byte[]) -> MsgProcCallBack
    boolean a(boolean) -> a
    void f() -> f
    void b(boolean) -> b
    void a(com.iflytek.cloud.SpeechError) -> a
    void a(boolean,byte[],int) -> a
    void h() -> h
    boolean i() -> i
    void g() -> g
    void c(android.os.Message) -> c
    void a(byte[],boolean) -> a
    void a(byte[],int,int) -> a
    void b(com.iflytek.cloud.SpeechError) -> b
    void e() -> e
    void c(boolean) -> c
    void k() -> k
com.iflytek.cloud.a.d.a -> com.iflytek.cloud.a.d.a:
    int p -> p
    int q -> q
    android.content.Context r -> r
    com.iflytek.cloud.b.a a -> a
    boolean s -> s
    com.iflytek.cloud.a.d.a$b b -> b
    long t -> t
    int u -> u
    android.os.HandlerThread c -> c
    void a(android.os.Message) -> a
    void m() -> m
    void a() -> a
    void handleMessage(android.os.Message) -> handleMessage
    boolean i() -> i
    java.lang.String n() -> n
    java.lang.String o() -> o
    java.lang.String p() -> p
    int q() -> q
    void b(boolean) -> b
    void c(com.iflytek.cloud.SpeechError) -> c
    boolean r() -> r
    void a(com.iflytek.cloud.a.d.a$b) -> a
    com.iflytek.cloud.a.d.a$b s() -> s
    void a(com.iflytek.cloud.b.a) -> a
    void h() -> h
    com.iflytek.cloud.b.a t() -> t
    void c() -> c
    void a(int) -> a
    void d(android.os.Message) -> d
    void a(int,com.iflytek.cloud.a.d.a$a,boolean,int) -> a
    void a(android.os.Message,com.iflytek.cloud.a.d.a$a,boolean,int) -> a
    void u() -> u
    void a(com.iflytek.cloud.SpeechError) -> a
    java.lang.String v() -> v
com.iflytek.cloud.a.d.a$a -> com.iflytek.cloud.a.d.a$a:
    com.iflytek.cloud.a.d.a$a a -> a
    com.iflytek.cloud.a.d.a$a b -> b
    com.iflytek.cloud.a.d.a$a c -> c
    com.iflytek.cloud.a.d.a$a[] d -> d
    com.iflytek.cloud.a.d.a$a[] values() -> values
    com.iflytek.cloud.a.d.a$a valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.a.d.a$b -> com.iflytek.cloud.a.d.a$b:
    com.iflytek.cloud.a.d.a$b a -> a
    com.iflytek.cloud.a.d.a$b b -> b
    com.iflytek.cloud.a.d.a$b c -> c
    com.iflytek.cloud.a.d.a$b d -> d
    com.iflytek.cloud.a.d.a$b e -> e
    com.iflytek.cloud.a.d.a$b f -> f
    com.iflytek.cloud.a.d.a$b[] g -> g
    com.iflytek.cloud.a.d.a$b[] values() -> values
    com.iflytek.cloud.a.d.a$b valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.a.d.b -> com.iflytek.cloud.a.d.b:
    char[] a -> a
    java.lang.String b -> b
com.iflytek.cloud.a.d.b$a -> com.iflytek.cloud.a.d.b$a:
    com.iflytek.cloud.a.d.b$a a -> a
    com.iflytek.cloud.a.d.b$a b -> b
    com.iflytek.cloud.a.d.b$a c -> c
    com.iflytek.cloud.a.d.b$a d -> d
    com.iflytek.cloud.a.d.b$a e -> e
    com.iflytek.cloud.a.d.b$a f -> f
    com.iflytek.cloud.a.d.b$a[] g -> g
    com.iflytek.cloud.a.d.b$a[] values() -> values
    com.iflytek.cloud.a.d.b$a valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.a.d.c -> com.iflytek.cloud.a.d.c:
    org.json.JSONObject a -> a
    long b -> b
    long c -> c
    void a(com.iflytek.cloud.b.a) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,long,boolean) -> a
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a() -> a
com.iflytek.cloud.a.d.d -> com.iflytek.cloud.a.d.d:
    com.iflytek.cloud.b.a b -> b
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    boolean setParameter(com.iflytek.cloud.b.a) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    com.iflytek.cloud.a.d.d$a a(java.lang.String,com.iflytek.speech.ISpeechModule) -> a
com.iflytek.cloud.a.d.d$a -> com.iflytek.cloud.a.d.d$a:
    com.iflytek.cloud.a.d.d$a a -> a
    com.iflytek.cloud.a.d.d$a b -> b
    com.iflytek.cloud.a.d.d$a c -> c
    com.iflytek.cloud.a.d.d$a[] d -> d
    com.iflytek.cloud.a.d.d$a[] values() -> values
    com.iflytek.cloud.a.d.d$a valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.a.d.e -> com.iflytek.cloud.a.d.e:
    android.content.Context a -> a
    java.lang.Object c -> c
    com.iflytek.cloud.a.d.a d -> d
    android.os.HandlerThread e -> e
    android.os.HandlerThread a(java.lang.String) -> a
    void b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    void cancel(boolean) -> cancel
    int getSampleRate() -> getSampleRate
    boolean destroy() -> destroy
    boolean a_() -> a_
    void finalize() -> finalize
com.iflytek.cloud.a.d.e$a -> com.iflytek.cloud.a.d.e$a:
    com.iflytek.cloud.SpeechListener b -> b
    android.os.Handler c -> c
    com.iflytek.cloud.a.d.e a -> a
    void onBufferReceived(byte[]) -> onBufferReceived
    void onEvent(int,android.os.Bundle) -> onEvent
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    com.iflytek.cloud.SpeechListener a(com.iflytek.cloud.a.d.e$a) -> a
com.iflytek.cloud.a.d.f -> com.iflytek.cloud.a.d.f:
    com.iflytek.cloud.a.d.e$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.a.e.a -> com.iflytek.cloud.a.e.a:
    java.lang.Object a -> a
    com.iflytek.msc.MSCSessionInfo b -> b
    void a(android.content.Context,java.lang.String,java.lang.String,com.iflytek.cloud.a.d.a) -> a
    boolean a() -> a
    byte[] a(android.content.Context,java.lang.String,byte[],com.iflytek.cloud.a.d.a) -> a
    byte[] a(android.content.Context,com.iflytek.cloud.a.d.a) -> a
    byte[] a(android.content.Context,com.iflytek.cloud.a.d.a,java.lang.String) -> a
com.iflytek.cloud.a.e.b -> com.iflytek.cloud.a.e.b:
    com.iflytek.cloud.SpeechListener a -> a
    com.iflytek.cloud.a.e.a b -> b
    void a(com.iflytek.cloud.SpeechListener) -> a
    void a(com.iflytek.cloud.SpeechListener,java.lang.String) -> a
    void a(com.iflytek.cloud.SpeechListener,java.lang.String,byte[]) -> a
    com.iflytek.cloud.SpeechError a(java.lang.String,java.lang.String) -> a
    void a(android.os.Message) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.cloud.a.e.b$a -> com.iflytek.cloud.a.e.b$a:
    byte[] b -> b
    java.lang.String c -> c
    com.iflytek.cloud.a.e.b a -> a
    byte[] a() -> a
    java.lang.String b() -> b
com.iflytek.cloud.a.f.a -> com.iflytek.cloud.a.f.a:
    java.lang.String c -> c
    com.iflytek.cloud.a.f.i d -> d
    com.iflytek.cloud.a.f.b e -> e
    java.util.ArrayList f -> f
    int g -> g
    int h -> h
    java.lang.StringBuilder i -> i
    boolean j -> j
    int k -> k
    int a -> a
    int b -> b
    int l -> l
    void h() -> h
    void a(java.lang.String,com.iflytek.cloud.a.f.b) -> a
    java.lang.String o() -> o
    void a(android.os.Message) -> a
    void a() -> a
    void b() -> b
    void d() -> d
    void b(boolean) -> b
    void a(com.iflytek.cloud.SpeechError) -> a
    java.lang.String e() -> e
    void f() -> f
com.iflytek.cloud.a.f.b -> com.iflytek.cloud.a.f.b:
    void a(java.util.ArrayList,int,int,int,java.lang.String) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.cloud.a.f.c -> com.iflytek.cloud.a.f.c:
    com.iflytek.cloud.c.c j -> j
    com.iflytek.cloud.c.b k -> k
    com.iflytek.cloud.SynthesizerListener l -> l
    com.iflytek.cloud.SynthesizerListener m -> m
    com.iflytek.cloud.a.f.c$a n -> n
    int o -> o
    boolean p -> p
    boolean f -> f
    boolean g -> g
    java.lang.String h -> h
    com.iflytek.cloud.SpeechError i -> i
    com.iflytek.cloud.a.f.b q -> q
    com.iflytek.cloud.c.c$a r -> r
    android.os.Handler s -> s
    boolean t -> t
    void a(java.lang.String,com.iflytek.cloud.b.a) -> a
    void e() -> e
    void a(com.iflytek.cloud.a.f.c$a) -> a
    void a(java.lang.String,com.iflytek.cloud.b.a,com.iflytek.cloud.SynthesizerListener,boolean) -> a
    void a(com.iflytek.cloud.SynthesizerListener) -> a
    int f() -> f
    void g() -> g
    boolean h() -> h
    void j() -> j
    void i() -> i
    void cancel(boolean) -> cancel
    boolean destroy() -> destroy
    void a(java.lang.String,java.lang.String,com.iflytek.cloud.b.a,com.iflytek.cloud.SynthesizerListener) -> a
    boolean d() -> d
    com.iflytek.cloud.SynthesizerListener a(com.iflytek.cloud.a.f.c) -> a
    android.os.Handler b(com.iflytek.cloud.a.f.c) -> b
    com.iflytek.cloud.c.b c(com.iflytek.cloud.a.f.c) -> c
    void d(com.iflytek.cloud.a.f.c) -> d
    com.iflytek.cloud.a.f.c$a e(com.iflytek.cloud.a.f.c) -> e
    com.iflytek.cloud.c.c f(com.iflytek.cloud.a.f.c) -> f
    com.iflytek.cloud.SynthesizerListener g(com.iflytek.cloud.a.f.c) -> g
    boolean h(com.iflytek.cloud.a.f.c) -> h
    com.iflytek.cloud.a.d.a i(com.iflytek.cloud.a.f.c) -> i
    com.iflytek.cloud.a.d.a j(com.iflytek.cloud.a.f.c) -> j
    com.iflytek.cloud.a.d.a k(com.iflytek.cloud.a.f.c) -> k
    com.iflytek.cloud.a.d.a l(com.iflytek.cloud.a.f.c) -> l
    com.iflytek.cloud.a.d.a m(com.iflytek.cloud.a.f.c) -> m
    com.iflytek.cloud.a.d.a n(com.iflytek.cloud.a.f.c) -> n
com.iflytek.cloud.a.f.c$a -> com.iflytek.cloud.a.f.c$a:
    void a() -> a
com.iflytek.cloud.a.f.d -> com.iflytek.cloud.a.f.d:
    com.iflytek.cloud.a.f.c a -> a
    void a(java.util.ArrayList,int,int,int,java.lang.String) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.cloud.a.f.e -> com.iflytek.cloud.a.f.e:
    com.iflytek.cloud.a.f.c a -> a
    void a() -> a
    void b() -> b
    void a(int,int,int) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
    void c() -> c
com.iflytek.cloud.a.f.f -> com.iflytek.cloud.a.f.f:
    com.iflytek.cloud.a.f.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.a.f.g -> com.iflytek.cloud.a.f.g:
    com.iflytek.cloud.a.f.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.a.f.h -> com.iflytek.cloud.a.f.h:
    android.os.Handler a -> a
    java.lang.String b -> b
    com.iflytek.cloud.a.f.c c -> c
    void a(com.iflytek.cloud.SpeechError) -> a
    void a(java.util.ArrayList,int,int,int,java.lang.String) -> a
com.iflytek.cloud.a.f.i -> com.iflytek.cloud.a.f.i:
    com.iflytek.msc.MSCSessionInfo c -> c
    int a(android.content.Context,java.lang.String,com.iflytek.cloud.a.d.a) -> a
    void a(java.lang.String) -> a
    void a(byte[]) -> a
    byte[] a() -> a
    int b() -> b
    java.lang.String c() -> c
    int b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    boolean d() -> d
    java.lang.String e() -> e
com.iflytek.cloud.a.g.a -> com.iflytek.cloud.a.g.a:
    java.lang.String[][] a -> a
    java.lang.String[][] b -> b
    com.iflytek.cloud.b.a c -> c
    boolean d -> d
    com.iflytek.cloud.b.a a(android.content.Context) -> a
    void c(android.content.Context) -> c
    void a(com.iflytek.cloud.b.a,android.content.Context) -> a
    com.iflytek.cloud.b.a b(android.content.Context) -> b
    java.lang.String a(java.lang.String) -> a
com.iflytek.cloud.a.g.a.a -> com.iflytek.cloud.a.g.a.a:
    java.lang.String a -> a
    boolean b -> b
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
com.iflytek.cloud.a.g.a.b -> com.iflytek.cloud.a.g.a.b:
    java.util.HashMap a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
com.iflytek.cloud.a.g.b -> com.iflytek.cloud.a.g.b:
    android.content.SharedPreferences b -> b
    android.content.Context c -> c
    com.iflytek.cloud.a.g.b a -> a
    boolean d -> d
    long e -> e
    com.iflytek.cloud.a.g.b c(android.content.Context) -> c
    com.iflytek.cloud.a.g.b a(android.content.Context) -> a
    void a(java.lang.String,long) -> a
    void a(android.location.Location) -> a
    float a(java.lang.String) -> a
    boolean b(android.content.Context) -> b
com.iflytek.cloud.a.g.c -> com.iflytek.cloud.a.g.c:
    android.util.DisplayMetrics a -> a
    java.lang.String a(long) -> a
com.iflytek.cloud.a.g.d -> com.iflytek.cloud.a.g.d:
    java.lang.String a(java.lang.String) -> a
com.iflytek.cloud.a.g.e -> com.iflytek.cloud.a.g.e:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    void a(java.lang.String) -> a
    boolean a(android.os.MemoryFile,long,java.lang.String) -> a
    void a(java.util.concurrent.ConcurrentLinkedQueue,java.lang.String) -> a
    void b(java.lang.String) -> b
com.iflytek.cloud.a.g.f -> com.iflytek.cloud.a.g.f:
    int a -> a
    int b -> b
    boolean a(android.content.Context,java.lang.Boolean,android.media.AudioManager$OnAudioFocusChangeListener) -> a
    boolean b(android.content.Context,java.lang.Boolean,android.media.AudioManager$OnAudioFocusChangeListener) -> b
    void a(android.view.View) -> a
com.iflytek.cloud.a.g.g -> com.iflytek.cloud.a.g.g:
    int a -> a
    boolean a(android.content.Context,android.media.AudioManager$OnAudioFocusChangeListener) -> a
    boolean b(android.content.Context,android.media.AudioManager$OnAudioFocusChangeListener) -> b
    void a(android.view.View) -> a
com.iflytek.cloud.a.g.h -> com.iflytek.cloud.a.g.h:
    void a(android.content.Context) -> a
    java.lang.String a(android.net.NetworkInfo) -> a
    java.lang.String b(android.net.NetworkInfo) -> b
com.iflytek.cloud.b -> com.iflytek.cloud.b:
    com.iflytek.cloud.SpeechRecognizer a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.b.a -> com.iflytek.cloud.b.a:
    java.util.HashMap a -> a
    void a() -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    com.iflytek.cloud.b.a b() -> b
    void a(java.lang.String,java.lang.String) -> a
    void a(com.iflytek.cloud.b.a,java.lang.String) -> a
    java.util.HashMap c() -> c
    void a(com.iflytek.cloud.b.a) -> a
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.lang.Boolean c(java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
    java.lang.String toString() -> toString
    java.lang.String e(java.lang.String) -> e
    java.lang.String b(java.lang.String,java.lang.String) -> b
    int a(java.lang.String,int) -> a
    boolean a(java.lang.String,boolean) -> a
    void a(java.lang.String[][]) -> a
    void d() -> d
    java.lang.String f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    java.lang.Object clone() -> clone
com.iflytek.cloud.b.b -> com.iflytek.cloud.b.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String[][] c -> c
com.iflytek.cloud.b.c -> com.iflytek.cloud.b.c:
    java.lang.String a -> a
    java.lang.String a(android.content.Context,com.iflytek.cloud.a.d.a) -> a
    void a(com.iflytek.cloud.b.a) -> a
    void a(android.content.Context,com.iflytek.cloud.b.a) -> a
    java.lang.String a(android.content.Context,java.lang.String,com.iflytek.cloud.a.d.a) -> a
    java.lang.String b(android.content.Context,java.lang.String,com.iflytek.cloud.a.d.a) -> b
    java.lang.String b(android.content.Context,com.iflytek.cloud.a.d.a) -> b
    java.lang.String c(android.content.Context,com.iflytek.cloud.a.d.a) -> c
    java.lang.String d(android.content.Context,com.iflytek.cloud.a.d.a) -> d
    java.lang.String a(android.content.Context) -> a
    boolean a(java.lang.String) -> a
    void b(com.iflytek.cloud.b.a) -> b
com.iflytek.cloud.c -> com.iflytek.cloud.c:
    com.iflytek.cloud.GrammarListener a -> a
    com.iflytek.cloud.SpeechRecognizer b -> b
    void onBuildFinish(java.lang.String,int) -> onBuildFinish
com.iflytek.cloud.c.a -> com.iflytek.cloud.c.a:
    int a -> a
    int b -> b
    int c -> c
    boolean d -> d
    int e -> e
    short f -> f
    int g -> g
    int h -> h
    byte[] i -> i
    java.io.RandomAccessFile j -> j
    java.lang.String k -> k
    com.iflytek.cloud.c.f$a l -> l
    void a(short,int,int) -> a
    int a() -> a
    void a(boolean) -> a
    void a(com.iflytek.cloud.c.f$a) -> a
    void run() -> run
    void finalize() -> finalize
    void b() -> b
com.iflytek.cloud.c.b -> com.iflytek.cloud.c.b:
    int a -> a
    java.util.ArrayList b -> b
    android.content.Context c -> c
    int d -> d
    int e -> e
    android.os.MemoryFile f -> f
    long g -> g
    int h -> h
    com.iflytek.cloud.c.b$a i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    byte[] l -> l
    int m -> m
    int n -> n
    void a(java.lang.String) -> a
    int a() -> a
    void a(java.util.ArrayList,int,int,int) -> a
    boolean b() -> b
    boolean a(int) -> a
    void a(byte[]) -> a
    java.lang.String i() -> i
    void c() -> c
    int d() -> d
    com.iflytek.cloud.c.b$a e() -> e
    boolean f() -> f
    boolean g() -> g
    void a(android.media.AudioTrack,int) -> a
    void b(android.media.AudioTrack,int) -> b
    void h() -> h
    void finalize() -> finalize
    void b(int) -> b
com.iflytek.cloud.c.b$a -> com.iflytek.cloud.c.b$a:
    long a -> a
    long b -> b
    int c -> c
    int d -> d
    com.iflytek.cloud.c.b e -> e
com.iflytek.cloud.c.c -> com.iflytek.cloud.c.c:
    android.media.AudioTrack b -> b
    com.iflytek.cloud.c.b c -> c
    android.content.Context d -> d
    com.iflytek.cloud.c.c$b e -> e
    com.iflytek.cloud.c.c$a f -> f
    int g -> g
    int h -> h
    boolean i -> i
    int j -> j
    boolean k -> k
    boolean l -> l
    java.lang.Object m -> m
    android.media.AudioManager$OnAudioFocusChangeListener a -> a
    int n -> n
    android.os.Handler o -> o
    int a() -> a
    void f() -> f
    void b() -> b
    void g() -> g
    boolean c() -> c
    boolean a(com.iflytek.cloud.c.b,com.iflytek.cloud.c.c$a) -> a
    boolean d() -> d
    void e() -> e
    boolean a(com.iflytek.cloud.c.c,boolean) -> a
    com.iflytek.cloud.c.c$a a(com.iflytek.cloud.c.c) -> a
    boolean b(com.iflytek.cloud.c.c) -> b
    boolean c(com.iflytek.cloud.c.c) -> c
    android.content.Context d(com.iflytek.cloud.c.c) -> d
    boolean e(com.iflytek.cloud.c.c) -> e
    com.iflytek.cloud.c.b f(com.iflytek.cloud.c.c) -> f
    int g(com.iflytek.cloud.c.c) -> g
    int a(com.iflytek.cloud.c.c,int) -> a
    void h(com.iflytek.cloud.c.c) -> h
    android.os.Handler i(com.iflytek.cloud.c.c) -> i
    int b(com.iflytek.cloud.c.c,int) -> b
    android.media.AudioTrack j(com.iflytek.cloud.c.c) -> j
    int k(com.iflytek.cloud.c.c) -> k
    android.media.AudioTrack a(com.iflytek.cloud.c.c,android.media.AudioTrack) -> a
    com.iflytek.cloud.c.c$b a(com.iflytek.cloud.c.c,com.iflytek.cloud.c.c$b) -> a
    com.iflytek.cloud.c.c$a a(com.iflytek.cloud.c.c,com.iflytek.cloud.c.c$a) -> a
    int l(com.iflytek.cloud.c.c) -> l
com.iflytek.cloud.c.c$a -> com.iflytek.cloud.c.c$a:
    void a(com.iflytek.cloud.SpeechError) -> a
    void a() -> a
    void b() -> b
    void a(int,int,int) -> a
    void c() -> c
com.iflytek.cloud.c.c$b -> com.iflytek.cloud.c.c$b:
    com.iflytek.cloud.c.c a -> a
    void run() -> run
com.iflytek.cloud.c.d -> com.iflytek.cloud.c.d:
    com.iflytek.cloud.c.c a -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
com.iflytek.cloud.c.e -> com.iflytek.cloud.c.e:
    com.iflytek.cloud.c.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.c.f -> com.iflytek.cloud.c.f:
    short a -> a
    byte[] b -> b
    android.media.AudioRecord c -> c
    com.iflytek.cloud.c.f$a d -> d
    com.iflytek.cloud.c.f$a e -> e
    boolean f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    void a(short,int,int) -> a
    int a() -> a
    void a(boolean) -> a
    void a(com.iflytek.cloud.c.f$a) -> a
    void run() -> run
    void finalize() -> finalize
    void b() -> b
com.iflytek.cloud.c.f$a -> com.iflytek.cloud.c.f$a:
    void a(byte[],int,int) -> a
    void b(com.iflytek.cloud.SpeechError) -> b
    void c(boolean) -> c
    void k() -> k
com.iflytek.cloud.d -> com.iflytek.cloud.d:
    com.iflytek.cloud.LexiconListener a -> a
    com.iflytek.cloud.SpeechRecognizer b -> b
    void onLexiconUpdated(java.lang.String,int) -> onLexiconUpdated
com.iflytek.cloud.d.a.a -> com.iflytek.cloud.d.a.a:
    boolean f -> f
    void a(com.iflytek.cloud.VerifierListener) -> a
    void e() -> e
    void a(com.iflytek.cloud.SpeechListener) -> a
    java.lang.String a(int) -> a
    int a(byte[],int,int) -> a
    boolean f() -> f
    void a(java.lang.String,java.lang.String,com.iflytek.cloud.SpeechListener) -> a
    com.iflytek.cloud.a.d.a a(com.iflytek.cloud.d.a.a) -> a
    com.iflytek.cloud.a.d.a b(com.iflytek.cloud.d.a.a) -> b
    android.content.Context c(com.iflytek.cloud.d.a.a) -> c
    boolean d(com.iflytek.cloud.d.a.a) -> d
com.iflytek.cloud.d.a.a$a -> com.iflytek.cloud.d.a.a$a:
    com.iflytek.cloud.VerifierListener b -> b
    android.os.Handler c -> c
    com.iflytek.cloud.d.a.a a -> a
    void onVolumeChanged(int) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onResult(com.iflytek.cloud.VerifierResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void a() -> a
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    com.iflytek.cloud.VerifierListener a(com.iflytek.cloud.d.a.a$a) -> a
com.iflytek.cloud.d.a.b -> com.iflytek.cloud.d.a.b:
    com.iflytek.cloud.d.a.a$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.d.a.c -> com.iflytek.cloud.d.a.c:
    boolean f -> f
    void b(java.lang.String) -> b
    int a(com.iflytek.cloud.RecognizerListener) -> a
    int a(byte[],int,int) -> a
    void e() -> e
    void cancel(boolean) -> cancel
    boolean f() -> f
    int a(java.lang.String,java.lang.String,com.iflytek.cloud.GrammarListener) -> a
    int a(java.lang.String,java.lang.String,com.iflytek.cloud.LexiconListener) -> a
    com.iflytek.cloud.a.d.a a(com.iflytek.cloud.d.a.c) -> a
    com.iflytek.cloud.a.d.a b(com.iflytek.cloud.d.a.c) -> b
    android.content.Context c(com.iflytek.cloud.d.a.c) -> c
    boolean d(com.iflytek.cloud.d.a.c) -> d
com.iflytek.cloud.d.a.c$a -> com.iflytek.cloud.d.a.c$a:
    com.iflytek.cloud.RecognizerListener b -> b
    boolean c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.d.a.c a -> a
    void onVolumeChanged(int) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    void a() -> a
    com.iflytek.cloud.RecognizerListener a(com.iflytek.cloud.d.a.c$a) -> a
    boolean b(com.iflytek.cloud.d.a.c$a) -> b
    boolean a(com.iflytek.cloud.d.a.c$a,boolean) -> a
com.iflytek.cloud.d.a.d -> com.iflytek.cloud.d.a.d:
    com.iflytek.cloud.GrammarListener a -> a
    com.iflytek.cloud.d.a.c b -> b
    void onEvent(int,android.os.Bundle) -> onEvent
    void onBufferReceived(byte[]) -> onBufferReceived
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
com.iflytek.cloud.d.a.e -> com.iflytek.cloud.d.a.e:
    com.iflytek.cloud.LexiconListener a -> a
    com.iflytek.cloud.d.a.c b -> b
    void onEvent(int,android.os.Bundle) -> onEvent
    void onBufferReceived(byte[]) -> onBufferReceived
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
com.iflytek.cloud.d.a.f -> com.iflytek.cloud.d.a.f:
    com.iflytek.cloud.d.a.c$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.d.a.g -> com.iflytek.cloud.d.a.g:
    android.content.Context f -> f
    com.iflytek.cloud.a.f.c g -> g
    com.iflytek.cloud.a.f.c h -> h
    int a(java.lang.String,com.iflytek.cloud.SynthesizerListener) -> a
    void a(java.lang.String,com.iflytek.cloud.SynthesizerListener,java.lang.String) -> a
    void a() -> a
    void a(java.lang.String,java.lang.String,com.iflytek.cloud.SynthesizerListener) -> a
    void e() -> e
    void f() -> f
    boolean g() -> g
    int h() -> h
    void a(boolean) -> a
    boolean destroy() -> destroy
com.iflytek.cloud.d.a.h -> com.iflytek.cloud.d.a.h:
    com.iflytek.cloud.d.a.h a -> a
    com.iflytek.cloud.d.a.c b -> b
    int a(com.iflytek.cloud.SpeechUnderstanderListener) -> a
    boolean a() -> a
    int a(byte[],int,int) -> a
    void b() -> b
    void a(boolean) -> a
    boolean a(com.iflytek.cloud.b.a) -> a
    boolean c() -> c
com.iflytek.cloud.d.a.h$a -> com.iflytek.cloud.d.a.h$a:
    com.iflytek.cloud.SpeechUnderstanderListener b -> b
    com.iflytek.cloud.d.a.h a -> a
    void onEndOfSpeech() -> onEndOfSpeech
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
com.iflytek.cloud.d.a.i -> com.iflytek.cloud.d.a.i:
    int a(java.lang.String,com.iflytek.cloud.TextUnderstanderListener) -> a
    boolean e() -> e
    void cancel(boolean) -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.cloud.d.a.i$a -> com.iflytek.cloud.d.a.i$a:
    com.iflytek.cloud.TextUnderstanderListener b -> b
    com.iflytek.cloud.d.a.i a -> a
    void onBufferReceived(byte[]) -> onBufferReceived
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onEvent(int,android.os.Bundle) -> onEvent
com.iflytek.cloud.d.a.j -> com.iflytek.cloud.d.a.j:
    boolean f -> f
    void a(com.iflytek.cloud.WakeuperListener) -> a
    int a(byte[],int,int) -> a
    void e() -> e
    void cancel(boolean) -> cancel
    boolean f() -> f
    android.content.Context a(com.iflytek.cloud.d.a.j) -> a
    boolean b(com.iflytek.cloud.d.a.j) -> b
com.iflytek.cloud.d.a.j$a -> com.iflytek.cloud.d.a.j$a:
    com.iflytek.cloud.WakeuperListener b -> b
    android.os.Handler c -> c
    com.iflytek.cloud.d.a.j a -> a
    void onResult(com.iflytek.cloud.WakeuperResult) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void a() -> a
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    com.iflytek.cloud.WakeuperListener a(com.iflytek.cloud.d.a.j$a) -> a
com.iflytek.cloud.d.a.k -> com.iflytek.cloud.d.a.k:
    com.iflytek.cloud.d.a.j$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.e -> com.iflytek.cloud.e:
    com.iflytek.cloud.SpeechRecognizer a -> a
    com.iflytek.cloud.SpeechRecognizer$a b -> b
    void onVolumeChanged(int) -> onVolumeChanged
    void onError(int) -> onError
    void onEndOfSpeech() -> onEndOfSpeech
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onResult(com.iflytek.speech.RecognizerResult,boolean) -> onResult
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.f -> com.iflytek.cloud.f:
    com.iflytek.cloud.SpeechRecognizer$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.g -> com.iflytek.cloud.g:
    com.iflytek.cloud.SpeechSynthesizer a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.h -> com.iflytek.cloud.h:
    com.iflytek.cloud.SpeechSynthesizer a -> a
    com.iflytek.cloud.SpeechSynthesizer$a b -> b
    void onSpeakResumed() -> onSpeakResumed
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakBegin() -> onSpeakBegin
    void onCompleted(int) -> onCompleted
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.i -> com.iflytek.cloud.i:
    com.iflytek.cloud.SpeechSynthesizer$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.j -> com.iflytek.cloud.j:
    com.iflytek.cloud.SpeechUnderstander a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.k -> com.iflytek.cloud.k:
    com.iflytek.cloud.SpeechUnderstander a -> a
    com.iflytek.cloud.SpeechUnderstander$a b -> b
    void onVolumeChanged(int) -> onVolumeChanged
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
    void onEndOfSpeech() -> onEndOfSpeech
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.l -> com.iflytek.cloud.l:
    com.iflytek.cloud.SpeechUnderstander$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.m -> com.iflytek.cloud.m:
    com.iflytek.cloud.TextUnderstander a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.n -> com.iflytek.cloud.n:
    com.iflytek.cloud.TextUnderstander a -> a
    com.iflytek.cloud.TextUnderstander$a b -> b
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
com.iflytek.cloud.o -> com.iflytek.cloud.o:
    com.iflytek.cloud.TextUnderstander$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.p -> com.iflytek.cloud.p:
    com.iflytek.cloud.UnderstanderResult a(android.os.Parcel) -> a
    com.iflytek.cloud.UnderstanderResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.q -> com.iflytek.cloud.q:
    com.iflytek.cloud.WakeuperResult a(android.os.Parcel) -> a
    com.iflytek.cloud.WakeuperResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.resource.Resource -> com.iflytek.cloud.resource.Resource:
    java.util.Locale a -> a
    int TEXT_POWER_LINK -> TEXT_POWER_LINK
    int TEXT_HELP_LINK -> TEXT_HELP_LINK
    int TEXT_KNOW -> TEXT_KNOW
    int TEXT_DETAIL -> TEXT_DETAIL
    int TEXT_CANCEL -> TEXT_CANCEL
    int TEXT_STOP -> TEXT_STOP
    int TEXT_SET -> TEXT_SET
    int TEXT_MORE -> TEXT_MORE
    int TEXT_RETRY -> TEXT_RETRY
    int TEXT_AGAIN -> TEXT_AGAIN
    int TEXT_PLAYBACK -> TEXT_PLAYBACK
    int TEXT_RETRIEVE -> TEXT_RETRIEVE
    int TEXT_HELP_SMS -> TEXT_HELP_SMS
    int TEXT_HELP_RECO -> TEXT_HELP_RECO
    int TITLE_HELP -> TITLE_HELP
    int TITLE_CONNECTING -> TITLE_CONNECTING
    int TITLE_RECORDING -> TITLE_RECORDING
    int TITLE_RECOGNIZE_WAITING -> TITLE_RECOGNIZE_WAITING
    int TITLE_AUDIO_REQUEST -> TITLE_AUDIO_REQUEST
    int TITLE_ERROR -> TITLE_ERROR
    int TITLE_AUDIO_PLAYING -> TITLE_AUDIO_PLAYING
    int TITLE_DATA_UPLOAD -> TITLE_DATA_UPLOAD
    int TAG_ERROR_CODE -> TAG_ERROR_CODE
    int TAG_ERROR_UNKNOWN -> TAG_ERROR_UNKNOWN
    void setUILanguage(java.util.Locale) -> setUILanguage
    java.lang.String getLanguage() -> getLanguage
    boolean matchLanguage(java.lang.String) -> matchLanguage
    boolean a(java.lang.String) -> a
    void setTitle(int,java.lang.String) -> setTitle
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getText(int) -> getText
    void setText(int,java.lang.String) -> setText
    java.lang.String getErrorDescription(int) -> getErrorDescription
    void setErrorDescription(int,java.lang.String) -> setErrorDescription
    java.lang.String getErrorTag(int) -> getErrorTag
com.iflytek.cloud.resource.a -> com.iflytek.cloud.resource.a:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.iflytek.cloud.resource.b -> com.iflytek.cloud.resource.b:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.iflytek.cloud.resource.c -> com.iflytek.cloud.resource.c:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.iflytek.cloud.ui.RecognizerDialog -> com.iflytek.cloud.ui.RecognizerDialog:
    void setListener(com.iflytek.cloud.ui.RecognizerDialogListener) -> setListener
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void setUILanguage(java.util.Locale) -> setUILanguage
    void show() -> show
    void dismiss() -> dismiss
com.iflytek.cloud.ui.RecognizerDialogListener -> com.iflytek.cloud.ui.RecognizerDialogListener:
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
com.iflytek.cloud.ui.a -> com.iflytek.cloud.ui.a:
    android.widget.LinearLayout d -> d
    com.iflytek.cloud.ui.a.f e -> e
    android.view.animation.RotateAnimation f -> f
    com.iflytek.cloud.SpeechRecognizer g -> g
    com.iflytek.cloud.ui.RecognizerDialogListener h -> h
    long i -> i
    int a -> a
    com.iflytek.cloud.RecognizerListener j -> j
    int k -> k
    void a() -> a
    void a(com.iflytek.cloud.ui.RecognizerDialogListener) -> a
    void a(java.lang.String,java.lang.String) -> a
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void a(com.iflytek.cloud.SpeechError) -> a
    void a(android.widget.TextView,com.iflytek.cloud.SpeechError) -> a
    void k() -> k
    void onClick(android.view.View) -> onClick
    void b() -> b
    void c() -> c
    boolean d() -> d
    int a(com.iflytek.cloud.ui.a) -> a
    com.iflytek.cloud.ui.a.f b(com.iflytek.cloud.ui.a) -> b
    void c(com.iflytek.cloud.ui.a) -> c
    com.iflytek.cloud.ui.RecognizerDialogListener d(com.iflytek.cloud.ui.a) -> d
    boolean e(com.iflytek.cloud.ui.a) -> e
    void a(com.iflytek.cloud.ui.a,com.iflytek.cloud.SpeechError) -> a
com.iflytek.cloud.ui.a$a -> com.iflytek.cloud.ui.a$a:
    java.lang.String b -> b
    com.iflytek.cloud.ui.a a -> a
    void onClick(android.view.View) -> onClick
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.iflytek.cloud.ui.a.a -> com.iflytek.cloud.ui.a.a:
    java.util.HashMap e -> e
    java.util.HashMap f -> f
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int[] a() -> a
    int[] b() -> b
    java.io.InputStream b(android.content.Context,java.lang.String) -> b
    android.view.View a(android.content.Context,java.lang.String,android.view.ViewGroup) -> a
    android.graphics.drawable.Drawable a(android.content.Context,java.lang.String) -> a
    android.graphics.drawable.Drawable c(android.content.Context,java.lang.String) -> c
com.iflytek.cloud.ui.a.b -> com.iflytek.cloud.ui.a.b:
    int a -> a
    android.graphics.drawable.Drawable a(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options) -> a
    android.graphics.Bitmap a(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options) -> a
    android.graphics.drawable.Drawable a(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String) -> a
com.iflytek.cloud.ui.a.c -> com.iflytek.cloud.ui.a.c:
    com.iflytek.cloud.ui.a.e a -> a
    com.iflytek.cloud.ui.a.c$a b -> b
    void onCreate(android.os.Bundle) -> onCreate
    void show() -> show
    void dismiss() -> dismiss
    boolean destroy() -> destroy
com.iflytek.cloud.ui.a.c$a -> com.iflytek.cloud.ui.a.c$a:
    void a() -> a
com.iflytek.cloud.ui.a.d -> com.iflytek.cloud.ui.a.d:
    com.iflytek.cloud.ui.a.c a -> a
    void a() -> a
com.iflytek.cloud.ui.a.e -> com.iflytek.cloud.ui.a.e:
    com.iflytek.cloud.ui.a.c$a a -> a
    boolean b -> b
    boolean c -> c
    void e() -> e
    void a(com.iflytek.cloud.ui.a.c$a) -> a
    void f() -> f
    void b() -> b
    void c() -> c
    boolean a(android.view.ViewGroup) -> a
    boolean d() -> d
com.iflytek.cloud.ui.a.f -> com.iflytek.cloud.ui.a.f:
    android.graphics.drawable.Drawable b -> b
    android.graphics.drawable.Drawable c -> c
    android.graphics.Path a -> a
    void a(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void finalize() -> finalize
    void onMeasure(int,int) -> onMeasure
com.iflytek.cloud.ui.b -> com.iflytek.cloud.ui.b:
    com.iflytek.cloud.ui.a a -> a
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onVolumeChanged(int) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.util.ContactManager -> com.iflytek.cloud.util.ContactManager:
    com.iflytek.cloud.util.ContactManager getManager() -> getManager
    com.iflytek.cloud.util.ContactManager createManager(android.content.Context,com.iflytek.cloud.util.ContactManager$ContactListener) -> createManager
    java.lang.String queryAllContactsName() -> queryAllContactsName
    void asyncQueryAllContactsName() -> asyncQueryAllContactsName
com.iflytek.cloud.util.ContactManager$ContactListener -> com.iflytek.cloud.util.ContactManager$ContactListener:
    void onContactQueryFinish(java.lang.String,boolean) -> onContactQueryFinish
com.iflytek.cloud.util.ResourceUtil -> com.iflytek.cloud.util.ResourceUtil:
    java.lang.String ENGINE_START -> ENGINE_START
    java.lang.String ENGINE_DESTROY -> ENGINE_DESTROY
    java.lang.String ASR_RES_PATH -> ASR_RES_PATH
    java.lang.String GRM_BUILD_PATH -> GRM_BUILD_PATH
    java.lang.String TTS_RES_PATH -> TTS_RES_PATH
    java.lang.String IVW_RES_PATH -> IVW_RES_PATH
    java.lang.String generateResourcePath(android.content.Context,com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE,java.lang.String) -> generateResourcePath
    java.lang.String a(android.content.Context,com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE -> com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE:
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE assets -> assets
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE res -> res
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE path -> path
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE[] a -> a
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE[] values() -> values
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.util.UserWords -> com.iflytek.cloud.util.UserWords:
    java.util.Hashtable a -> a
    boolean hasKey(java.lang.String) -> hasKey
    boolean putWord(java.lang.String) -> putWord
    boolean putWord(java.lang.String,java.lang.String) -> putWord
    boolean putWords(java.util.ArrayList) -> putWords
    boolean putWords(java.lang.String,java.util.ArrayList) -> putWords
    boolean a(java.util.ArrayList,java.lang.String) -> a
    boolean a(java.util.ArrayList,java.util.ArrayList) -> a
    java.util.ArrayList getWords() -> getWords
    java.util.ArrayList getKeys() -> getKeys
    java.util.ArrayList getWords(java.lang.String) -> getWords
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String toString() -> toString
com.iflytek.cloud.util.a.a -> com.iflytek.cloud.util.a.a:
    com.iflytek.cloud.util.a.c.a b -> b
    android.content.Context a -> a
    java.lang.String[] c -> c
    java.lang.String[] d -> d
    java.util.HashMap e -> e
    java.util.HashMap f -> f
    java.util.List g -> g
    java.util.HashMap h -> h
    java.util.HashMap i -> i
    java.lang.String[] a() -> a
    void a(int) -> a
    void b() -> b
com.iflytek.cloud.util.a.a.a -> com.iflytek.cloud.util.a.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String a(com.iflytek.cloud.util.a.a.a,java.lang.String) -> a
    java.lang.String b(com.iflytek.cloud.util.a.a.a,java.lang.String) -> b
    java.lang.String c(com.iflytek.cloud.util.a.a.a,java.lang.String) -> c
    java.lang.String d(com.iflytek.cloud.util.a.a.a,java.lang.String) -> d
    java.lang.String e(com.iflytek.cloud.util.a.a.a,java.lang.String) -> e
    java.lang.String f(com.iflytek.cloud.util.a.a.a,java.lang.String) -> f
    java.lang.String g(com.iflytek.cloud.util.a.a.a,java.lang.String) -> g
com.iflytek.cloud.util.a.a.b -> com.iflytek.cloud.util.a.a.b:
    com.iflytek.cloud.util.a.a.a a(android.os.Parcel) -> a
    com.iflytek.cloud.util.a.a.a[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.util.a.b -> com.iflytek.cloud.util.a.b:
    com.iflytek.cloud.util.a.b a -> a
    android.content.Context b -> b
    int c -> c
    com.iflytek.cloud.util.a.c.a d -> d
    com.iflytek.cloud.util.a.a e -> e
    com.iflytek.cloud.util.a.b$b f -> f
    com.iflytek.cloud.util.a.b$a g -> g
    android.os.HandlerThread h -> h
    com.iflytek.cloud.util.ContactManager$ContactListener i -> i
    android.os.Handler j -> j
    long k -> k
    long l -> l
    com.iflytek.cloud.util.a.b a() -> a
    com.iflytek.cloud.util.a.b a(android.content.Context,com.iflytek.cloud.util.ContactManager$ContactListener) -> a
    java.lang.String queryAllContactsName() -> queryAllContactsName
    void asyncQueryAllContactsName() -> asyncQueryAllContactsName
    void b() -> b
    void c() -> c
    void a(com.iflytek.cloud.util.a.b) -> a
    void b(com.iflytek.cloud.util.a.b) -> b
    long c(com.iflytek.cloud.util.a.b) -> c
    long a(com.iflytek.cloud.util.a.b,long) -> a
    long d(com.iflytek.cloud.util.a.b) -> d
    long b(com.iflytek.cloud.util.a.b,long) -> b
com.iflytek.cloud.util.a.b$a -> com.iflytek.cloud.util.a.b$a:
    com.iflytek.cloud.util.a.b a -> a
    void onChange(boolean) -> onChange
com.iflytek.cloud.util.a.b$b -> com.iflytek.cloud.util.a.b$b:
    com.iflytek.cloud.util.a.b a -> a
    void onChange(boolean) -> onChange
com.iflytek.cloud.util.a.b.a -> com.iflytek.cloud.util.a.b.a:
    java.lang.String[] d -> d
    java.lang.String[] e -> e
    java.lang.String[] f -> f
    java.lang.String[] g -> g
    java.lang.String[] h -> h
    java.lang.String[] i -> i
    java.lang.String[] j -> j
    android.net.Uri a() -> a
    java.lang.String[] b() -> b
    java.lang.String c() -> c
com.iflytek.cloud.util.a.b.b -> com.iflytek.cloud.util.a.b.b:
    java.lang.String[] d -> d
    java.lang.String[] e -> e
    java.lang.String[] f -> f
    java.lang.String[] g -> g
    java.lang.String[] h -> h
    java.lang.String[] i -> i
    java.lang.String[] j -> j
    android.net.Uri a() -> a
    java.lang.String[] b() -> b
    java.lang.String c() -> c
com.iflytek.cloud.util.a.c -> com.iflytek.cloud.util.a.c:
    com.iflytek.cloud.util.a.b a -> a
    void run() -> run
com.iflytek.cloud.util.a.c.a -> com.iflytek.cloud.util.a.c.a:
    java.lang.String[] a -> a
    android.content.Context b -> b
    java.lang.String[] c -> c
    java.lang.String[] b() -> b
    java.lang.String c() -> c
    java.util.HashMap d() -> d
    java.util.List e() -> e
    android.net.Uri f() -> f
    android.net.Uri a() -> a
    java.util.HashMap a(int) -> a
    void a(android.content.Context) -> a
com.iflytek.cloud.util.a.d -> com.iflytek.cloud.util.a.d:
    java.lang.String a(java.lang.String) -> a
    int a(java.lang.String,java.lang.String,boolean) -> a
com.iflytek.cloud.util.a.e -> com.iflytek.cloud.util.a.e:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String[],char) -> a
com.iflytek.common.LaunchService -> com.iflytek.common.LaunchService:
    com.iflytek.common.a.d a -> a
    long b -> b
    android.content.BroadcastReceiver c -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onStart(android.content.Intent,int) -> onStart
    void onCreate() -> onCreate
    void a() -> a
    void onDestroy() -> onDestroy
    void b() -> b
    void a(com.iflytek.common.LaunchService) -> a
com.iflytek.common.a -> com.iflytek.common.a:
    com.iflytek.common.b.a a -> a
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(boolean) -> a
com.iflytek.common.a.a -> com.iflytek.common.a.a:
    java.lang.String b -> b
    com.iflytek.common.a.b c -> c
    boolean a -> a
    void run() -> run
    java.lang.String a(byte[]) -> a
    void a(java.io.InputStream,java.io.OutputStream) -> a
com.iflytek.common.a.b -> com.iflytek.common.a.b:
    void a(java.lang.String,int) -> a
com.iflytek.common.a.c -> com.iflytek.common.a.c:
    com.iflytek.common.a.d a -> a
    int b -> b
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void c(android.content.Context) -> c
    void a(android.content.Context,android.content.pm.ResolveInfo) -> a
    void d(android.content.Context) -> d
    void b(android.content.Context) -> b
com.iflytek.common.a.d -> com.iflytek.common.a.d:
    com.iflytek.common.a.d a -> a
    com.iflytek.common.c.d b -> b
    com.iflytek.common.a.a c -> c
    android.content.Context d -> d
    com.iflytek.common.a.e e -> e
    com.iflytek.common.c.a f -> f
    com.iflytek.common.a.b g -> g
    com.iflytek.common.a.d a(android.content.Context) -> a
    void a() -> a
    void a(long) -> a
    boolean b() -> b
    boolean a(java.lang.String) -> a
    long c() -> c
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,int) -> a
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    void a(com.iflytek.common.a.d,java.lang.String,int) -> a
com.iflytek.common.a.e -> com.iflytek.common.a.e:
    long a -> a
    long b -> b
    java.lang.String[] c -> c
    long d -> d
    long e -> e
    java.lang.String f -> f
    com.iflytek.common.c.d g -> g
    long a() -> a
    long b() -> b
    java.lang.String[] c() -> c
    long d() -> d
    long e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    void a(long) -> a
    void b(long) -> b
    void a(java.lang.String[]) -> a
    void c(long) -> c
    void d(long) -> d
    void a(java.lang.String) -> a
com.iflytek.common.a.f -> com.iflytek.common.a.f:
    android.content.Context a -> a
    void run() -> run
com.iflytek.common.a.g -> com.iflytek.common.a.g:
    com.iflytek.common.a.d a -> a
    void a(java.lang.String,int) -> a
com.iflytek.common.b -> com.iflytek.common.b:
    com.iflytek.common.LaunchService a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.iflytek.common.b.a -> com.iflytek.common.b.a:
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
com.iflytek.common.c -> com.iflytek.common.c:
    com.iflytek.common.b.a a -> a
    com.iflytek.common.b.a a() -> a
com.iflytek.common.c.a -> com.iflytek.common.c.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.telephony.TelephonyManager e -> e
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
com.iflytek.common.c.b -> com.iflytek.common.c.b:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(byte[]) -> a
com.iflytek.common.c.c -> com.iflytek.common.c.c:
    boolean a -> a
    void a(boolean) -> a
    int a(java.lang.String,java.lang.String) -> a
    int a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    int b(java.lang.String,java.lang.String) -> b
    int b(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(long) -> a
com.iflytek.common.c.d -> com.iflytek.common.c.d:
    android.content.SharedPreferences a -> a
    void a(java.lang.String,long) -> a
    void a(java.lang.String,java.lang.String) -> a
    long b(java.lang.String,long) -> b
    java.lang.String b(java.lang.String,java.lang.String) -> b
com.iflytek.common.c.e -> com.iflytek.common.c.e:
    java.util.concurrent.BlockingQueue b -> b
    java.util.concurrent.ThreadFactory c -> c
    java.util.concurrent.ExecutorService a -> a
com.iflytek.common.c.f -> com.iflytek.common.c.f:
    java.util.concurrent.atomic.AtomicInteger a -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.iflytek.msc.MSC -> com.iflytek.msc.MSC:
    boolean a -> a
    boolean loadLibrary(java.lang.String) -> loadLibrary
    boolean isLoaded() -> isLoaded
    int DebugLog(boolean) -> DebugLog
    int QTTSInit(byte[]) -> QTTSInit
    char[] QTTSSessionBegin(byte[],com.iflytek.msc.MSCSessionInfo) -> QTTSSessionBegin
    int QTTSTextPut(char[],byte[]) -> QTTSTextPut
    byte[] QTTSAudioGet(char[],com.iflytek.msc.MSCSessionInfo) -> QTTSAudioGet
    int QTTSGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QTTSGetParam
    char[] QTTSAudioInfo(char[]) -> QTTSAudioInfo
    int QTTSSessionEnd(char[],byte[]) -> QTTSSessionEnd
    int QTTSFini() -> QTTSFini
    int QISRInit(byte[]) -> QISRInit
    char[] QISRSessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISRSessionBegin
    int QISRRegisterNotify(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> QISRRegisterNotify
    int QISRBuildGrammar(byte[],byte[],int,byte[],java.lang.String,java.lang.Object) -> QISRBuildGrammar
    int QISRUpdateLexicon(byte[],byte[],int,byte[],java.lang.String,java.lang.Object) -> QISRUpdateLexicon
    int QISRGrammarActivate(char[],byte[],byte[]) -> QISRGrammarActivate
    int QISRGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISRGetParam
    int QISRSetParam(char[],byte[],byte[]) -> QISRSetParam
    int QISRAudioWrite(char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QISRAudioWrite
    byte[] QISRUploadData(char[],byte[],byte[],int,byte[],com.iflytek.msc.MSCSessionInfo) -> QISRUploadData
    byte[] QISRGetResult(char[],com.iflytek.msc.MSCSessionInfo) -> QISRGetResult
    int QISRLogEvent(char[],byte[],byte[]) -> QISRLogEvent
    int QISRSessionEnd(char[],byte[]) -> QISRSessionEnd
    int QISRFini() -> QISRFini
    int QHCRInit(byte[]) -> QHCRInit
    char[] QHCRSessionBegin(byte[],com.iflytek.msc.MSCSessionInfo) -> QHCRSessionBegin
    int QHCRDataWrite(char[],byte[],byte[],int,int) -> QHCRDataWrite
    byte[] QHCRGetResult(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QHCRGetResult
    int QHCRLogEvent(char[],byte[],byte[]) -> QHCRLogEvent
    int QHCRSessionEnd(char[],byte[]) -> QHCRSessionEnd
    int QHCRFini() -> QHCRFini
    int QISVInit(byte[]) -> QISVInit
    char[] QISVSessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISVSessionBegin
    int QISVAudioWrite(char[],char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QISVAudioWrite
    int QISVGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISVGetParam
    byte[] QISVGetResult(char[],char[],com.iflytek.msc.MSCSessionInfo) -> QISVGetResult
    int QISVSessionEnd(char[],byte[]) -> QISVSessionEnd
    char[] QISVQueDelModel(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISVQueDelModel
    int QISVQueDelModelRelease(char[]) -> QISVQueDelModelRelease
    int QISVFini() -> QISVFini
    int QMSPLogin(byte[],byte[],byte[]) -> QMSPLogin
    int UMSPLogin(byte[],byte[],byte[],java.lang.Object) -> UMSPLogin
    int QMSPSetParam(byte[],byte[]) -> QMSPSetParam
    int QMSPGetParam(byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPGetParam
    byte[] QMSPUploadData(byte[],byte[],int,byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPUploadData
    byte[] QMSPDownloadData(byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPDownloadData
    int QMSPDownload(byte[],byte[],java.lang.Object) -> QMSPDownload
    byte[] QMSPSearch(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPSearch
    int QMSPLogOut() -> QMSPLogOut
    int QMSPRegisterNotify(java.lang.String,java.lang.String) -> QMSPRegisterNotify
    int QISEInit(byte[]) -> QISEInit
    char[] QISESessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISESessionBegin
    int QISETextPut(char[],byte[],byte[]) -> QISETextPut
    int QISEAudioWrite(char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QISEAudioWrite
    byte[] QISEGetResult(char[],com.iflytek.msc.MSCSessionInfo) -> QISEGetResult
    int QISEGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISEGetParam
    int QISESessionEnd(char[],byte[]) -> QISESessionEnd
    int QISEFini() -> QISEFini
    char[] QIVWSessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QIVWSessionBegin
    int QIVWRegisterNotify(char[],java.lang.String,java.lang.Object) -> QIVWRegisterNotify
    int QIVWAudioWrite(char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QIVWAudioWrite
    int QIVWSessionEnd(char[],byte[]) -> QIVWSessionEnd
    int getFileDescriptorFD(java.io.FileDescriptor) -> getFileDescriptorFD
com.iflytek.msc.MSCSessionInfo -> com.iflytek.msc.MSCSessionInfo:
    int errorcode -> errorcode
    int epstatues -> epstatues
    int rsltstatus -> rsltstatus
    int sesstatus -> sesstatus
    byte[] buffer -> buffer
    int buflen -> buflen
com.iflytek.speech.GrammarListener -> com.iflytek.speech.GrammarListener:
    void onBuildFinish(java.lang.String,int) -> onBuildFinish
com.iflytek.speech.GrammarListener$Stub -> com.iflytek.speech.GrammarListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onBuildFinish -> TRANSACTION_onBuildFinish
    com.iflytek.speech.GrammarListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.GrammarListener$Stub$Proxy -> com.iflytek.speech.GrammarListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onBuildFinish(java.lang.String,int) -> onBuildFinish
com.iflytek.speech.ISpeechModule -> com.iflytek.speech.ISpeechModule:
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    android.content.Intent getIntent() -> getIntent
    boolean destory() -> destory
    boolean isAvailable() -> isAvailable
com.iflytek.speech.LexiconListener -> com.iflytek.speech.LexiconListener:
    void onLexiconUpdated(java.lang.String,int) -> onLexiconUpdated
com.iflytek.speech.LexiconListener$Stub -> com.iflytek.speech.LexiconListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onLexiconUpdated -> TRANSACTION_onLexiconUpdated
    com.iflytek.speech.LexiconListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.LexiconListener$Stub$Proxy -> com.iflytek.speech.LexiconListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onLexiconUpdated(java.lang.String,int) -> onLexiconUpdated
com.iflytek.speech.RecognizerListener -> com.iflytek.speech.RecognizerListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.RecognizerResult,boolean) -> onResult
    void onError(int) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.RecognizerListener$Stub -> com.iflytek.speech.RecognizerListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onVolumeChanged -> TRANSACTION_onVolumeChanged
    int TRANSACTION_onBeginOfSpeech -> TRANSACTION_onBeginOfSpeech
    int TRANSACTION_onEndOfSpeech -> TRANSACTION_onEndOfSpeech
    int TRANSACTION_onResult -> TRANSACTION_onResult
    int TRANSACTION_onError -> TRANSACTION_onError
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    com.iflytek.speech.RecognizerListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.RecognizerListener$Stub$Proxy -> com.iflytek.speech.RecognizerListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.RecognizerResult,boolean) -> onResult
    void onError(int) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.RecognizerResult -> com.iflytek.speech.RecognizerResult:
    java.lang.String json -> json
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    java.lang.String getResultString() -> getResultString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.RecognizerResult$1 -> com.iflytek.speech.RecognizerResult$1:
    com.iflytek.speech.RecognizerResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.iflytek.speech.RecognizerResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.SpeakerVerifierAidl -> com.iflytek.speech.SpeakerVerifierAidl:
    java.lang.String TAG -> TAG
    java.lang.String USER_NAME -> USER_NAME
    java.lang.String IVP_SENTENCE_CNT -> IVP_SENTENCE_CNT
    java.lang.String VID -> VID
    java.lang.String IVP_PARAM_CONSISTTHRESHOLD -> IVP_PARAM_CONSISTTHRESHOLD
    java.lang.String IVP_PARAM_DTW_CHECK_THRESHOLD -> IVP_PARAM_DTW_CHECK_THRESHOLD
    int register(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> register
    int verify(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> verify
    int identify(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> identify
    int getPasswordList(android.content.Context,com.iflytek.speech.SpeakerVerifierAidl$DownloadListener,java.lang.String) -> getPasswordList
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    void endSpeak() -> endSpeak
    void stopSpeak() -> stopSpeak
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.SpeakerVerifierAidl$DownloadListener -> com.iflytek.speech.SpeakerVerifierAidl$DownloadListener:
    void onData(java.util.ArrayList) -> onData
    void onError(int) -> onError
com.iflytek.speech.SpeakerVerifierAidl$PassWord -> com.iflytek.speech.SpeakerVerifierAidl$PassWord:
    java.lang.String pwdt -> pwdt
    java.lang.String pwid -> pwid
    java.lang.String pwtext -> pwtext
    com.iflytek.speech.SpeakerVerifierAidl this$0 -> this$0
com.iflytek.speech.SpeechComponent -> com.iflytek.speech.SpeechComponent:
    java.lang.String mPackageName -> mPackageName
    java.util.ArrayList mEngines -> mEngines
    java.lang.String getPackageName() -> getPackageName
    java.util.ArrayList getEngines() -> getEngines
    void addEngine(java.lang.String) -> addEngine
    boolean isEngineAvaible(java.lang.String) -> isEngineAvaible
com.iflytek.speech.SpeechModuleAidl -> com.iflytek.speech.SpeechModuleAidl:
    java.lang.Object mSynLock -> mSynLock
    android.os.IInterface mService -> mService
    android.content.Context mContext -> mContext
    android.content.ServiceConnection mConnection -> mConnection
    com.iflytek.cloud.InitListener mInitListener -> mInitListener
    java.lang.String mBindAction -> mBindAction
    java.util.HashMap mParams -> mParams
    boolean userDestroy -> userDestroy
    android.os.Handler mUiHandler -> mUiHandler
    void bindService() -> bindService
    android.os.IInterface getService(android.os.IBinder) -> getService
    boolean isAvailable() -> isAvailable
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    android.content.Intent getIntent() -> getIntent
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    boolean destory() -> destory
    java.lang.String getTag() -> getTag
    android.os.IInterface access$000(com.iflytek.speech.SpeechModuleAidl,android.os.IBinder) -> access$000
    com.iflytek.cloud.InitListener access$100(com.iflytek.speech.SpeechModuleAidl) -> access$100
    android.os.Handler access$200(com.iflytek.speech.SpeechModuleAidl) -> access$200
    boolean access$300(com.iflytek.speech.SpeechModuleAidl) -> access$300
    void access$400(com.iflytek.speech.SpeechModuleAidl) -> access$400
com.iflytek.speech.SpeechModuleAidl$1 -> com.iflytek.speech.SpeechModuleAidl$1:
    com.iflytek.speech.SpeechModuleAidl this$0 -> this$0
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.iflytek.speech.SpeechModuleAidl$2 -> com.iflytek.speech.SpeechModuleAidl$2:
    com.iflytek.speech.SpeechModuleAidl this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.speech.SpeechRecognizerAidl -> com.iflytek.speech.SpeechRecognizerAidl:
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    int startListening(com.iflytek.speech.RecognizerListener) -> startListening
    int stopListening(com.iflytek.speech.RecognizerListener) -> stopListening
    int cancel(com.iflytek.speech.RecognizerListener) -> cancel
    boolean destory() -> destory
    boolean isListening() -> isListening
    int buildGrammar(java.lang.String,java.lang.String,com.iflytek.speech.GrammarListener) -> buildGrammar
    int updateLexicon(java.lang.String,java.lang.String,com.iflytek.speech.LexiconListener) -> updateLexicon
    int writeAudio(byte[],int,int) -> writeAudio
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.SpeechSynthesizerAidl -> com.iflytek.speech.SpeechSynthesizerAidl:
    int synthesizeToUrl(java.lang.String,com.iflytek.speech.SynthesizerListener) -> synthesizeToUrl
    int startSpeaking(java.lang.String,com.iflytek.speech.SynthesizerListener) -> startSpeaking
    int pauseSpeaking(com.iflytek.speech.SynthesizerListener) -> pauseSpeaking
    int resumeSpeaking(com.iflytek.speech.SynthesizerListener) -> resumeSpeaking
    int stopSpeaking(com.iflytek.speech.SynthesizerListener) -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.SpeechUnderstanderAidl -> com.iflytek.speech.SpeechUnderstanderAidl:
    int startUnderstanding(com.iflytek.speech.SpeechUnderstanderListener) -> startUnderstanding
    int stopUnderstanding(com.iflytek.speech.SpeechUnderstanderListener) -> stopUnderstanding
    boolean isUnderstanding() -> isUnderstanding
    int cancel(com.iflytek.speech.SpeechUnderstanderListener) -> cancel
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    int writeAudio(byte[],int,int) -> writeAudio
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.SpeechUnderstanderListener -> com.iflytek.speech.SpeechUnderstanderListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.SpeechUnderstanderListener$Stub -> com.iflytek.speech.SpeechUnderstanderListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onVolumeChanged -> TRANSACTION_onVolumeChanged
    int TRANSACTION_onBeginOfSpeech -> TRANSACTION_onBeginOfSpeech
    int TRANSACTION_onEndOfSpeech -> TRANSACTION_onEndOfSpeech
    int TRANSACTION_onResult -> TRANSACTION_onResult
    int TRANSACTION_onError -> TRANSACTION_onError
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    com.iflytek.speech.SpeechUnderstanderListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.SpeechUnderstanderListener$Stub$Proxy -> com.iflytek.speech.SpeechUnderstanderListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.SynthesizeToUrlListener -> com.iflytek.speech.SynthesizeToUrlListener:
    void onSynthesizeCompleted(java.lang.String,int) -> onSynthesizeCompleted
com.iflytek.speech.SynthesizeToUrlListener$Stub -> com.iflytek.speech.SynthesizeToUrlListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onSynthesizeCompleted -> TRANSACTION_onSynthesizeCompleted
    com.iflytek.speech.SynthesizeToUrlListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.SynthesizeToUrlListener$Stub$Proxy -> com.iflytek.speech.SynthesizeToUrlListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onSynthesizeCompleted(java.lang.String,int) -> onSynthesizeCompleted
com.iflytek.speech.SynthesizerListener -> com.iflytek.speech.SynthesizerListener:
    void onSpeakBegin() -> onSpeakBegin
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onCompleted(int) -> onCompleted
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.SynthesizerListener$Stub -> com.iflytek.speech.SynthesizerListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onSpeakBegin -> TRANSACTION_onSpeakBegin
    int TRANSACTION_onSpeakPaused -> TRANSACTION_onSpeakPaused
    int TRANSACTION_onSpeakResumed -> TRANSACTION_onSpeakResumed
    int TRANSACTION_onCompleted -> TRANSACTION_onCompleted
    int TRANSACTION_onSpeakProgress -> TRANSACTION_onSpeakProgress
    int TRANSACTION_onBufferProgress -> TRANSACTION_onBufferProgress
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    com.iflytek.speech.SynthesizerListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.SynthesizerListener$Stub$Proxy -> com.iflytek.speech.SynthesizerListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onSpeakBegin() -> onSpeakBegin
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onCompleted(int) -> onCompleted
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.TextUnderstanderAidl -> com.iflytek.speech.TextUnderstanderAidl:
    java.lang.String SCENE -> SCENE
    java.lang.String TEXT -> TEXT
    boolean isUnderstanding() -> isUnderstanding
    int cancel(com.iflytek.speech.TextUnderstanderListener) -> cancel
    int understandText(java.lang.String,com.iflytek.speech.TextUnderstanderListener) -> understandText
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.TextUnderstanderListener -> com.iflytek.speech.TextUnderstanderListener:
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
com.iflytek.speech.TextUnderstanderListener$Stub -> com.iflytek.speech.TextUnderstanderListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onResult -> TRANSACTION_onResult
    int TRANSACTION_onError -> TRANSACTION_onError
    com.iflytek.speech.TextUnderstanderListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.TextUnderstanderListener$Stub$Proxy -> com.iflytek.speech.TextUnderstanderListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
com.iflytek.speech.UnderstanderResult -> com.iflytek.speech.UnderstanderResult:
    java.lang.String mXml -> mXml
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.UnderstanderResult$1 -> com.iflytek.speech.UnderstanderResult$1:
    com.iflytek.speech.UnderstanderResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.iflytek.speech.UnderstanderResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.UtilityConfig -> com.iflytek.speech.UtilityConfig:
    java.lang.String COMPONENT_URL -> COMPONENT_URL
    java.lang.String COMPONENT_PKG -> COMPONENT_PKG
    java.lang.String CHANNEL_ID -> CHANNEL_ID
    java.lang.String CHANNEL_NAME -> CHANNEL_NAME
    java.lang.String SETTINGS_ACTION_MAIN -> SETTINGS_ACTION_MAIN
    java.lang.String SETTINGS_ACTION_ASR -> SETTINGS_ACTION_ASR
    java.lang.String SETTINGS_ACTION_TTS -> SETTINGS_ACTION_TTS
    java.lang.String ACTION_SPEECH_RECOGNIZER -> ACTION_SPEECH_RECOGNIZER
    java.lang.String ACTION_SPEECH_SYNTHESIZER -> ACTION_SPEECH_SYNTHESIZER
    java.lang.String ACTION_SPEECH_UNDERSTANDER -> ACTION_SPEECH_UNDERSTANDER
    java.lang.String ACTION_TEXT_UNDERSTANDER -> ACTION_TEXT_UNDERSTANDER
    java.lang.String ACTION_SPEECH_WAKEUP -> ACTION_SPEECH_WAKEUP
    java.lang.String ACTION_SPEAKER_VERIFIER -> ACTION_SPEAKER_VERIFIER
    java.lang.String KEY_CALLER_APPID -> KEY_CALLER_APPID
    java.lang.String KEY_CALLER_NAME -> KEY_CALLER_NAME
    java.lang.String KEY_CALLER_PKG_NAME -> KEY_CALLER_PKG_NAME
    java.lang.String KEY_CALLER_VER_NAME -> KEY_CALLER_VER_NAME
    java.lang.String KEY_CALLER_VER_CODE -> KEY_CALLER_VER_CODE
    java.lang.String SDK_VER_NAME -> SDK_VER_NAME
    java.lang.String METADATA_KEY_ENGINE_TYPE -> METADATA_KEY_ENGINE_TYPE
    java.util.HashMap callerHashMap -> callerHashMap
    java.lang.String KEY_REQUEST_PACKAGE -> KEY_REQUEST_PACKAGE
    java.lang.String KEY_CHANNEL_ID -> KEY_CHANNEL_ID
    java.lang.String KEY_CHANNEL_NAME -> KEY_CHANNEL_NAME
    java.lang.String getCallerInfo(android.content.Context,java.lang.String) -> getCallerInfo
    java.lang.String getComponentUrlParam(android.content.Context) -> getComponentUrlParam
    void appendHttpParam(java.lang.StringBuffer,java.lang.String,java.lang.String) -> appendHttpParam
com.iflytek.speech.VerifierListener -> com.iflytek.speech.VerifierListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onRegister(com.iflytek.speech.VerifierResult) -> onRegister
    void onEnd(com.iflytek.speech.VerifierResult,int) -> onEnd
    void onCancel() -> onCancel
    void onError(int) -> onError
com.iflytek.speech.VerifierListener$Stub -> com.iflytek.speech.VerifierListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onVolumeChanged -> TRANSACTION_onVolumeChanged
    int TRANSACTION_onBeginOfSpeech -> TRANSACTION_onBeginOfSpeech
    int TRANSACTION_onEndOfSpeech -> TRANSACTION_onEndOfSpeech
    int TRANSACTION_onRegister -> TRANSACTION_onRegister
    int TRANSACTION_onEnd -> TRANSACTION_onEnd
    int TRANSACTION_onCancel -> TRANSACTION_onCancel
    int TRANSACTION_onError -> TRANSACTION_onError
    com.iflytek.speech.VerifierListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.VerifierListener$Stub$Proxy -> com.iflytek.speech.VerifierListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onRegister(com.iflytek.speech.VerifierResult) -> onRegister
    void onEnd(com.iflytek.speech.VerifierResult,int) -> onEnd
    void onCancel() -> onCancel
    void onError(int) -> onError
com.iflytek.speech.VerifierResult -> com.iflytek.speech.VerifierResult:
    java.lang.String json -> json
    java.lang.String sst -> sst
    boolean ret -> ret
    java.lang.String dcs -> dcs
    java.lang.String vid -> vid
    int suc -> suc
    int rgn -> rgn
    java.lang.String trs -> trs
    java.lang.String source -> source
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.VerifierResult$1 -> com.iflytek.speech.VerifierResult$1:
    com.iflytek.speech.VerifierResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.iflytek.speech.VerifierResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.Version -> com.iflytek.speech.Version:
    java.lang.String VERSION_NAME -> VERSION_NAME
    java.lang.String VERSION_CODE -> VERSION_CODE
    java.lang.String getVersionName() -> getVersionName
    java.lang.String getVersionCode() -> getVersionCode
com.iflytek.speech.VoiceWakeuperAidl -> com.iflytek.speech.VoiceWakeuperAidl:
    java.lang.String IVW_THRESHOLD -> IVW_THRESHOLD
    java.lang.String IVW_WORD_ID -> IVW_WORD_ID
    java.lang.String IVW_FILES -> IVW_FILES
    java.lang.String PROVIDER_NAME -> PROVIDER_NAME
    java.lang.String ARG_RES_PROVIDER_AUTHORITY -> ARG_RES_PROVIDER_AUTHORITY
    java.lang.String PARAMS_SEPARATE -> PARAMS_SEPARATE
    java.lang.String IVP_USER_NAME -> IVP_USER_NAME
    java.lang.String IVP_RES_ID -> IVP_RES_ID
    java.lang.String IVW_AND_IVP -> IVW_AND_IVP
    java.lang.String WAKEUP_RESULT_ID -> WAKEUP_RESULT_ID
    java.lang.String WAKEUP_RESULT_SCORE -> WAKEUP_RESULT_SCORE
    java.lang.String ARG_RES_TYPE -> ARG_RES_TYPE
    int RES_FROM_ASSETS -> RES_FROM_ASSETS
    int RES_SPECIFIED -> RES_SPECIFIED
    int RES_FROM_CLIENT -> RES_FROM_CLIENT
    int startListening(com.iflytek.speech.WakeuperListener) -> startListening
    int cancel(com.iflytek.speech.WakeuperListener) -> cancel
    boolean destroy() -> destroy
    boolean isListening() -> isListening
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.WakeuperListener -> com.iflytek.speech.WakeuperListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.WakeuperResult) -> onResult
    void onError(int) -> onError
com.iflytek.speech.WakeuperListener$Stub -> com.iflytek.speech.WakeuperListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onVolumeChanged -> TRANSACTION_onVolumeChanged
    int TRANSACTION_onBeginOfSpeech -> TRANSACTION_onBeginOfSpeech
    int TRANSACTION_onEndOfSpeech -> TRANSACTION_onEndOfSpeech
    int TRANSACTION_onResult -> TRANSACTION_onResult
    int TRANSACTION_onError -> TRANSACTION_onError
    com.iflytek.speech.WakeuperListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.WakeuperListener$Stub$Proxy -> com.iflytek.speech.WakeuperListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.WakeuperResult) -> onResult
    void onError(int) -> onError
com.iflytek.speech.WakeuperResult -> com.iflytek.speech.WakeuperResult:
    java.lang.String json -> json
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.WakeuperResult$1 -> com.iflytek.speech.WakeuperResult$1:
    com.iflytek.speech.WakeuperResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.iflytek.speech.WakeuperResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.aidl.ISpeakerVerifier -> com.iflytek.speech.aidl.ISpeakerVerifier:
    int verify(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> verify
    int register(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> register
    void endSpeak() -> endSpeak
    void stopSpeak() -> stopSpeak
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
com.iflytek.speech.aidl.ISpeakerVerifier$Stub -> com.iflytek.speech.aidl.ISpeakerVerifier$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_verify -> TRANSACTION_verify
    int TRANSACTION_register -> TRANSACTION_register
    int TRANSACTION_endSpeak -> TRANSACTION_endSpeak
    int TRANSACTION_stopSpeak -> TRANSACTION_stopSpeak
    int TRANSACTION_setParameter -> TRANSACTION_setParameter
    int TRANSACTION_getParameter -> TRANSACTION_getParameter
    com.iflytek.speech.aidl.ISpeakerVerifier asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ISpeakerVerifier$Stub$Proxy -> com.iflytek.speech.aidl.ISpeakerVerifier$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    int verify(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> verify
    int register(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> register
    void endSpeak() -> endSpeak
    void stopSpeak() -> stopSpeak
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
com.iflytek.speech.aidl.ISpeechRecognizer -> com.iflytek.speech.aidl.ISpeechRecognizer:
    void startListening(android.content.Intent,com.iflytek.speech.RecognizerListener) -> startListening
    void stopListening(com.iflytek.speech.RecognizerListener) -> stopListening
    void cancel(com.iflytek.speech.RecognizerListener) -> cancel
    boolean isListening() -> isListening
    void buildGrammar(android.content.Intent,com.iflytek.speech.GrammarListener) -> buildGrammar
    void updateLexicon(android.content.Intent,com.iflytek.speech.LexiconListener) -> updateLexicon
    void writeAudio(android.content.Intent,byte[],int,int) -> writeAudio
com.iflytek.speech.aidl.ISpeechRecognizer$Stub -> com.iflytek.speech.aidl.ISpeechRecognizer$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startListening -> TRANSACTION_startListening
    int TRANSACTION_stopListening -> TRANSACTION_stopListening
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_isListening -> TRANSACTION_isListening
    int TRANSACTION_buildGrammar -> TRANSACTION_buildGrammar
    int TRANSACTION_updateLexicon -> TRANSACTION_updateLexicon
    int TRANSACTION_writeAudio -> TRANSACTION_writeAudio
    com.iflytek.speech.aidl.ISpeechRecognizer asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ISpeechRecognizer$Stub$Proxy -> com.iflytek.speech.aidl.ISpeechRecognizer$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void startListening(android.content.Intent,com.iflytek.speech.RecognizerListener) -> startListening
    void stopListening(com.iflytek.speech.RecognizerListener) -> stopListening
    void cancel(com.iflytek.speech.RecognizerListener) -> cancel
    boolean isListening() -> isListening
    void buildGrammar(android.content.Intent,com.iflytek.speech.GrammarListener) -> buildGrammar
    void updateLexicon(android.content.Intent,com.iflytek.speech.LexiconListener) -> updateLexicon
    void writeAudio(android.content.Intent,byte[],int,int) -> writeAudio
com.iflytek.speech.aidl.ISpeechSynthesizer -> com.iflytek.speech.aidl.ISpeechSynthesizer:
    int synthesizeToUrl(android.content.Intent,com.iflytek.speech.SynthesizerListener) -> synthesizeToUrl
    int startSpeaking(android.content.Intent,com.iflytek.speech.SynthesizerListener) -> startSpeaking
    int pauseSpeaking(com.iflytek.speech.SynthesizerListener) -> pauseSpeaking
    int resumeSpeaking(com.iflytek.speech.SynthesizerListener) -> resumeSpeaking
    int stopSpeaking(com.iflytek.speech.SynthesizerListener) -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    java.lang.String getLocalSpeakerList() -> getLocalSpeakerList
com.iflytek.speech.aidl.ISpeechSynthesizer$Stub -> com.iflytek.speech.aidl.ISpeechSynthesizer$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_synthesizeToUrl -> TRANSACTION_synthesizeToUrl
    int TRANSACTION_startSpeaking -> TRANSACTION_startSpeaking
    int TRANSACTION_pauseSpeaking -> TRANSACTION_pauseSpeaking
    int TRANSACTION_resumeSpeaking -> TRANSACTION_resumeSpeaking
    int TRANSACTION_stopSpeaking -> TRANSACTION_stopSpeaking
    int TRANSACTION_isSpeaking -> TRANSACTION_isSpeaking
    int TRANSACTION_getLocalSpeakerList -> TRANSACTION_getLocalSpeakerList
    com.iflytek.speech.aidl.ISpeechSynthesizer asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ISpeechSynthesizer$Stub$Proxy -> com.iflytek.speech.aidl.ISpeechSynthesizer$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    int synthesizeToUrl(android.content.Intent,com.iflytek.speech.SynthesizerListener) -> synthesizeToUrl
    int startSpeaking(android.content.Intent,com.iflytek.speech.SynthesizerListener) -> startSpeaking
    int pauseSpeaking(com.iflytek.speech.SynthesizerListener) -> pauseSpeaking
    int resumeSpeaking(com.iflytek.speech.SynthesizerListener) -> resumeSpeaking
    int stopSpeaking(com.iflytek.speech.SynthesizerListener) -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    java.lang.String getLocalSpeakerList() -> getLocalSpeakerList
com.iflytek.speech.aidl.ISpeechUnderstander -> com.iflytek.speech.aidl.ISpeechUnderstander:
    void startUnderstanding(android.content.Intent,com.iflytek.speech.SpeechUnderstanderListener) -> startUnderstanding
    void stopUnderstanding(com.iflytek.speech.SpeechUnderstanderListener) -> stopUnderstanding
    void cancel(com.iflytek.speech.SpeechUnderstanderListener) -> cancel
    boolean isUnderstanding() -> isUnderstanding
    void writeAudio(android.content.Intent,byte[],int,int) -> writeAudio
com.iflytek.speech.aidl.ISpeechUnderstander$Stub -> com.iflytek.speech.aidl.ISpeechUnderstander$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startUnderstanding -> TRANSACTION_startUnderstanding
    int TRANSACTION_stopUnderstanding -> TRANSACTION_stopUnderstanding
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_isUnderstanding -> TRANSACTION_isUnderstanding
    int TRANSACTION_writeAudio -> TRANSACTION_writeAudio
    com.iflytek.speech.aidl.ISpeechUnderstander asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ISpeechUnderstander$Stub$Proxy -> com.iflytek.speech.aidl.ISpeechUnderstander$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void startUnderstanding(android.content.Intent,com.iflytek.speech.SpeechUnderstanderListener) -> startUnderstanding
    void stopUnderstanding(com.iflytek.speech.SpeechUnderstanderListener) -> stopUnderstanding
    void cancel(com.iflytek.speech.SpeechUnderstanderListener) -> cancel
    boolean isUnderstanding() -> isUnderstanding
    void writeAudio(android.content.Intent,byte[],int,int) -> writeAudio
com.iflytek.speech.aidl.ITextUnderstander -> com.iflytek.speech.aidl.ITextUnderstander:
    void understandText(android.content.Intent,com.iflytek.speech.TextUnderstanderListener) -> understandText
    void cancel(com.iflytek.speech.TextUnderstanderListener) -> cancel
    boolean isUnderstanding() -> isUnderstanding
com.iflytek.speech.aidl.ITextUnderstander$Stub -> com.iflytek.speech.aidl.ITextUnderstander$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_understandText -> TRANSACTION_understandText
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_isUnderstanding -> TRANSACTION_isUnderstanding
    com.iflytek.speech.aidl.ITextUnderstander asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ITextUnderstander$Stub$Proxy -> com.iflytek.speech.aidl.ITextUnderstander$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void understandText(android.content.Intent,com.iflytek.speech.TextUnderstanderListener) -> understandText
    void cancel(com.iflytek.speech.TextUnderstanderListener) -> cancel
    boolean isUnderstanding() -> isUnderstanding
com.iflytek.speech.aidl.IWakeuper -> com.iflytek.speech.aidl.IWakeuper:
    void startListening(android.content.Intent,com.iflytek.speech.WakeuperListener) -> startListening
    void stopListening(com.iflytek.speech.WakeuperListener) -> stopListening
    void cancel(com.iflytek.speech.WakeuperListener) -> cancel
    boolean isListening() -> isListening
    void destroy() -> destroy
com.iflytek.speech.aidl.IWakeuper$Stub -> com.iflytek.speech.aidl.IWakeuper$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startListening -> TRANSACTION_startListening
    int TRANSACTION_stopListening -> TRANSACTION_stopListening
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_isListening -> TRANSACTION_isListening
    int TRANSACTION_destroy -> TRANSACTION_destroy
    com.iflytek.speech.aidl.IWakeuper asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.IWakeuper$Stub$Proxy -> com.iflytek.speech.aidl.IWakeuper$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void startListening(android.content.Intent,com.iflytek.speech.WakeuperListener) -> startListening
    void stopListening(com.iflytek.speech.WakeuperListener) -> stopListening
    void cancel(com.iflytek.speech.WakeuperListener) -> cancel
    boolean isListening() -> isListening
    void destroy() -> destroy
com.lidroid.xutils.BitmapUtils -> com.lidroid.xutils.BitmapUtils:
    boolean pauseTask -> pauseTask
    boolean cancelAllTask -> cancelAllTask
    java.lang.Object pauseTaskLock -> pauseTaskLock
    android.content.Context context -> context
    com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig -> globalConfig
    com.lidroid.xutils.bitmap.BitmapDisplayConfig defaultDisplayConfig -> defaultDisplayConfig
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.drawable.Drawable) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(int) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.Bitmap) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.drawable.Drawable) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(int) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.Bitmap) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(int,int) -> configDefaultBitmapMaxSize
    com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize) -> configDefaultBitmapMaxSize
    com.lidroid.xutils.BitmapUtils configDefaultImageLoadAnimation(android.view.animation.Animation) -> configDefaultImageLoadAnimation
    com.lidroid.xutils.BitmapUtils configDefaultAutoRotation(boolean) -> configDefaultAutoRotation
    com.lidroid.xutils.BitmapUtils configDefaultShowOriginal(boolean) -> configDefaultShowOriginal
    com.lidroid.xutils.BitmapUtils configDefaultBitmapConfig(android.graphics.Bitmap$Config) -> configDefaultBitmapConfig
    com.lidroid.xutils.BitmapUtils configDefaultDisplayConfig(com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> configDefaultDisplayConfig
    com.lidroid.xutils.BitmapUtils configDownloader(com.lidroid.xutils.bitmap.download.Downloader) -> configDownloader
    com.lidroid.xutils.BitmapUtils configDefaultCacheExpiry(long) -> configDefaultCacheExpiry
    com.lidroid.xutils.BitmapUtils configDefaultConnectTimeout(int) -> configDefaultConnectTimeout
    com.lidroid.xutils.BitmapUtils configDefaultReadTimeout(int) -> configDefaultReadTimeout
    com.lidroid.xutils.BitmapUtils configThreadPoolSize(int) -> configThreadPoolSize
    com.lidroid.xutils.BitmapUtils configMemoryCacheEnabled(boolean) -> configMemoryCacheEnabled
    com.lidroid.xutils.BitmapUtils configDiskCacheEnabled(boolean) -> configDiskCacheEnabled
    com.lidroid.xutils.BitmapUtils configDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> configDiskCacheFileNameGenerator
    com.lidroid.xutils.BitmapUtils configBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener) -> configBitmapCacheListener
    void display(android.view.View,java.lang.String) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> display
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flushCache() -> flushCache
    void closeCache() -> closeCache
    java.io.File getBitmapFileFromDiskCache(java.lang.String) -> getBitmapFileFromDiskCache
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromMemCache
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    boolean isCancelled() -> isCancelled
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask getBitmapTaskFromContainer(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> getBitmapTaskFromContainer
    boolean bitmapLoadTaskExist(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> bitmapLoadTaskExist
    java.lang.Object access$0(com.lidroid.xutils.BitmapUtils) -> access$0
    boolean access$1(com.lidroid.xutils.BitmapUtils) -> access$1
    boolean access$2(com.lidroid.xutils.BitmapUtils) -> access$2
    com.lidroid.xutils.bitmap.BitmapGlobalConfig access$3(com.lidroid.xutils.BitmapUtils) -> access$3
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask access$4(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> access$4
com.lidroid.xutils.BitmapUtils$BitmapLoadTask -> com.lidroid.xutils.BitmapUtils$BitmapLoadTask:
    java.lang.String uri -> uri
    java.lang.ref.WeakReference containerReference -> containerReference
    com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack callBack -> callBack
    com.lidroid.xutils.bitmap.BitmapDisplayConfig displayConfig -> displayConfig
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom from -> from
    int PROGRESS_LOAD_STARTED -> PROGRESS_LOAD_STARTED
    int PROGRESS_LOADING -> PROGRESS_LOADING
    com.lidroid.xutils.BitmapUtils this$0 -> this$0
    android.graphics.Bitmap doInBackground(java.lang.Object[]) -> doInBackground
    void updateProgress(long,long) -> updateProgress
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    android.view.View getTargetContainer() -> getTargetContainer
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$3(com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> access$3
com.lidroid.xutils.DbUtils -> com.lidroid.xutils.DbUtils:
    java.util.HashMap daoMap -> daoMap
    android.database.sqlite.SQLiteDatabase database -> database
    com.lidroid.xutils.DbUtils$DaoConfig daoConfig -> daoConfig
    boolean debug -> debug
    boolean allowTransaction -> allowTransaction
    java.util.concurrent.locks.Lock writeLock -> writeLock
    boolean writeLocked -> writeLocked
    com.lidroid.xutils.DbUtils$FindTempCache findTempCache -> findTempCache
    com.lidroid.xutils.DbUtils getInstance(com.lidroid.xutils.DbUtils$DaoConfig) -> getInstance
    com.lidroid.xutils.DbUtils create(android.content.Context) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,java.lang.String) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> create
    com.lidroid.xutils.DbUtils create(com.lidroid.xutils.DbUtils$DaoConfig) -> create
    com.lidroid.xutils.DbUtils configDebug(boolean) -> configDebug
    com.lidroid.xutils.DbUtils configAllowTransaction(boolean) -> configAllowTransaction
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    com.lidroid.xutils.DbUtils$DaoConfig getDaoConfig() -> getDaoConfig
    void saveOrUpdate(java.lang.Object) -> saveOrUpdate
    void saveOrUpdateAll(java.util.List) -> saveOrUpdateAll
    void replace(java.lang.Object) -> replace
    void replaceAll(java.util.List) -> replaceAll
    void save(java.lang.Object) -> save
    void saveAll(java.util.List) -> saveAll
    boolean saveBindingId(java.lang.Object) -> saveBindingId
    void saveBindingIdAll(java.util.List) -> saveBindingIdAll
    void deleteById(java.lang.Class,java.lang.Object) -> deleteById
    void delete(java.lang.Object) -> delete
    void delete(java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder) -> delete
    void deleteAll(java.util.List) -> deleteAll
    void deleteAll(java.lang.Class) -> deleteAll
    void update(java.lang.Object,java.lang.String[]) -> update
    void update(java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> update
    void updateAll(java.util.List,java.lang.String[]) -> updateAll
    void updateAll(java.util.List,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> updateAll
    java.lang.Object findById(java.lang.Class,java.lang.Object) -> findById
    java.lang.Object findFirst(com.lidroid.xutils.db.sqlite.Selector) -> findFirst
    java.lang.Object findFirst(java.lang.Class) -> findFirst
    java.util.List findAll(com.lidroid.xutils.db.sqlite.Selector) -> findAll
    java.util.List findAll(java.lang.Class) -> findAll
    com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.SqlInfo) -> findDbModelFirst
    com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.DbModelSelector) -> findDbModelFirst
    java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.SqlInfo) -> findDbModelAll
    java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.DbModelSelector) -> findDbModelAll
    long count(com.lidroid.xutils.db.sqlite.Selector) -> count
    long count(java.lang.Class) -> count
    android.database.sqlite.SQLiteDatabase createDatabase(com.lidroid.xutils.DbUtils$DaoConfig) -> createDatabase
    void saveOrUpdateWithoutTransaction(java.lang.Object) -> saveOrUpdateWithoutTransaction
    boolean saveBindingIdWithoutTransaction(java.lang.Object) -> saveBindingIdWithoutTransaction
    long getLastAutoIncrementId(java.lang.String) -> getLastAutoIncrementId
    void createTableIfNotExist(java.lang.Class) -> createTableIfNotExist
    boolean tableIsExist(java.lang.Class) -> tableIsExist
    void dropDb() -> dropDb
    void dropTable(java.lang.Class) -> dropTable
    void close() -> close
    void debugSql(java.lang.String) -> debugSql
    void beginTransaction() -> beginTransaction
    void setTransactionSuccessful() -> setTransactionSuccessful
    void endTransaction() -> endTransaction
    void execNonQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> execNonQuery
    void execNonQuery(java.lang.String) -> execNonQuery
    android.database.Cursor execQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> execQuery
    android.database.Cursor execQuery(java.lang.String) -> execQuery
com.lidroid.xutils.DbUtils$DaoConfig -> com.lidroid.xutils.DbUtils$DaoConfig:
    android.content.Context context -> context
    java.lang.String dbName -> dbName
    int dbVersion -> dbVersion
    com.lidroid.xutils.DbUtils$DbUpgradeListener dbUpgradeListener -> dbUpgradeListener
    java.lang.String dbDir -> dbDir
    android.content.Context getContext() -> getContext
    java.lang.String getDbName() -> getDbName
    void setDbName(java.lang.String) -> setDbName
    int getDbVersion() -> getDbVersion
    void setDbVersion(int) -> setDbVersion
    com.lidroid.xutils.DbUtils$DbUpgradeListener getDbUpgradeListener() -> getDbUpgradeListener
    void setDbUpgradeListener(com.lidroid.xutils.DbUtils$DbUpgradeListener) -> setDbUpgradeListener
    java.lang.String getDbDir() -> getDbDir
    void setDbDir(java.lang.String) -> setDbDir
com.lidroid.xutils.DbUtils$DbUpgradeListener -> com.lidroid.xutils.DbUtils$DbUpgradeListener:
    void onUpgrade(com.lidroid.xutils.DbUtils,int,int) -> onUpgrade
com.lidroid.xutils.DbUtils$FindTempCache -> com.lidroid.xutils.DbUtils$FindTempCache:
    java.util.concurrent.ConcurrentHashMap cache -> cache
    long seq -> seq
    com.lidroid.xutils.DbUtils this$0 -> this$0
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void setSeq(long) -> setSeq
com.lidroid.xutils.HttpUtils -> com.lidroid.xutils.HttpUtils:
    com.lidroid.xutils.http.HttpCache sHttpCache -> sHttpCache
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String responseTextCharset -> responseTextCharset
    long currentRequestExpiry -> currentRequestExpiry
    int DEFAULT_CONN_TIMEOUT -> DEFAULT_CONN_TIMEOUT
    int DEFAULT_RETRY_TIMES -> DEFAULT_RETRY_TIMES
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.lidroid.xutils.task.PriorityExecutor EXECUTOR -> EXECUTOR
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    com.lidroid.xutils.HttpUtils configResponseTextCharset(java.lang.String) -> configResponseTextCharset
    com.lidroid.xutils.HttpUtils configHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> configHttpRedirectHandler
    com.lidroid.xutils.HttpUtils configHttpCacheSize(int) -> configHttpCacheSize
    com.lidroid.xutils.HttpUtils configDefaultHttpCacheExpiry(long) -> configDefaultHttpCacheExpiry
    com.lidroid.xutils.HttpUtils configCurrentHttpCacheExpiry(long) -> configCurrentHttpCacheExpiry
    com.lidroid.xutils.HttpUtils configCookieStore(org.apache.http.client.CookieStore) -> configCookieStore
    com.lidroid.xutils.HttpUtils configUserAgent(java.lang.String) -> configUserAgent
    com.lidroid.xutils.HttpUtils configTimeout(int) -> configTimeout
    com.lidroid.xutils.HttpUtils configSoTimeout(int) -> configSoTimeout
    com.lidroid.xutils.HttpUtils configRegisterScheme(org.apache.http.conn.scheme.Scheme) -> configRegisterScheme
    com.lidroid.xutils.HttpUtils configSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> configSSLSocketFactory
    com.lidroid.xutils.HttpUtils configRequestRetryCount(int) -> configRequestRetryCount
    com.lidroid.xutils.HttpUtils configRequestThreadPoolSize(int) -> configRequestThreadPoolSize
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> send
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> send
    com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String) -> sendSync
    com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams) -> sendSync
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler sendRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> sendRequest
    com.lidroid.xutils.http.ResponseStream sendSyncRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams) -> sendSyncRequest
com.lidroid.xutils.HttpUtils$1 -> com.lidroid.xutils.HttpUtils$1:
    com.lidroid.xutils.HttpUtils this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.HttpUtils$2 -> com.lidroid.xutils.HttpUtils$2:
    com.lidroid.xutils.HttpUtils this$0 -> this$0
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.ViewUtils -> com.lidroid.xutils.ViewUtils:
    void inject(android.view.View) -> inject
    void inject(android.app.Activity) -> inject
    void inject(android.preference.PreferenceActivity) -> inject
    void inject(java.lang.Object,android.view.View) -> inject
    void inject(java.lang.Object,android.app.Activity) -> inject
    void inject(java.lang.Object,android.preference.PreferenceGroup) -> inject
    void inject(java.lang.Object,android.preference.PreferenceActivity) -> inject
    void injectObject(java.lang.Object,com.lidroid.xutils.view.ViewFinder) -> injectObject
com.lidroid.xutils.bitmap.BitmapCacheListener -> com.lidroid.xutils.bitmap.BitmapCacheListener:
    void onInitMemoryCacheFinished() -> onInitMemoryCacheFinished
    void onInitDiskFinished() -> onInitDiskFinished
    void onClearCacheFinished() -> onClearCacheFinished
    void onClearMemoryCacheFinished() -> onClearMemoryCacheFinished
    void onClearDiskCacheFinished() -> onClearDiskCacheFinished
    void onClearCacheFinished(java.lang.String) -> onClearCacheFinished
    void onClearMemoryCacheFinished(java.lang.String) -> onClearMemoryCacheFinished
    void onClearDiskCacheFinished(java.lang.String) -> onClearDiskCacheFinished
    void onFlushCacheFinished() -> onFlushCacheFinished
    void onCloseCacheFinished() -> onCloseCacheFinished
com.lidroid.xutils.bitmap.BitmapCommonUtils -> com.lidroid.xutils.bitmap.BitmapCommonUtils:
    com.lidroid.xutils.bitmap.core.BitmapSize screenSize -> screenSize
    com.lidroid.xutils.bitmap.core.BitmapSize getScreenSize(android.content.Context) -> getScreenSize
    com.lidroid.xutils.bitmap.core.BitmapSize optimizeMaxSizeByView(android.view.View,int,int) -> optimizeMaxSizeByView
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
com.lidroid.xutils.bitmap.BitmapDisplayConfig -> com.lidroid.xutils.bitmap.BitmapDisplayConfig:
    com.lidroid.xutils.bitmap.core.BitmapSize bitmapMaxSize -> bitmapMaxSize
    android.view.animation.Animation animation -> animation
    android.graphics.drawable.Drawable loadingDrawable -> loadingDrawable
    android.graphics.drawable.Drawable loadFailedDrawable -> loadFailedDrawable
    boolean autoRotation -> autoRotation
    boolean showOriginal -> showOriginal
    android.graphics.Bitmap$Config bitmapConfig -> bitmapConfig
    com.lidroid.xutils.bitmap.factory.BitmapFactory bitmapFactory -> bitmapFactory
    com.lidroid.xutils.task.Priority priority -> priority
    com.lidroid.xutils.bitmap.core.BitmapSize getBitmapMaxSize() -> getBitmapMaxSize
    void setBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize) -> setBitmapMaxSize
    android.view.animation.Animation getAnimation() -> getAnimation
    void setAnimation(android.view.animation.Animation) -> setAnimation
    android.graphics.drawable.Drawable getLoadingDrawable() -> getLoadingDrawable
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    android.graphics.drawable.Drawable getLoadFailedDrawable() -> getLoadFailedDrawable
    void setLoadFailedDrawable(android.graphics.drawable.Drawable) -> setLoadFailedDrawable
    boolean isAutoRotation() -> isAutoRotation
    void setAutoRotation(boolean) -> setAutoRotation
    boolean isShowOriginal() -> isShowOriginal
    void setShowOriginal(boolean) -> setShowOriginal
    android.graphics.Bitmap$Config getBitmapConfig() -> getBitmapConfig
    void setBitmapConfig(android.graphics.Bitmap$Config) -> setBitmapConfig
    com.lidroid.xutils.bitmap.factory.BitmapFactory getBitmapFactory() -> getBitmapFactory
    void setBitmapFactory(com.lidroid.xutils.bitmap.factory.BitmapFactory) -> setBitmapFactory
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    java.lang.String toString() -> toString
    com.lidroid.xutils.bitmap.BitmapDisplayConfig cloneNew() -> cloneNew
com.lidroid.xutils.bitmap.BitmapGlobalConfig -> com.lidroid.xutils.bitmap.BitmapGlobalConfig:
    java.lang.String diskCachePath -> diskCachePath
    int MIN_MEMORY_CACHE_SIZE -> MIN_MEMORY_CACHE_SIZE
    int memoryCacheSize -> memoryCacheSize
    int MIN_DISK_CACHE_SIZE -> MIN_DISK_CACHE_SIZE
    int diskCacheSize -> diskCacheSize
    boolean memoryCacheEnabled -> memoryCacheEnabled
    boolean diskCacheEnabled -> diskCacheEnabled
    com.lidroid.xutils.bitmap.download.Downloader downloader -> downloader
    com.lidroid.xutils.bitmap.core.BitmapCache bitmapCache -> bitmapCache
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.lidroid.xutils.task.PriorityExecutor BITMAP_LOAD_EXECUTOR -> BITMAP_LOAD_EXECUTOR
    com.lidroid.xutils.task.PriorityExecutor DISK_CACHE_EXECUTOR -> DISK_CACHE_EXECUTOR
    long defaultCacheExpiry -> defaultCacheExpiry
    int defaultConnectTimeout -> defaultConnectTimeout
    int defaultReadTimeout -> defaultReadTimeout
    com.lidroid.xutils.cache.FileNameGenerator fileNameGenerator -> fileNameGenerator
    com.lidroid.xutils.bitmap.BitmapCacheListener bitmapCacheListener -> bitmapCacheListener
    android.content.Context mContext -> mContext
    java.util.HashMap configMap -> configMap
    com.lidroid.xutils.bitmap.BitmapGlobalConfig getInstance(android.content.Context,java.lang.String) -> getInstance
    void initBitmapCache() -> initBitmapCache
    java.lang.String getDiskCachePath() -> getDiskCachePath
    com.lidroid.xutils.bitmap.download.Downloader getDownloader() -> getDownloader
    void setDownloader(com.lidroid.xutils.bitmap.download.Downloader) -> setDownloader
    long getDefaultCacheExpiry() -> getDefaultCacheExpiry
    void setDefaultCacheExpiry(long) -> setDefaultCacheExpiry
    int getDefaultConnectTimeout() -> getDefaultConnectTimeout
    void setDefaultConnectTimeout(int) -> setDefaultConnectTimeout
    int getDefaultReadTimeout() -> getDefaultReadTimeout
    void setDefaultReadTimeout(int) -> setDefaultReadTimeout
    com.lidroid.xutils.bitmap.core.BitmapCache getBitmapCache() -> getBitmapCache
    int getMemoryCacheSize() -> getMemoryCacheSize
    void setMemoryCacheSize(int) -> setMemoryCacheSize
    void setMemCacheSizePercent(float) -> setMemCacheSizePercent
    int getDiskCacheSize() -> getDiskCacheSize
    void setDiskCacheSize(int) -> setDiskCacheSize
    int getThreadPoolSize() -> getThreadPoolSize
    void setThreadPoolSize(int) -> setThreadPoolSize
    com.lidroid.xutils.task.PriorityExecutor getBitmapLoadExecutor() -> getBitmapLoadExecutor
    com.lidroid.xutils.task.PriorityExecutor getDiskCacheExecutor() -> getDiskCacheExecutor
    boolean isMemoryCacheEnabled() -> isMemoryCacheEnabled
    void setMemoryCacheEnabled(boolean) -> setMemoryCacheEnabled
    boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    void setDiskCacheEnabled(boolean) -> setDiskCacheEnabled
    com.lidroid.xutils.cache.FileNameGenerator getFileNameGenerator() -> getFileNameGenerator
    void setFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setFileNameGenerator
    com.lidroid.xutils.bitmap.BitmapCacheListener getBitmapCacheListener() -> getBitmapCacheListener
    void setBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener) -> setBitmapCacheListener
    int getMemoryClass() -> getMemoryClass
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flushCache() -> flushCache
    void closeCache() -> closeCache
    com.lidroid.xutils.bitmap.BitmapCacheListener access$0(com.lidroid.xutils.bitmap.BitmapGlobalConfig) -> access$0
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask -> com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask:
    int MESSAGE_INIT_MEMORY_CACHE -> MESSAGE_INIT_MEMORY_CACHE
    int MESSAGE_INIT_DISK_CACHE -> MESSAGE_INIT_DISK_CACHE
    int MESSAGE_FLUSH -> MESSAGE_FLUSH
    int MESSAGE_CLOSE -> MESSAGE_CLOSE
    int MESSAGE_CLEAR -> MESSAGE_CLEAR
    int MESSAGE_CLEAR_MEMORY -> MESSAGE_CLEAR_MEMORY
    int MESSAGE_CLEAR_DISK -> MESSAGE_CLEAR_DISK
    int MESSAGE_CLEAR_BY_KEY -> MESSAGE_CLEAR_BY_KEY
    int MESSAGE_CLEAR_MEMORY_BY_KEY -> MESSAGE_CLEAR_MEMORY_BY_KEY
    int MESSAGE_CLEAR_DISK_BY_KEY -> MESSAGE_CLEAR_DISK_BY_KEY
    com.lidroid.xutils.bitmap.BitmapGlobalConfig this$0 -> this$0
    java.lang.Object[] doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.lidroid.xutils.bitmap.PauseOnScrollListener -> com.lidroid.xutils.bitmap.PauseOnScrollListener:
    com.lidroid.xutils.task.TaskHandler taskHandler -> taskHandler
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack -> com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack:
    com.lidroid.xutils.bitmap.callback.BitmapSetter bitmapSetter -> bitmapSetter
    void onPreLoad(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> onPreLoad
    void onLoadStarted(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> onLoadStarted
    void onLoading(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,long,long) -> onLoading
    void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom) -> onLoadCompleted
    void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable) -> onLoadFailed
    void setBitmapSetter(com.lidroid.xutils.bitmap.callback.BitmapSetter) -> setBitmapSetter
    void setBitmap(android.view.View,android.graphics.Bitmap) -> setBitmap
    void setDrawable(android.view.View,android.graphics.drawable.Drawable) -> setDrawable
    android.graphics.drawable.Drawable getDrawable(android.view.View) -> getDrawable
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom -> com.lidroid.xutils.bitmap.callback.BitmapLoadFrom:
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom MEMORY_CACHE -> MEMORY_CACHE
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom DISK_CACHE -> DISK_CACHE
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom URI -> URI
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] values() -> values
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.bitmap.callback.BitmapSetter -> com.lidroid.xutils.bitmap.callback.BitmapSetter:
    void setBitmap(android.view.View,android.graphics.Bitmap) -> setBitmap
    void setDrawable(android.view.View,android.graphics.drawable.Drawable) -> setDrawable
    android.graphics.drawable.Drawable getDrawable(android.view.View) -> getDrawable
com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack -> com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack:
    void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom) -> onLoadCompleted
    void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable) -> onLoadFailed
    void animationDisplay(android.view.View,android.view.animation.Animation) -> animationDisplay
com.lidroid.xutils.bitmap.core.AsyncDrawable -> com.lidroid.xutils.bitmap.core.AsyncDrawable:
    java.lang.ref.WeakReference bitmapLoadTaskReference -> bitmapLoadTaskReference
    android.graphics.drawable.Drawable baseDrawable -> baseDrawable
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask getBitmapWorkerTask() -> getBitmapWorkerTask
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void setBounds(int,int,int,int) -> setBounds
    void setBounds(android.graphics.Rect) -> setBounds
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void invalidateSelf() -> invalidateSelf
    void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
com.lidroid.xutils.bitmap.core.BitmapCache -> com.lidroid.xutils.bitmap.core.BitmapCache:
    int DISK_CACHE_INDEX -> DISK_CACHE_INDEX
    com.lidroid.xutils.cache.LruDiskCache mDiskLruCache -> mDiskLruCache
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> mMemoryCache
    java.lang.Object mDiskCacheLock -> mDiskCacheLock
    com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig -> globalConfig
    void initMemoryCache() -> initMemoryCache
    void initDiskCache() -> initDiskCache
    void setMemoryCacheSize(int) -> setMemoryCacheSize
    void setDiskCacheSize(int) -> setDiskCacheSize
    void setDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setDiskCacheFileNameGenerator
    android.graphics.Bitmap downloadBitmap(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadBitmap
    android.graphics.Bitmap addBitmapToMemoryCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap,long) -> addBitmapToMemoryCache
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromMemCache
    java.io.File getBitmapFileFromDiskCache(java.lang.String) -> getBitmapFileFromDiskCache
    android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromDiskCache
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flush() -> flush
    void close() -> close
    android.graphics.Bitmap decodeBitmapMeta(com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> decodeBitmapMeta
    android.graphics.Bitmap rotateBitmapIfNeeded(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap) -> rotateBitmapIfNeeded
com.lidroid.xutils.bitmap.core.BitmapCache$1 -> com.lidroid.xutils.bitmap.core.BitmapCache$1:
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    int sizeOf(com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey,android.graphics.Bitmap) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta -> com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta:
    java.io.FileInputStream inputStream -> inputStream
    byte[] data -> data
    long expiryTimestamp -> expiryTimestamp
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey -> com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey:
    java.lang.String uri -> uri
    java.lang.String subKey -> subKey
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lidroid.xutils.bitmap.core.BitmapDecoder -> com.lidroid.xutils.bitmap.core.BitmapDecoder:
    java.lang.Object lock -> lock
    android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,int,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromResource
    android.graphics.Bitmap decodeSampledBitmapFromFile(java.lang.String,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromFile
    android.graphics.Bitmap decodeSampledBitmapFromDescriptor(java.io.FileDescriptor,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromDescriptor
    android.graphics.Bitmap decodeSampledBitmapFromByteArray(byte[],com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromByteArray
    android.graphics.Bitmap decodeResource(android.content.res.Resources,int) -> decodeResource
    android.graphics.Bitmap decodeFile(java.lang.String) -> decodeFile
    android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor) -> decodeFileDescriptor
    android.graphics.Bitmap decodeByteArray(byte[]) -> decodeByteArray
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> calculateInSampleSize
com.lidroid.xutils.bitmap.core.BitmapSize -> com.lidroid.xutils.bitmap.core.BitmapSize:
    com.lidroid.xutils.bitmap.core.BitmapSize ZERO -> ZERO
    int width -> width
    int height -> height
    com.lidroid.xutils.bitmap.core.BitmapSize scaleDown(int) -> scaleDown
    com.lidroid.xutils.bitmap.core.BitmapSize scale(float) -> scale
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    java.lang.String toString() -> toString
com.lidroid.xutils.bitmap.download.DefaultDownloader -> com.lidroid.xutils.bitmap.download.DefaultDownloader:
    long downloadToStream(java.lang.String,java.io.OutputStream,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadToStream
com.lidroid.xutils.bitmap.download.Downloader -> com.lidroid.xutils.bitmap.download.Downloader:
    android.content.Context context -> context
    long defaultExpiry -> defaultExpiry
    int defaultConnectTimeout -> defaultConnectTimeout
    int defaultReadTimeout -> defaultReadTimeout
    long downloadToStream(java.lang.String,java.io.OutputStream,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadToStream
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    void setDefaultExpiry(long) -> setDefaultExpiry
    long getDefaultExpiry() -> getDefaultExpiry
    int getDefaultConnectTimeout() -> getDefaultConnectTimeout
    void setDefaultConnectTimeout(int) -> setDefaultConnectTimeout
    int getDefaultReadTimeout() -> getDefaultReadTimeout
    void setDefaultReadTimeout(int) -> setDefaultReadTimeout
com.lidroid.xutils.bitmap.factory.BitmapFactory -> com.lidroid.xutils.bitmap.factory.BitmapFactory:
    com.lidroid.xutils.bitmap.factory.BitmapFactory cloneNew() -> cloneNew
    android.graphics.Bitmap createBitmap(android.graphics.Bitmap) -> createBitmap
com.lidroid.xutils.cache.FileNameGenerator -> com.lidroid.xutils.cache.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.lidroid.xutils.cache.KeyExpiryMap -> com.lidroid.xutils.cache.KeyExpiryMap:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_CONCURRENCY_LEVEL -> DEFAULT_CONCURRENCY_LEVEL
    java.lang.Long get(java.lang.Object) -> get
    java.lang.Long put(java.lang.Object,java.lang.Long) -> put
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Long remove(java.lang.Object) -> remove
    void clear() -> clear
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.lidroid.xutils.cache.LruDiskCache -> com.lidroid.xutils.cache.LruDiskCache:
    java.lang.String JOURNAL_FILE -> JOURNAL_FILE
    java.lang.String JOURNAL_FILE_TEMP -> JOURNAL_FILE_TEMP
    java.lang.String JOURNAL_FILE_BACKUP -> JOURNAL_FILE_BACKUP
    java.lang.String MAGIC -> MAGIC
    java.lang.String VERSION -> VERSION
    long ANY_SEQUENCE_NUMBER -> ANY_SEQUENCE_NUMBER
    char CLEAN -> CLEAN
    char UPDATE -> UPDATE
    char DELETE -> DELETE
    char READ -> READ
    char EXPIRY_PREFIX -> EXPIRY_PREFIX
    java.io.File directory -> directory
    java.io.File journalFile -> journalFile
    java.io.File journalFileTmp -> journalFileTmp
    java.io.File journalFileBackup -> journalFileBackup
    int appVersion -> appVersion
    long maxSize -> maxSize
    int valueCount -> valueCount
    long size -> size
    java.io.Writer journalWriter -> journalWriter
    java.util.LinkedHashMap lruEntries -> lruEntries
    int redundantOpCount -> redundantOpCount
    long nextSequenceNumber -> nextSequenceNumber
    java.util.concurrent.ThreadPoolExecutor executorService -> executorService
    java.util.concurrent.Callable cleanupCallable -> cleanupCallable
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    com.lidroid.xutils.cache.FileNameGenerator fileNameGenerator -> fileNameGenerator
    com.lidroid.xutils.cache.LruDiskCache open(java.io.File,int,int,long) -> open
    void readJournal() -> readJournal
    void readJournalLine(java.lang.String) -> readJournalLine
    void processJournal() -> processJournal
    void rebuildJournal() -> rebuildJournal
    void deleteIfExists(java.io.File) -> deleteIfExists
    void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    long getExpiryTimestamp(java.lang.String) -> getExpiryTimestamp
    java.io.File getCacheFile(java.lang.String,int) -> getCacheFile
    com.lidroid.xutils.cache.LruDiskCache$Snapshot get(java.lang.String) -> get
    com.lidroid.xutils.cache.LruDiskCache$Snapshot getByDiskKey(java.lang.String) -> getByDiskKey
    com.lidroid.xutils.cache.LruDiskCache$Editor edit(java.lang.String) -> edit
    com.lidroid.xutils.cache.LruDiskCache$Editor editByDiskKey(java.lang.String,long) -> editByDiskKey
    java.io.File getDirectory() -> getDirectory
    long getMaxSize() -> getMaxSize
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    void completeEdit(com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> completeEdit
    boolean journalRebuildRequired() -> journalRebuildRequired
    boolean remove(java.lang.String) -> remove
    boolean removeByDiskKey(java.lang.String) -> removeByDiskKey
    boolean isClosed() -> isClosed
    void checkNotClosed() -> checkNotClosed
    void flush() -> flush
    void close() -> close
    void trimToSize() -> trimToSize
    void delete() -> delete
    java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    java.lang.String readFully(java.io.Reader) -> readFully
    void deleteContents(java.io.File) -> deleteContents
    com.lidroid.xutils.cache.FileNameGenerator getFileNameGenerator() -> getFileNameGenerator
    void setFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setFileNameGenerator
    java.io.Writer access$0(com.lidroid.xutils.cache.LruDiskCache) -> access$0
    void access$1(com.lidroid.xutils.cache.LruDiskCache) -> access$1
    boolean access$2(com.lidroid.xutils.cache.LruDiskCache) -> access$2
    void access$3(com.lidroid.xutils.cache.LruDiskCache) -> access$3
    void access$4(com.lidroid.xutils.cache.LruDiskCache,int) -> access$4
    com.lidroid.xutils.cache.LruDiskCache$Editor access$5(com.lidroid.xutils.cache.LruDiskCache,java.lang.String,long) -> access$5
    java.lang.String access$6(java.io.InputStream) -> access$6
    int access$7(com.lidroid.xutils.cache.LruDiskCache) -> access$7
    java.io.File access$8(com.lidroid.xutils.cache.LruDiskCache) -> access$8
    java.io.OutputStream access$9() -> access$9
    void access$10(com.lidroid.xutils.cache.LruDiskCache,com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> access$10
    boolean access$11(com.lidroid.xutils.cache.LruDiskCache,java.lang.String) -> access$11
com.lidroid.xutils.cache.LruDiskCache$1 -> com.lidroid.xutils.cache.LruDiskCache$1:
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.lidroid.xutils.cache.LruDiskCache$2 -> com.lidroid.xutils.cache.LruDiskCache$2:
    void write(int) -> write
com.lidroid.xutils.cache.LruDiskCache$Editor -> com.lidroid.xutils.cache.LruDiskCache$Editor:
    com.lidroid.xutils.cache.LruDiskCache$Entry entry -> entry
    boolean[] written -> written
    boolean hasErrors -> hasErrors
    boolean committed -> committed
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void setEntryExpiryTimestamp(long) -> setEntryExpiryTimestamp
    java.io.InputStream newInputStream(int) -> newInputStream
    java.lang.String getString(int) -> getString
    java.io.OutputStream newOutputStream(int) -> newOutputStream
    void set(int,java.lang.String) -> set
    void commit() -> commit
    void abort() -> abort
    void abortUnlessCommitted() -> abortUnlessCommitted
    void access$0(com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> access$0
    com.lidroid.xutils.cache.LruDiskCache$Entry access$2(com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$2
    boolean[] access$3(com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$3
com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream -> com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream:
    com.lidroid.xutils.cache.LruDiskCache$Editor this$1 -> this$1
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.lidroid.xutils.cache.LruDiskCache$Entry -> com.lidroid.xutils.cache.LruDiskCache$Entry:
    java.lang.String diskKey -> diskKey
    long expiryTimestamp -> expiryTimestamp
    long[] lengths -> lengths
    boolean readable -> readable
    com.lidroid.xutils.cache.LruDiskCache$Editor currentEditor -> currentEditor
    long sequenceNumber -> sequenceNumber
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    java.lang.String getLengths() -> getLengths
    void setLengths(java.lang.String[],int) -> setLengths
    java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    java.io.File getCleanFile(int) -> getCleanFile
    java.io.File getDirtyFile(int) -> getDirtyFile
    boolean access$0(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$0
    void access$1(com.lidroid.xutils.cache.LruDiskCache$Entry,long) -> access$1
    com.lidroid.xutils.cache.LruDiskCache$Editor access$2(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$2
    java.lang.String access$3(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$3
    void access$5(com.lidroid.xutils.cache.LruDiskCache$Entry,boolean) -> access$5
    void access$6(com.lidroid.xutils.cache.LruDiskCache$Entry,com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$6
    void access$7(com.lidroid.xutils.cache.LruDiskCache$Entry,java.lang.String[],int) -> access$7
    long[] access$8(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$8
    long access$9(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$9
    long access$10(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$10
    void access$11(com.lidroid.xutils.cache.LruDiskCache$Entry,long) -> access$11
com.lidroid.xutils.cache.LruDiskCache$Snapshot -> com.lidroid.xutils.cache.LruDiskCache$Snapshot:
    java.lang.String diskKey -> diskKey
    long sequenceNumber -> sequenceNumber
    java.io.FileInputStream[] ins -> ins
    long[] lengths -> lengths
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    com.lidroid.xutils.cache.LruDiskCache$Editor edit() -> edit
    java.io.FileInputStream getInputStream(int) -> getInputStream
    java.lang.String getString(int) -> getString
    long getLength(int) -> getLength
    void close() -> close
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader -> com.lidroid.xutils.cache.LruDiskCache$StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    java.io.InputStream in -> in
    java.nio.charset.Charset charset -> charset
    byte[] buf -> buf
    int pos -> pos
    int end -> end
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void close() -> close
    java.lang.String readLine() -> readLine
    void fillBuf() -> fillBuf
    java.nio.charset.Charset access$0(com.lidroid.xutils.cache.LruDiskCache$StrictLineReader) -> access$0
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1 -> com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1:
    com.lidroid.xutils.cache.LruDiskCache$StrictLineReader this$1 -> this$1
    java.lang.String toString() -> toString
com.lidroid.xutils.cache.LruMemoryCache -> com.lidroid.xutils.cache.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    com.lidroid.xutils.cache.KeyExpiryMap keyExpiryMap -> keyExpiryMap
    void setMaxSize(int) -> setMaxSize
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object put(java.lang.Object,java.lang.Object,long) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    boolean containsKey(java.lang.Object) -> containsKey
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
com.lidroid.xutils.cache.MD5FileNameGenerator -> com.lidroid.xutils.cache.MD5FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
com.lidroid.xutils.db.annotation.Check -> com.lidroid.xutils.db.annotation.Check:
    java.lang.String value() -> value
com.lidroid.xutils.db.annotation.Column -> com.lidroid.xutils.db.annotation.Column:
    java.lang.String column() -> column
    java.lang.String defaultValue() -> defaultValue
com.lidroid.xutils.db.annotation.Finder -> com.lidroid.xutils.db.annotation.Finder:
    java.lang.String valueColumn() -> valueColumn
    java.lang.String targetColumn() -> targetColumn
com.lidroid.xutils.db.annotation.Foreign -> com.lidroid.xutils.db.annotation.Foreign:
    java.lang.String column() -> column
    java.lang.String foreign() -> foreign
com.lidroid.xutils.db.annotation.Id -> com.lidroid.xutils.db.annotation.Id:
    java.lang.String column() -> column
com.lidroid.xutils.db.annotation.NoAutoIncrement -> com.lidroid.xutils.db.annotation.NoAutoIncrement:
com.lidroid.xutils.db.annotation.NotNull -> com.lidroid.xutils.db.annotation.NotNull:
com.lidroid.xutils.db.annotation.Table -> com.lidroid.xutils.db.annotation.Table:
    java.lang.String name() -> name
    java.lang.String execAfterTableCreated() -> execAfterTableCreated
com.lidroid.xutils.db.annotation.Transient -> com.lidroid.xutils.db.annotation.Transient:
com.lidroid.xutils.db.annotation.Unique -> com.lidroid.xutils.db.annotation.Unique:
com.lidroid.xutils.db.converter.BooleanColumnConverter -> com.lidroid.xutils.db.converter.BooleanColumnConverter:
    java.lang.Boolean getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Boolean getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Boolean) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ByteArrayColumnConverter -> com.lidroid.xutils.db.converter.ByteArrayColumnConverter:
    byte[] getFieldValue(android.database.Cursor,int) -> getFieldValue
    byte[] getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(byte[]) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ByteColumnConverter -> com.lidroid.xutils.db.converter.ByteColumnConverter:
    java.lang.Byte getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Byte getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Byte) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.CharColumnConverter -> com.lidroid.xutils.db.converter.CharColumnConverter:
    java.lang.Character getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Character getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Character) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ColumnConverter -> com.lidroid.xutils.db.converter.ColumnConverter:
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.converter.ColumnConverterFactory -> com.lidroid.xutils.db.converter.ColumnConverterFactory:
    java.util.concurrent.ConcurrentHashMap columnType_columnConverter_map -> columnType_columnConverter_map
    com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter(java.lang.Class) -> getColumnConverter
    com.lidroid.xutils.db.sqlite.ColumnDbType getDbColumnType(java.lang.Class) -> getDbColumnType
    void registerColumnConverter(java.lang.Class,com.lidroid.xutils.db.converter.ColumnConverter) -> registerColumnConverter
    boolean isSupportColumnConverter(java.lang.Class) -> isSupportColumnConverter
com.lidroid.xutils.db.converter.DateColumnConverter -> com.lidroid.xutils.db.converter.DateColumnConverter:
    java.util.Date getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.util.Date getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.util.Date) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.DoubleColumnConverter -> com.lidroid.xutils.db.converter.DoubleColumnConverter:
    java.lang.Double getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Double getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Double) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.FloatColumnConverter -> com.lidroid.xutils.db.converter.FloatColumnConverter:
    java.lang.Float getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Float getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Float) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.IntegerColumnConverter -> com.lidroid.xutils.db.converter.IntegerColumnConverter:
    java.lang.Integer getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Integer getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Integer) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.LongColumnConverter -> com.lidroid.xutils.db.converter.LongColumnConverter:
    java.lang.Long getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Long getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Long) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ShortColumnConverter -> com.lidroid.xutils.db.converter.ShortColumnConverter:
    java.lang.Short getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Short getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Short) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.SqlDateColumnConverter -> com.lidroid.xutils.db.converter.SqlDateColumnConverter:
    java.sql.Date getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.sql.Date getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.sql.Date) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.StringColumnConverter -> com.lidroid.xutils.db.converter.StringColumnConverter:
    java.lang.String getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.String getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.String) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.sqlite.ColumnDbType -> com.lidroid.xutils.db.sqlite.ColumnDbType:
    com.lidroid.xutils.db.sqlite.ColumnDbType INTEGER -> INTEGER
    com.lidroid.xutils.db.sqlite.ColumnDbType REAL -> REAL
    com.lidroid.xutils.db.sqlite.ColumnDbType TEXT -> TEXT
    com.lidroid.xutils.db.sqlite.ColumnDbType BLOB -> BLOB
    java.lang.String value -> value
    com.lidroid.xutils.db.sqlite.ColumnDbType[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String toString() -> toString
    com.lidroid.xutils.db.sqlite.ColumnDbType[] values() -> values
    com.lidroid.xutils.db.sqlite.ColumnDbType valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.db.sqlite.CursorUtils -> com.lidroid.xutils.db.sqlite.CursorUtils:
    java.lang.Object getEntity(com.lidroid.xutils.DbUtils,android.database.Cursor,java.lang.Class,long) -> getEntity
    com.lidroid.xutils.db.table.DbModel getDbModel(android.database.Cursor) -> getDbModel
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache -> com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache:
    java.util.concurrent.ConcurrentHashMap cache -> cache
    long seq -> seq
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void setSeq(long) -> setSeq
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence -> com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence:
    long seq -> seq
    java.lang.String FOREIGN_LAZY_LOADER_CLASS_NAME -> FOREIGN_LAZY_LOADER_CLASS_NAME
    java.lang.String FINDER_LAZY_LOADER_CLASS_NAME -> FINDER_LAZY_LOADER_CLASS_NAME
    long getSeq() -> getSeq
com.lidroid.xutils.db.sqlite.DbModelSelector -> com.lidroid.xutils.db.sqlite.DbModelSelector:
    java.lang.String[] columnExpressions -> columnExpressions
    java.lang.String groupByColumnName -> groupByColumnName
    com.lidroid.xutils.db.sqlite.WhereBuilder having -> having
    com.lidroid.xutils.db.sqlite.Selector selector -> selector
    com.lidroid.xutils.db.sqlite.DbModelSelector from(java.lang.Class) -> from
    com.lidroid.xutils.db.sqlite.DbModelSelector where(com.lidroid.xutils.db.sqlite.WhereBuilder) -> where
    com.lidroid.xutils.db.sqlite.DbModelSelector where(java.lang.String,java.lang.String,java.lang.Object) -> where
    com.lidroid.xutils.db.sqlite.DbModelSelector and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.DbModelSelector and(com.lidroid.xutils.db.sqlite.WhereBuilder) -> and
    com.lidroid.xutils.db.sqlite.DbModelSelector or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.DbModelSelector or(com.lidroid.xutils.db.sqlite.WhereBuilder) -> or
    com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String) -> groupBy
    com.lidroid.xutils.db.sqlite.DbModelSelector having(com.lidroid.xutils.db.sqlite.WhereBuilder) -> having
    com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[]) -> select
    com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String) -> orderBy
    com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String,boolean) -> orderBy
    com.lidroid.xutils.db.sqlite.DbModelSelector limit(int) -> limit
    com.lidroid.xutils.db.sqlite.DbModelSelector offset(int) -> offset
    java.lang.Class getEntityType() -> getEntityType
    java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.FinderLazyLoader -> com.lidroid.xutils.db.sqlite.FinderLazyLoader:
    com.lidroid.xutils.db.table.Finder finderColumn -> finderColumn
    java.lang.Object finderValue -> finderValue
    java.util.List getAllFromDb() -> getAllFromDb
    java.lang.Object getFirstFromDb() -> getFirstFromDb
com.lidroid.xutils.db.sqlite.ForeignLazyLoader -> com.lidroid.xutils.db.sqlite.ForeignLazyLoader:
    com.lidroid.xutils.db.table.Foreign foreignColumn -> foreignColumn
    java.lang.Object columnValue -> columnValue
    java.util.List getAllFromDb() -> getAllFromDb
    java.lang.Object getFirstFromDb() -> getFirstFromDb
    void setColumnValue(java.lang.Object) -> setColumnValue
    java.lang.Object getColumnValue() -> getColumnValue
com.lidroid.xutils.db.sqlite.Selector -> com.lidroid.xutils.db.sqlite.Selector:
    java.lang.Class entityType -> entityType
    java.lang.String tableName -> tableName
    com.lidroid.xutils.db.sqlite.WhereBuilder whereBuilder -> whereBuilder
    java.util.List orderByList -> orderByList
    int limit -> limit
    int offset -> offset
    com.lidroid.xutils.db.sqlite.Selector from(java.lang.Class) -> from
    com.lidroid.xutils.db.sqlite.Selector where(com.lidroid.xutils.db.sqlite.WhereBuilder) -> where
    com.lidroid.xutils.db.sqlite.Selector where(java.lang.String,java.lang.String,java.lang.Object) -> where
    com.lidroid.xutils.db.sqlite.Selector and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.Selector and(com.lidroid.xutils.db.sqlite.WhereBuilder) -> and
    com.lidroid.xutils.db.sqlite.Selector or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.Selector or(com.lidroid.xutils.db.sqlite.WhereBuilder) -> or
    com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String) -> groupBy
    com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[]) -> select
    com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String) -> orderBy
    com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String,boolean) -> orderBy
    com.lidroid.xutils.db.sqlite.Selector limit(int) -> limit
    com.lidroid.xutils.db.sqlite.Selector offset(int) -> offset
    java.lang.String toString() -> toString
    java.lang.Class getEntityType() -> getEntityType
com.lidroid.xutils.db.sqlite.Selector$OrderBy -> com.lidroid.xutils.db.sqlite.Selector$OrderBy:
    java.lang.String columnName -> columnName
    boolean desc -> desc
    com.lidroid.xutils.db.sqlite.Selector this$0 -> this$0
    java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.SqlInfo -> com.lidroid.xutils.db.sqlite.SqlInfo:
    java.lang.String sql -> sql
    java.util.LinkedList bindArgs -> bindArgs
    java.lang.String getSql() -> getSql
    void setSql(java.lang.String) -> setSql
    java.util.LinkedList getBindArgs() -> getBindArgs
    java.lang.Object[] getBindArgsAsArray() -> getBindArgsAsArray
    java.lang.String[] getBindArgsAsStrArray() -> getBindArgsAsStrArray
    void addBindArg(java.lang.Object) -> addBindArg
    void addBindArgWithoutConverter(java.lang.Object) -> addBindArgWithoutConverter
    void addBindArgs(java.lang.Object[]) -> addBindArgs
com.lidroid.xutils.db.sqlite.SqlInfoBuilder -> com.lidroid.xutils.db.sqlite.SqlInfoBuilder:
    com.lidroid.xutils.db.sqlite.SqlInfo buildInsertSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildInsertSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildReplaceSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildReplaceSqlInfo
    java.lang.String buildDeleteSqlByTableName(java.lang.String) -> buildDeleteSqlByTableName
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,java.lang.Object) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,java.lang.String[]) -> buildUpdateSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> buildUpdateSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildCreateTableSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class) -> buildCreateTableSqlInfo
    com.lidroid.xutils.db.table.KeyValue column2KeyValue(java.lang.Object,com.lidroid.xutils.db.table.Column) -> column2KeyValue
    java.util.List entity2KeyValueList(com.lidroid.xutils.DbUtils,java.lang.Object) -> entity2KeyValueList
com.lidroid.xutils.db.sqlite.WhereBuilder -> com.lidroid.xutils.db.sqlite.WhereBuilder:
    java.util.List whereItems -> whereItems
    com.lidroid.xutils.db.sqlite.WhereBuilder b() -> b
    com.lidroid.xutils.db.sqlite.WhereBuilder b(java.lang.String,java.lang.String,java.lang.Object) -> b
    com.lidroid.xutils.db.sqlite.WhereBuilder and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.WhereBuilder or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    int getWhereItemSize() -> getWhereItemSize
    java.lang.String toString() -> toString
    void appendCondition(java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> appendCondition
com.lidroid.xutils.db.table.Column -> com.lidroid.xutils.db.table.Column:
    com.lidroid.xutils.db.table.Table table -> table
    int index -> index
    java.lang.String columnName -> columnName
    java.lang.Object defaultValue -> defaultValue
    java.lang.reflect.Method getMethod -> getMethod
    java.lang.reflect.Method setMethod -> setMethod
    java.lang.reflect.Field columnField -> columnField
    com.lidroid.xutils.db.converter.ColumnConverter columnConverter -> columnConverter
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    java.lang.Object getFieldValue(java.lang.Object) -> getFieldValue
    com.lidroid.xutils.db.table.Table getTable() -> getTable
    void setTable(com.lidroid.xutils.db.table.Table) -> setTable
    int getIndex() -> getIndex
    java.lang.String getColumnName() -> getColumnName
    java.lang.Object getDefaultValue() -> getDefaultValue
    java.lang.reflect.Field getColumnField() -> getColumnField
    com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter() -> getColumnConverter
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.table.ColumnUtils -> com.lidroid.xutils.db.table.ColumnUtils:
    java.util.HashSet DB_PRIMITIVE_TYPES -> DB_PRIMITIVE_TYPES
    boolean isDbPrimitiveType(java.lang.Class) -> isDbPrimitiveType
    java.lang.reflect.Method getColumnGetMethod(java.lang.Class,java.lang.reflect.Field) -> getColumnGetMethod
    java.lang.reflect.Method getColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> getColumnSetMethod
    java.lang.String getColumnNameByField(java.lang.reflect.Field) -> getColumnNameByField
    java.lang.String getForeignColumnNameByField(java.lang.reflect.Field) -> getForeignColumnNameByField
    java.lang.String getColumnDefaultValue(java.lang.reflect.Field) -> getColumnDefaultValue
    boolean isTransient(java.lang.reflect.Field) -> isTransient
    boolean isForeign(java.lang.reflect.Field) -> isForeign
    boolean isFinder(java.lang.reflect.Field) -> isFinder
    boolean isUnique(java.lang.reflect.Field) -> isUnique
    boolean isNotNull(java.lang.reflect.Field) -> isNotNull
    java.lang.String getCheck(java.lang.reflect.Field) -> getCheck
    java.lang.Class getForeignEntityType(com.lidroid.xutils.db.table.Foreign) -> getForeignEntityType
    java.lang.Class getFinderTargetEntityType(com.lidroid.xutils.db.table.Finder) -> getFinderTargetEntityType
    java.lang.Object convert2DbColumnValueIfNeeded(java.lang.Object) -> convert2DbColumnValueIfNeeded
    boolean isStartWithIs(java.lang.String) -> isStartWithIs
    java.lang.reflect.Method getBooleanColumnGetMethod(java.lang.Class,java.lang.String) -> getBooleanColumnGetMethod
    java.lang.reflect.Method getBooleanColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> getBooleanColumnSetMethod
com.lidroid.xutils.db.table.DbModel -> com.lidroid.xutils.db.table.DbModel:
    java.util.HashMap dataMap -> dataMap
    java.lang.String getString(java.lang.String) -> getString
    int getInt(java.lang.String) -> getInt
    boolean getBoolean(java.lang.String) -> getBoolean
    double getDouble(java.lang.String) -> getDouble
    float getFloat(java.lang.String) -> getFloat
    long getLong(java.lang.String) -> getLong
    java.util.Date getDate(java.lang.String) -> getDate
    java.sql.Date getSqlDate(java.lang.String) -> getSqlDate
    void add(java.lang.String,java.lang.String) -> add
    java.util.HashMap getDataMap() -> getDataMap
    boolean isEmpty(java.lang.String) -> isEmpty
com.lidroid.xutils.db.table.Finder -> com.lidroid.xutils.db.table.Finder:
    java.lang.String valueColumnName -> valueColumnName
    java.lang.String targetColumnName -> targetColumnName
    java.lang.Class getTargetEntityType() -> getTargetEntityType
    java.lang.String getTargetColumnName() -> getTargetColumnName
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    java.lang.Object getDefaultValue() -> getDefaultValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.table.Foreign -> com.lidroid.xutils.db.table.Foreign:
    java.lang.String foreignColumnName -> foreignColumnName
    com.lidroid.xutils.db.converter.ColumnConverter foreignColumnConverter -> foreignColumnConverter
    java.lang.String getForeignColumnName() -> getForeignColumnName
    java.lang.Class getForeignEntityType() -> getForeignEntityType
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object getDefaultValue() -> getDefaultValue
com.lidroid.xutils.db.table.Id -> com.lidroid.xutils.db.table.Id:
    java.lang.String columnFieldClassName -> columnFieldClassName
    boolean isAutoIncrementChecked -> isAutoIncrementChecked
    boolean isAutoIncrement -> isAutoIncrement
    java.util.HashSet INTEGER_TYPES -> INTEGER_TYPES
    java.util.HashSet AUTO_INCREMENT_TYPES -> AUTO_INCREMENT_TYPES
    boolean isAutoIncrement() -> isAutoIncrement
    void setAutoIncrementId(java.lang.Object,long) -> setAutoIncrementId
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
com.lidroid.xutils.db.table.KeyValue -> com.lidroid.xutils.db.table.KeyValue:
    java.lang.String key -> key
    java.lang.Object value -> value
com.lidroid.xutils.db.table.Table -> com.lidroid.xutils.db.table.Table:
    com.lidroid.xutils.DbUtils db -> db
    java.lang.String tableName -> tableName
    com.lidroid.xutils.db.table.Id id -> id
    java.util.HashMap columnMap -> columnMap
    java.util.HashMap finderMap -> finderMap
    java.util.HashMap tableMap -> tableMap
    boolean checkedDatabase -> checkedDatabase
    com.lidroid.xutils.db.table.Table get(com.lidroid.xutils.DbUtils,java.lang.Class) -> get
    void remove(com.lidroid.xutils.DbUtils,java.lang.Class) -> remove
    void remove(com.lidroid.xutils.DbUtils,java.lang.String) -> remove
    boolean isCheckedDatabase() -> isCheckedDatabase
    void setCheckedDatabase(boolean) -> setCheckedDatabase
com.lidroid.xutils.db.table.TableUtils -> com.lidroid.xutils.db.table.TableUtils:
    java.util.concurrent.ConcurrentHashMap entityColumnsMap -> entityColumnsMap
    java.util.concurrent.ConcurrentHashMap entityIdMap -> entityIdMap
    java.lang.String getTableName(java.lang.Class) -> getTableName
    java.lang.String getExecAfterTableCreated(java.lang.Class) -> getExecAfterTableCreated
    java.util.HashMap getColumnMap(java.lang.Class) -> getColumnMap
    void addColumns2Map(java.lang.Class,java.lang.String,java.util.HashMap) -> addColumns2Map
    com.lidroid.xutils.db.table.Column getColumnOrId(java.lang.Class,java.lang.String) -> getColumnOrId
    com.lidroid.xutils.db.table.Id getId(java.lang.Class) -> getId
    java.lang.String getPrimaryKeyFieldName(java.lang.Class) -> getPrimaryKeyFieldName
    java.lang.String getPrimaryKeyColumnName(java.lang.Class) -> getPrimaryKeyColumnName
com.lidroid.xutils.exception.BaseException -> com.lidroid.xutils.exception.BaseException:
    long serialVersionUID -> serialVersionUID
com.lidroid.xutils.exception.DbException -> com.lidroid.xutils.exception.DbException:
    long serialVersionUID -> serialVersionUID
com.lidroid.xutils.exception.HttpException -> com.lidroid.xutils.exception.HttpException:
    long serialVersionUID -> serialVersionUID
    int exceptionCode -> exceptionCode
    int getExceptionCode() -> getExceptionCode
com.lidroid.xutils.http.HttpCache -> com.lidroid.xutils.http.HttpCache:
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> mMemoryCache
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    long DEFAULT_EXPIRY_TIME -> DEFAULT_EXPIRY_TIME
    int cacheSize -> cacheSize
    long defaultExpiryTime -> defaultExpiryTime
    java.util.concurrent.ConcurrentHashMap httpMethod_enabled_map -> httpMethod_enabled_map
    void setCacheSize(int) -> setCacheSize
    void setDefaultExpiryTime(long) -> setDefaultExpiryTime
    long getDefaultExpiryTime() -> getDefaultExpiryTime
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.lang.String,long) -> put
    java.lang.String get(java.lang.String) -> get
    void clear() -> clear
    boolean isEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod) -> isEnabled
    boolean isEnabled(java.lang.String) -> isEnabled
    void setEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,boolean) -> setEnabled
com.lidroid.xutils.http.HttpCache$1 -> com.lidroid.xutils.http.HttpCache$1:
    com.lidroid.xutils.http.HttpCache this$0 -> this$0
    int sizeOf(java.lang.String,java.lang.String) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.lidroid.xutils.http.HttpHandler -> com.lidroid.xutils.http.HttpHandler:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    org.apache.http.client.methods.HttpRequestBase request -> request
    boolean isUploading -> isUploading
    com.lidroid.xutils.http.callback.RequestCallBack callback -> callback
    int retriedCount -> retriedCount
    java.lang.String fileSavePath -> fileSavePath
    boolean isDownloadingFile -> isDownloadingFile
    boolean autoResume -> autoResume
    boolean autoRename -> autoRename
    java.lang.String charset -> charset
    com.lidroid.xutils.http.HttpHandler$State state -> state
    long expiry -> expiry
    int UPDATE_START -> UPDATE_START
    int UPDATE_LOADING -> UPDATE_LOADING
    int UPDATE_FAILURE -> UPDATE_FAILURE
    int UPDATE_SUCCESS -> UPDATE_SUCCESS
    long lastUpdateTime -> lastUpdateTime
    com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler notUseApacheRedirectHandler -> notUseApacheRedirectHandler
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> setHttpRedirectHandler
    com.lidroid.xutils.http.HttpHandler$State getState() -> getState
    void setExpiry(long) -> setExpiry
    void setRequestCallBack(com.lidroid.xutils.http.callback.RequestCallBack) -> setRequestCallBack
    com.lidroid.xutils.http.callback.RequestCallBack getRequestCallBack() -> getRequestCallBack
    com.lidroid.xutils.http.ResponseInfo sendRequest(org.apache.http.client.methods.HttpRequestBase) -> sendRequest
    java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    com.lidroid.xutils.http.ResponseInfo handleResponse(org.apache.http.HttpResponse) -> handleResponse
    void cancel() -> cancel
    boolean updateProgress(long,long,boolean) -> updateProgress
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler -> com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.lidroid.xutils.http.HttpHandler$State -> com.lidroid.xutils.http.HttpHandler$State:
    com.lidroid.xutils.http.HttpHandler$State WAITING -> WAITING
    com.lidroid.xutils.http.HttpHandler$State STARTED -> STARTED
    com.lidroid.xutils.http.HttpHandler$State LOADING -> LOADING
    com.lidroid.xutils.http.HttpHandler$State FAILURE -> FAILURE
    com.lidroid.xutils.http.HttpHandler$State CANCELLED -> CANCELLED
    com.lidroid.xutils.http.HttpHandler$State SUCCESS -> SUCCESS
    int value -> value
    com.lidroid.xutils.http.HttpHandler$State[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.http.HttpHandler$State valueOf(int) -> valueOf
    int value() -> value
    com.lidroid.xutils.http.HttpHandler$State[] values() -> values
    com.lidroid.xutils.http.HttpHandler$State valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.RequestParams -> com.lidroid.xutils.http.RequestParams:
    java.lang.String charset -> charset
    java.util.List headers -> headers
    java.util.List queryStringParams -> queryStringParams
    org.apache.http.HttpEntity bodyEntity -> bodyEntity
    java.util.List bodyParams -> bodyParams
    java.util.HashMap fileParams -> fileParams
    com.lidroid.xutils.task.Priority priority -> priority
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    java.lang.String getCharset() -> getCharset
    void setContentType(java.lang.String) -> setContentType
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void addHeaders(java.util.List) -> addHeaders
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(java.util.List) -> setHeaders
    void addQueryStringParameter(java.lang.String,java.lang.String) -> addQueryStringParameter
    void addQueryStringParameter(org.apache.http.NameValuePair) -> addQueryStringParameter
    void addQueryStringParameter(java.util.List) -> addQueryStringParameter
    void addBodyParameter(java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(org.apache.http.NameValuePair) -> addBodyParameter
    void addBodyParameter(java.util.List) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String,java.lang.String) -> addBodyParameter
    void setBodyEntity(org.apache.http.HttpEntity) -> setBodyEntity
    org.apache.http.HttpEntity getEntity() -> getEntity
    java.util.List getQueryStringParams() -> getQueryStringParams
    java.util.List getHeaders() -> getHeaders
com.lidroid.xutils.http.RequestParams$HeaderItem -> com.lidroid.xutils.http.RequestParams$HeaderItem:
    boolean overwrite -> overwrite
    org.apache.http.Header header -> header
    com.lidroid.xutils.http.RequestParams this$0 -> this$0
com.lidroid.xutils.http.ResponseInfo -> com.lidroid.xutils.http.ResponseInfo:
    org.apache.http.HttpResponse response -> response
    java.lang.Object result -> result
    boolean resultFormCache -> resultFormCache
    java.util.Locale locale -> locale
    int statusCode -> statusCode
    org.apache.http.ProtocolVersion protocolVersion -> protocolVersion
    java.lang.String reasonPhrase -> reasonPhrase
    long contentLength -> contentLength
    org.apache.http.Header contentType -> contentType
    org.apache.http.Header contentEncoding -> contentEncoding
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
com.lidroid.xutils.http.ResponseStream -> com.lidroid.xutils.http.ResponseStream:
    org.apache.http.HttpResponse baseResponse -> baseResponse
    java.io.InputStream baseStream -> baseStream
    java.lang.String charset -> charset
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    long expiry -> expiry
    java.lang.String _directResult -> _directResult
    java.lang.String getRequestUrl() -> getRequestUrl
    java.lang.String getRequestMethod() -> getRequestMethod
    void setRequestMethod(java.lang.String) -> setRequestMethod
    java.io.InputStream getBaseStream() -> getBaseStream
    org.apache.http.HttpResponse getBaseResponse() -> getBaseResponse
    int getStatusCode() -> getStatusCode
    java.util.Locale getLocale() -> getLocale
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String readString() -> readString
    void readFile(java.lang.String) -> readFile
    int read() -> read
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.SyncHttpHandler -> com.lidroid.xutils.http.SyncHttpHandler:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    java.lang.String charset -> charset
    int retriedTimes -> retriedTimes
    long expiry -> expiry
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> setHttpRedirectHandler
    void setExpiry(long) -> setExpiry
    com.lidroid.xutils.http.ResponseStream sendRequest(org.apache.http.client.methods.HttpRequestBase) -> sendRequest
    com.lidroid.xutils.http.ResponseStream handleResponse(org.apache.http.HttpResponse) -> handleResponse
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler -> com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> getDirectRequest
com.lidroid.xutils.http.callback.FileDownloadHandler -> com.lidroid.xutils.http.callback.FileDownloadHandler:
    java.io.File handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String,boolean,java.lang.String) -> handleEntity
com.lidroid.xutils.http.callback.HttpRedirectHandler -> com.lidroid.xutils.http.callback.HttpRedirectHandler:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> getDirectRequest
com.lidroid.xutils.http.callback.RequestCallBack -> com.lidroid.xutils.http.callback.RequestCallBack:
    int DEFAULT_RATE -> DEFAULT_RATE
    int MIN_RATE -> MIN_RATE
    java.lang.String requestUrl -> requestUrl
    java.lang.Object userTag -> userTag
    int rate -> rate
    int getRate() -> getRate
    void setRate(int) -> setRate
    java.lang.Object getUserTag() -> getUserTag
    void setUserTag(java.lang.Object) -> setUserTag
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void onStart() -> onStart
    void onCancelled() -> onCancelled
    void onLoading(long,long,boolean) -> onLoading
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
com.lidroid.xutils.http.callback.RequestCallBackHandler -> com.lidroid.xutils.http.callback.RequestCallBackHandler:
    boolean updateProgress(long,long,boolean) -> updateProgress
com.lidroid.xutils.http.callback.StringDownloadHandler -> com.lidroid.xutils.http.callback.StringDownloadHandler:
    java.lang.String handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String) -> handleEntity
com.lidroid.xutils.http.client.DefaultSSLSocketFactory -> com.lidroid.xutils.http.client.DefaultSSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.security.KeyStore trustStore -> trustStore
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory instance -> instance
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory() -> getSocketFactory
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1 -> com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1:
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory this$0 -> this$0
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.http.client.HttpRequest -> com.lidroid.xutils.http.client.HttpRequest:
    org.apache.http.HttpEntity entity -> entity
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod method -> method
    com.lidroid.xutils.http.client.util.URIBuilder uriBuilder -> uriBuilder
    java.nio.charset.Charset uriCharset -> uriCharset
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(java.lang.String,java.lang.String) -> addQueryStringParameter
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(org.apache.http.NameValuePair) -> addQueryStringParameter
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParams(java.util.List) -> addQueryStringParams
    void setRequestParams(com.lidroid.xutils.http.RequestParams) -> setRequestParams
    void setRequestParams(com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setRequestParams
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    void setURI(java.lang.String) -> setURI
    java.lang.String getMethod() -> getMethod
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.HttpRequest$HttpMethod -> com.lidroid.xutils.http.client.HttpRequest$HttpMethod:
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod GET -> GET
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod POST -> POST
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod PUT -> PUT
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod HEAD -> HEAD
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod MOVE -> MOVE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod COPY -> COPY
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod DELETE -> DELETE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod OPTIONS -> OPTIONS
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod TRACE -> TRACE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod CONNECT -> CONNECT
    java.lang.String value -> value
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String toString() -> toString
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] values() -> values
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.RetryHandler -> com.lidroid.xutils.http.client.RetryHandler:
    int RETRY_SLEEP_INTERVAL -> RETRY_SLEEP_INTERVAL
    java.util.HashSet exceptionWhiteList -> exceptionWhiteList
    java.util.HashSet exceptionBlackList -> exceptionBlackList
    int maxRetries -> maxRetries
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.lidroid.xutils.http.client.entity.BodyParamsEntity -> com.lidroid.xutils.http.client.entity.BodyParamsEntity:
    byte[] content -> content
    boolean dirty -> dirty
    java.lang.String charset -> charset
    java.util.List params -> params
    com.lidroid.xutils.http.client.entity.BodyParamsEntity addParameter(java.lang.String,java.lang.String) -> addParameter
    com.lidroid.xutils.http.client.entity.BodyParamsEntity addParams(java.util.List) -> addParams
    void refreshContent() -> refreshContent
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.entity.DecompressingEntity -> com.lidroid.xutils.http.client.entity.DecompressingEntity:
    java.io.InputStream content -> content
    long uncompressedLength -> uncompressedLength
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    java.io.InputStream getDecompressingStream() -> getDecompressingStream
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.FileUploadEntity -> com.lidroid.xutils.http.client.entity.FileUploadEntity:
    long fileSize -> fileSize
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity -> com.lidroid.xutils.http.client.entity.GZipDecompressingEntity:
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity -> com.lidroid.xutils.http.client.entity.InputStreamUploadEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    long length -> length
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.UploadEntity -> com.lidroid.xutils.http.client.entity.UploadEntity:
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.multipart.FormBodyPart -> com.lidroid.xutils.http.client.multipart.FormBodyPart:
    java.lang.String name -> name
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader header -> header
    com.lidroid.xutils.http.client.multipart.content.ContentBody body -> body
    java.lang.String getName() -> getName
    com.lidroid.xutils.http.client.multipart.content.ContentBody getBody() -> getBody
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisposition(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateContentDisposition
    void generateContentType(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateContentType
    void generateTransferEncoding(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateTransferEncoding
com.lidroid.xutils.http.client.multipart.HttpMultipart -> com.lidroid.xutils.http.client.multipart.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode mode -> mode
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode -> $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.io.OutputStream) -> writeField
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    void setSubType(java.lang.String) -> setSubType
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> writeTo
    long getTotalLength() -> getTotalLength
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode() -> $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode
com.lidroid.xutils.http.client.multipart.HttpMultipartMode -> com.lidroid.xutils.http.client.multipart.HttpMultipartMode:
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode STRICT -> STRICT
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] values() -> values
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.multipart.MIME -> com.lidroid.xutils.http.client.multipart.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
com.lidroid.xutils.http.client.multipart.MinimalField -> com.lidroid.xutils.http.client.multipart.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader -> com.lidroid.xutils.http.client.multipart.MinimalFieldHeader:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(com.lidroid.xutils.http.client.multipart.MinimalField) -> addField
    java.util.List getFields() -> getFields
    com.lidroid.xutils.http.client.multipart.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(com.lidroid.xutils.http.client.multipart.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MultipartEntity -> com.lidroid.xutils.http.client.multipart.MultipartEntity:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> callBackInfo
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    com.lidroid.xutils.http.client.multipart.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String boundary -> boundary
    java.nio.charset.Charset charset -> charset
    java.lang.String multipartSubtype -> multipartSubtype
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
    void setMultipartSubtype(java.lang.String) -> setMultipartSubtype
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> addPart
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody) -> addPart
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody,java.lang.String) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo -> com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo DEFAULT -> DEFAULT
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    long totalLength -> totalLength
    long pos -> pos
    boolean doCallBack(boolean) -> doCallBack
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody -> com.lidroid.xutils.http.client.multipart.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> callBackInfo
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> setCallBackInfo
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody -> com.lidroid.xutils.http.client.multipart.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.client.multipart.content.ContentBody -> com.lidroid.xutils.http.client.multipart.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> setCallBackInfo
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor -> com.lidroid.xutils.http.client.multipart.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.client.multipart.content.FileBody -> com.lidroid.xutils.http.client.multipart.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
com.lidroid.xutils.http.client.multipart.content.InputStreamBody -> com.lidroid.xutils.http.client.multipart.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    long length -> length
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.lidroid.xutils.http.client.multipart.content.StringBody -> com.lidroid.xutils.http.client.multipart.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.lidroid.xutils.http.client.util.URIBuilder -> com.lidroid.xutils.http.client.util.URIBuilder:
    java.lang.String scheme -> scheme
    java.lang.String encodedSchemeSpecificPart -> encodedSchemeSpecificPart
    java.lang.String encodedAuthority -> encodedAuthority
    java.lang.String userInfo -> userInfo
    java.lang.String encodedUserInfo -> encodedUserInfo
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    java.lang.String encodedPath -> encodedPath
    java.lang.String encodedQuery -> encodedQuery
    java.util.List queryParams -> queryParams
    java.lang.String fragment -> fragment
    java.lang.String encodedFragment -> encodedFragment
    void digestURI(java.net.URI) -> digestURI
    java.util.List parseQuery(java.lang.String) -> parseQuery
    java.net.URI build(java.nio.charset.Charset) -> build
    java.lang.String buildString(java.nio.charset.Charset) -> buildString
    java.lang.String encodeUserInfo(java.lang.String,java.nio.charset.Charset) -> encodeUserInfo
    java.lang.String encodePath(java.lang.String,java.nio.charset.Charset) -> encodePath
    java.lang.String encodeQuery(java.util.List,java.nio.charset.Charset) -> encodeQuery
    java.lang.String encodeFragment(java.lang.String,java.nio.charset.Charset) -> encodeFragment
    com.lidroid.xutils.http.client.util.URIBuilder setScheme(java.lang.String) -> setScheme
    com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String) -> setUserInfo
    com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String,java.lang.String) -> setUserInfo
    com.lidroid.xutils.http.client.util.URIBuilder setHost(java.lang.String) -> setHost
    com.lidroid.xutils.http.client.util.URIBuilder setPort(int) -> setPort
    com.lidroid.xutils.http.client.util.URIBuilder setPath(java.lang.String) -> setPath
    com.lidroid.xutils.http.client.util.URIBuilder setQuery(java.lang.String) -> setQuery
    com.lidroid.xutils.http.client.util.URIBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    com.lidroid.xutils.http.client.util.URIBuilder setParameter(java.lang.String,java.lang.String) -> setParameter
    com.lidroid.xutils.http.client.util.URIBuilder setFragment(java.lang.String) -> setFragment
    java.lang.String getScheme() -> getScheme
    java.lang.String getUserInfo() -> getUserInfo
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    java.util.List getQueryParams() -> getQueryParams
    java.lang.String getFragment() -> getFragment
    java.lang.String normalizePath(java.lang.String) -> normalizePath
com.lidroid.xutils.http.client.util.URLEncodedUtils -> com.lidroid.xutils.http.client.util.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String PARAMETER_SEPARATOR -> PARAMETER_SEPARATOR
    java.lang.String NAME_VALUE_SEPARATOR -> NAME_VALUE_SEPARATOR
    char[] DELIM -> DELIM
    java.util.BitSet UNRESERVED -> UNRESERVED
    java.util.BitSet PUNCT -> PUNCT
    java.util.BitSet USERINFO -> USERINFO
    java.util.BitSet PATHSAFE -> PATHSAFE
    java.util.BitSet FRAGMENT -> FRAGMENT
    java.util.BitSet RESERVED -> RESERVED
    java.util.BitSet URLENCODER -> URLENCODER
    int RADIX -> RADIX
    boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    java.util.List parse(java.net.URI) -> parse
    void parse(java.util.List,java.util.Scanner) -> parse
    java.util.List parse(java.lang.String) -> parse
    java.lang.String format(java.util.List,java.lang.String) -> format
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> format
    java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> urlencode
    java.lang.String urldecode(java.lang.String,java.nio.charset.Charset,boolean) -> urldecode
    java.lang.String decodeFormFields(java.lang.String,java.lang.String) -> decodeFormFields
    java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset) -> decodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> encodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> encodeFormFields
    java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> encUserInfo
    java.lang.String encFragment(java.lang.String,java.nio.charset.Charset) -> encFragment
    java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> encPath
com.lidroid.xutils.task.Node -> com.lidroid.xutils.task.Node:
    boolean valueAsT -> valueAsT
    com.lidroid.xutils.task.PriorityObject value -> value
    com.lidroid.xutils.task.Node next -> next
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
com.lidroid.xutils.task.Priority -> com.lidroid.xutils.task.Priority:
    com.lidroid.xutils.task.Priority UI_TOP -> UI_TOP
    com.lidroid.xutils.task.Priority UI_NORMAL -> UI_NORMAL
    com.lidroid.xutils.task.Priority UI_LOW -> UI_LOW
    com.lidroid.xutils.task.Priority DEFAULT -> DEFAULT
    com.lidroid.xutils.task.Priority BG_TOP -> BG_TOP
    com.lidroid.xutils.task.Priority BG_NORMAL -> BG_NORMAL
    com.lidroid.xutils.task.Priority BG_LOW -> BG_LOW
    com.lidroid.xutils.task.Priority[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.task.Priority[] values() -> values
    com.lidroid.xutils.task.Priority valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.task.PriorityAsyncTask -> com.lidroid.xutils.task.PriorityAsyncTask:
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    boolean mExecuteInvoked -> mExecuteInvoked
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> mCancelled
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    com.lidroid.xutils.task.Priority priority -> priority
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    com.lidroid.xutils.task.PriorityAsyncTask execute(java.lang.Object[]) -> execute
    com.lidroid.xutils.task.PriorityAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void execute(java.lang.Runnable,com.lidroid.xutils.task.Priority) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    void access$0(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$0
    java.util.concurrent.atomic.AtomicBoolean access$1(com.lidroid.xutils.task.PriorityAsyncTask) -> access$1
    java.lang.Object access$2(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$2
    void access$3(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$3
com.lidroid.xutils.task.PriorityAsyncTask$1 -> com.lidroid.xutils.task.PriorityAsyncTask$1:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
com.lidroid.xutils.task.PriorityAsyncTask$2 -> com.lidroid.xutils.task.PriorityAsyncTask$2:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> this$0
    void done() -> done
com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult -> com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult:
    com.lidroid.xutils.task.PriorityAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler -> com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable -> com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
com.lidroid.xutils.task.PriorityExecutor -> com.lidroid.xutils.task.PriorityExecutor:
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue mPoolWorkQueue -> mPoolWorkQueue
    java.util.concurrent.ThreadPoolExecutor mThreadPoolExecutor -> mThreadPoolExecutor
    int getPoolSize() -> getPoolSize
    void setPoolSize(int) -> setPoolSize
    boolean isBusy() -> isBusy
    void execute(java.lang.Runnable) -> execute
com.lidroid.xutils.task.PriorityExecutor$1 -> com.lidroid.xutils.task.PriorityExecutor$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.lidroid.xutils.task.PriorityObject -> com.lidroid.xutils.task.PriorityObject:
    com.lidroid.xutils.task.Priority priority -> priority
    java.lang.Object obj -> obj
com.lidroid.xutils.task.PriorityObjectBlockingQueue -> com.lidroid.xutils.task.PriorityObjectBlockingQueue:
    long serialVersionUID -> serialVersionUID
    int capacity -> capacity
    java.util.concurrent.atomic.AtomicInteger count -> count
    com.lidroid.xutils.task.Node head -> head
    com.lidroid.xutils.task.Node last -> last
    java.util.concurrent.locks.ReentrantLock takeLock -> takeLock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.ReentrantLock putLock -> putLock
    java.util.concurrent.locks.Condition notFull -> notFull
    void signalNotEmpty() -> signalNotEmpty
    void signalNotFull() -> signalNotFull
    java.lang.Object opQueue(com.lidroid.xutils.task.Node) -> opQueue
    void _enqueue(com.lidroid.xutils.task.Node) -> _enqueue
    java.lang.Object _dequeue() -> _dequeue
    void fullyLock() -> fullyLock
    void fullyUnlock() -> fullyUnlock
    int size() -> size
    int remainingCapacity() -> remainingCapacity
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    boolean offer(java.lang.Object) -> offer
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object poll() -> poll
    java.lang.Object peek() -> peek
    void unlink(com.lidroid.xutils.task.Node,com.lidroid.xutils.task.Node) -> unlink
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void clear() -> clear
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    java.util.Iterator iterator() -> iterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr -> com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr:
    com.lidroid.xutils.task.Node current -> current
    com.lidroid.xutils.task.Node lastRet -> lastRet
    java.lang.Object currentElement -> currentElement
    com.lidroid.xutils.task.PriorityObjectBlockingQueue this$0 -> this$0
    boolean hasNext() -> hasNext
    com.lidroid.xutils.task.Node nextNode(com.lidroid.xutils.task.Node) -> nextNode
    java.lang.Object next() -> next
    void remove() -> remove
com.lidroid.xutils.task.PriorityRunnable -> com.lidroid.xutils.task.PriorityRunnable:
    void run() -> run
com.lidroid.xutils.task.TaskHandler -> com.lidroid.xutils.task.TaskHandler:
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    boolean isCancelled() -> isCancelled
com.lidroid.xutils.util.CharsetUtils -> com.lidroid.xutils.util.CharsetUtils:
    java.lang.String DEFAULT_ENCODING_CHARSET -> DEFAULT_ENCODING_CHARSET
    java.util.List SUPPORT_CHARSET -> SUPPORT_CHARSET
    java.lang.String toCharset(java.lang.String,java.lang.String,int) -> toCharset
    java.lang.String getEncoding(java.lang.String,int) -> getEncoding
    boolean isCharset(java.lang.String,java.lang.String,int) -> isCharset
com.lidroid.xutils.util.DoubleKeyValueMap -> com.lidroid.xutils.util.DoubleKeyValueMap:
    java.util.concurrent.ConcurrentHashMap k1_k2V_map -> k1_k2V_map
    void put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    java.util.Set getFirstKeys() -> getFirstKeys
    java.util.concurrent.ConcurrentHashMap get(java.lang.Object) -> get
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.util.Collection getAllValues(java.lang.Object) -> getAllValues
    java.util.Collection getAllValues() -> getAllValues
    boolean containsKey(java.lang.Object,java.lang.Object) -> containsKey
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    void remove(java.lang.Object) -> remove
    void remove(java.lang.Object,java.lang.Object) -> remove
    void clear() -> clear
com.lidroid.xutils.util.IOUtils -> com.lidroid.xutils.util.IOUtils:
    void closeQuietly(java.io.Closeable) -> closeQuietly
    void closeQuietly(android.database.Cursor) -> closeQuietly
com.lidroid.xutils.util.LogUtils -> com.lidroid.xutils.util.LogUtils:
    java.lang.String customTagPrefix -> customTagPrefix
    boolean allowD -> allowD
    boolean allowE -> allowE
    boolean allowI -> allowI
    boolean allowV -> allowV
    boolean allowW -> allowW
    boolean allowWtf -> allowWtf
    com.lidroid.xutils.util.LogUtils$CustomLogger customLogger -> customLogger
    java.lang.String generateTag(java.lang.StackTraceElement) -> generateTag
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.Throwable) -> w
    void wtf(java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.Throwable) -> wtf
com.lidroid.xutils.util.LogUtils$CustomLogger -> com.lidroid.xutils.util.LogUtils$CustomLogger:
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void wtf(java.lang.String,java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
com.lidroid.xutils.util.MimeTypeUtils -> com.lidroid.xutils.util.MimeTypeUtils:
    java.lang.String getMimeType(java.lang.String) -> getMimeType
com.lidroid.xutils.util.OtherUtils -> com.lidroid.xutils.util.OtherUtils:
    int STRING_BUFFER_LENGTH -> STRING_BUFFER_LENGTH
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> sslSocketFactory
    java.lang.String getUserAgent(android.content.Context) -> getUserAgent
    java.lang.String getDiskCacheDir(android.content.Context,java.lang.String) -> getDiskCacheDir
    long getAvailableSpace(java.io.File) -> getAvailableSpace
    boolean isSupportRange(org.apache.http.HttpResponse) -> isSupportRange
    java.lang.String getFileNameFromHttpResponse(org.apache.http.HttpResponse) -> getFileNameFromHttpResponse
    java.nio.charset.Charset getCharsetFromHttpRequest(org.apache.http.client.methods.HttpRequestBase) -> getCharsetFromHttpRequest
    long sizeOfString(java.lang.String,java.lang.String) -> sizeOfString
    java.lang.String getSubString(java.lang.String,int,int) -> getSubString
    java.lang.StackTraceElement getCurrentStackTraceElement() -> getCurrentStackTraceElement
    java.lang.StackTraceElement getCallerStackTraceElement() -> getCallerStackTraceElement
    void trustAllHttpsURLConnection() -> trustAllHttpsURLConnection
com.lidroid.xutils.util.OtherUtils$1 -> com.lidroid.xutils.util.OtherUtils$1:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.util.PreferencesCookieStore -> com.lidroid.xutils.util.PreferencesCookieStore:
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    org.apache.http.cookie.Cookie getCookie(java.lang.String) -> getCookie
    java.lang.String encodeCookie(com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie) -> encodeCookie
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie -> com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    com.lidroid.xutils.util.PreferencesCookieStore this$0 -> this$0
    org.apache.http.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.lidroid.xutils.view.EventListenerManager -> com.lidroid.xutils.view.EventListenerManager:
    com.lidroid.xutils.util.DoubleKeyValueMap listenerCache -> listenerCache
    void addEventMethod(com.lidroid.xutils.view.ViewFinder,com.lidroid.xutils.view.ViewInjectInfo,java.lang.annotation.Annotation,java.lang.Object,java.lang.reflect.Method) -> addEventMethod
com.lidroid.xutils.view.EventListenerManager$DynamicHandler -> com.lidroid.xutils.view.EventListenerManager$DynamicHandler:
    java.lang.ref.WeakReference handlerRef -> handlerRef
    java.util.HashMap methodMap -> methodMap
    void addMethod(java.lang.String,java.lang.reflect.Method) -> addMethod
    java.lang.Object getHandler() -> getHandler
    void setHandler(java.lang.Object) -> setHandler
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.lidroid.xutils.view.ResLoader -> com.lidroid.xutils.view.ResLoader:
    int[] $SWITCH_TABLE$com$lidroid$xutils$view$ResType -> $SWITCH_TABLE$com$lidroid$xutils$view$ResType
    java.lang.Object loadRes(com.lidroid.xutils.view.ResType,android.content.Context,int) -> loadRes
    int[] $SWITCH_TABLE$com$lidroid$xutils$view$ResType() -> $SWITCH_TABLE$com$lidroid$xutils$view$ResType
com.lidroid.xutils.view.ResType -> com.lidroid.xutils.view.ResType:
    com.lidroid.xutils.view.ResType Animation -> Animation
    com.lidroid.xutils.view.ResType Boolean -> Boolean
    com.lidroid.xutils.view.ResType Color -> Color
    com.lidroid.xutils.view.ResType ColorStateList -> ColorStateList
    com.lidroid.xutils.view.ResType Dimension -> Dimension
    com.lidroid.xutils.view.ResType DimensionPixelOffset -> DimensionPixelOffset
    com.lidroid.xutils.view.ResType DimensionPixelSize -> DimensionPixelSize
    com.lidroid.xutils.view.ResType Drawable -> Drawable
    com.lidroid.xutils.view.ResType Integer -> Integer
    com.lidroid.xutils.view.ResType IntArray -> IntArray
    com.lidroid.xutils.view.ResType Movie -> Movie
    com.lidroid.xutils.view.ResType String -> String
    com.lidroid.xutils.view.ResType StringArray -> StringArray
    com.lidroid.xutils.view.ResType Text -> Text
    com.lidroid.xutils.view.ResType TextArray -> TextArray
    com.lidroid.xutils.view.ResType Xml -> Xml
    com.lidroid.xutils.view.ResType[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.view.ResType[] values() -> values
    com.lidroid.xutils.view.ResType valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.view.ViewFinder -> com.lidroid.xutils.view.ViewFinder:
    android.view.View view -> view
    android.app.Activity activity -> activity
    android.preference.PreferenceGroup preferenceGroup -> preferenceGroup
    android.preference.PreferenceActivity preferenceActivity -> preferenceActivity
    android.view.View findViewById(int) -> findViewById
    android.view.View findViewByInfo(com.lidroid.xutils.view.ViewInjectInfo) -> findViewByInfo
    android.view.View findViewById(int,int) -> findViewById
    android.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    android.content.Context getContext() -> getContext
com.lidroid.xutils.view.ViewInjectInfo -> com.lidroid.xutils.view.ViewInjectInfo:
    java.lang.Object value -> value
    int parentId -> parentId
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lidroid.xutils.view.annotation.ContentView -> com.lidroid.xutils.view.annotation.ContentView:
    int value() -> value
com.lidroid.xutils.view.annotation.PreferenceInject -> com.lidroid.xutils.view.annotation.PreferenceInject:
    java.lang.String value() -> value
com.lidroid.xutils.view.annotation.ResInject -> com.lidroid.xutils.view.annotation.ResInject:
    int id() -> id
    com.lidroid.xutils.view.ResType type() -> type
com.lidroid.xutils.view.annotation.ViewInject -> com.lidroid.xutils.view.annotation.ViewInject:
    int value() -> value
    int parentId() -> parentId
com.lidroid.xutils.view.annotation.event.EventBase -> com.lidroid.xutils.view.annotation.event.EventBase:
    java.lang.Class listenerType() -> listenerType
    java.lang.String listenerSetter() -> listenerSetter
    java.lang.String methodName() -> methodName
com.lidroid.xutils.view.annotation.event.OnChildClick -> com.lidroid.xutils.view.annotation.event.OnChildClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnClick -> com.lidroid.xutils.view.annotation.event.OnClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange -> com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnFocusChange -> com.lidroid.xutils.view.annotation.event.OnFocusChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupClick -> com.lidroid.xutils.view.annotation.event.OnGroupClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupCollapse -> com.lidroid.xutils.view.annotation.event.OnGroupCollapse:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupExpand -> com.lidroid.xutils.view.annotation.event.OnGroupExpand:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemClick -> com.lidroid.xutils.view.annotation.event.OnItemClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemLongClick -> com.lidroid.xutils.view.annotation.event.OnItemLongClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemSelected -> com.lidroid.xutils.view.annotation.event.OnItemSelected:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnKey -> com.lidroid.xutils.view.annotation.event.OnKey:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnLongClick -> com.lidroid.xutils.view.annotation.event.OnLongClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnNothingSelected -> com.lidroid.xutils.view.annotation.event.OnNothingSelected:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnPreferenceChange -> com.lidroid.xutils.view.annotation.event.OnPreferenceChange:
    java.lang.String[] value() -> value
com.lidroid.xutils.view.annotation.event.OnPreferenceClick -> com.lidroid.xutils.view.annotation.event.OnPreferenceClick:
    java.lang.String[] value() -> value
com.lidroid.xutils.view.annotation.event.OnProgressChanged -> com.lidroid.xutils.view.annotation.event.OnProgressChanged:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange -> com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnScroll -> com.lidroid.xutils.view.annotation.event.OnScroll:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnScrollStateChanged -> com.lidroid.xutils.view.annotation.event.OnScrollStateChanged:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch -> com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch -> com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnTabChange -> com.lidroid.xutils.view.annotation.event.OnTabChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnTouch -> com.lidroid.xutils.view.annotation.event.OnTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.loongme.activity.R -> com.loongme.activity.a:
com.loongme.activity.R$styleable -> com.loongme.activity.b:
    int[] CircleImageView -> a
    int[] CirclePageIndicator -> b
    int[] LinePageIndicator -> c
    int[] TitlePageIndicator -> d
    int[] UnderlinePageIndicator -> e
    int[] ViewPagerIndicator -> f
com.loongme.activity.adapter.AdapterPerInfoMenuList -> com.loongme.activity.a.a:
    java.util.List items -> a
    android.content.Context mContext -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.loongme.activity.adapter.AdapterPerInfoMenuList$ViewHolder -> com.loongme.activity.a.b:
    android.widget.ImageView menu_icon -> a
    android.widget.TextView tx_menuName -> b
    com.loongme.activity.adapter.AdapterPerInfoMenuList this$0 -> c
com.loongme.activity.adapter.AdapterSpeakList -> com.loongme.activity.a.c:
    android.content.Context mContext -> a
    java.util.List datas -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.loongme.activity.adapter.AdapterSpeakList) -> a
com.loongme.activity.adapter.AdapterSpeakList$1 -> com.loongme.activity.a.d:
    com.loongme.activity.adapter.AdapterSpeakList this$0 -> a
    void onClick(android.view.View) -> onClick
com.loongme.activity.adapter.AdapterSpeakList$MyURLSpan -> com.loongme.activity.a.e:
    java.lang.String mUrl -> b
    com.loongme.activity.adapter.AdapterSpeakList this$0 -> a
    void onClick(android.view.View) -> onClick
com.loongme.activity.adapter.AdapterSpeakList$RobotViewHolder -> com.loongme.activity.a.f:
    android.widget.TextView tx_robot_speaktime -> a
    android.widget.TextView tx_robot_speakcontent -> b
    android.widget.ImageView image_robot_photo -> c
    com.loongme.activity.adapter.AdapterSpeakList this$0 -> d
com.loongme.activity.adapter.AdapterSpeakList$UserViewHolder -> com.loongme.activity.a.g:
    android.widget.TextView tx_user_speaktime -> a
    android.widget.TextView tx_user_speakcontent -> b
    android.widget.ImageView image_userPhoto -> c
    com.loongme.activity.adapter.AdapterSpeakList this$0 -> d
com.loongme.activity.adapter.AdapterSpeakMenuVP -> com.loongme.activity.a.h:
    java.lang.String[] CONTENT -> a
    int[] ICONS -> b
    com.loongme.activity.business.VoiceAssistantManager voiceAssistantManager -> c
    com.loongme.activity.base.MenuItemClickCallBack menuItemClickCallBack -> d
    android.support.v4.app.Fragment getItem(int) -> getItem
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    int getIconResId(int) -> getIconResId
    int getCount() -> getCount
com.loongme.activity.base.ApiClient -> com.loongme.activity.base.a:
    com.loopj.android.http.AsyncHttpClient client -> a
    com.loongme.activity.base.ApiClient apiClient -> b
    android.content.Context mContext -> c
    com.loongme.activity.base.ApiClient getInstance(android.content.Context) -> a
    void load(java.lang.String,java.lang.String,int,com.loongme.activity.base.AppHttpResponseCallBack) -> a
com.loongme.activity.base.AppHttpResponseCallBack -> com.loongme.activity.base.b:
    boolean handleSuccess(int,org.json.JSONObject,int) -> a
    boolean handleFailure(int,java.lang.String,java.lang.Throwable,int) -> a
com.loongme.activity.base.AppHttpResponseHandler -> com.loongme.activity.base.c:
    android.content.Context context -> a
    com.loongme.activity.base.AppHttpResponseCallBack callback -> b
    int flagRequest -> c
    void onStart() -> onStart
    void onProgress(int,int) -> onProgress
    void onRetry(int) -> onRetry
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],org.json.JSONObject) -> onSuccess
com.loongme.activity.base.AppManager -> com.loongme.activity.base.d:
    java.util.Stack activityStack -> a
    com.loongme.activity.base.AppManager instance -> b
    com.loongme.activity.base.AppManager getAppManager() -> a
    void addActivity(android.app.Activity) -> a
    void finishActivity(android.app.Activity) -> b
    void finishActivity(java.lang.Class) -> a
    void AppExit$faab20d() -> b
com.loongme.activity.base.BaseActivity -> com.loongme.activity.base.BaseActivity:
    android.app.Dialog progressDialog -> b
    java.util.List progressBarList -> c
    boolean isCanBack -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void regListener() -> c
    void initUI() -> d
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void finish() -> finish
    void onClick(android.view.View) -> onClick
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onBackPressed() -> onBackPressed
    void showProgress() -> e
    void dismissProgress() -> f
    boolean handleSuccess(int,org.json.JSONObject,int) -> a
    boolean handleFailure(int,java.lang.String,java.lang.Throwable,int) -> a
com.loongme.activity.base.BaseActivity$1 -> com.loongme.activity.base.e:
    com.loongme.activity.base.BaseActivity this$0 -> a
    void run() -> run
com.loongme.activity.base.BaseApplication -> com.loongme.activity.base.BaseApplication:
    boolean isLogin -> a
    void onCreate() -> onCreate
com.loongme.activity.base.BaseFragment -> com.loongme.activity.base.f:
    android.app.Dialog progressDialog -> a
    java.util.List progressBarList -> b
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void showProgress() -> a
    void dismissProgress() -> b
    void onClick(android.view.View) -> onClick
    boolean handleSuccess(int,org.json.JSONObject,int) -> a
    boolean handleFailure(int,java.lang.String,java.lang.Throwable,int) -> a
com.loongme.activity.base.MenuItemClickCallBack -> com.loongme.activity.base.g:
    void onMoreMenuItemClick(com.loongme.activity.bean.MoreMenuItem) -> a
com.loongme.activity.base.RegisteNextCallBack -> com.loongme.activity.base.h:
    void onRegisteNext(java.lang.String) -> a
com.loongme.activity.bean.MerchantBonkeMsg -> com.loongme.activity.bean.MerchantBonkeMsg:
    java.lang.String busContact -> busContact
    java.lang.String busGhone -> busGhone
    java.lang.String busDesc -> busDesc
    java.lang.String busIntroduce -> busIntroduce
    java.lang.String busLicense -> busLicense
    java.lang.String busName -> busName
    java.lang.String busAddress -> busAddress
    java.lang.String getBusContact() -> getBusContact
    void setBusContact(java.lang.String) -> setBusContact
    java.lang.String getBusGhone() -> getBusGhone
    void setBusGhone(java.lang.String) -> setBusGhone
    java.lang.String getBusDesc() -> getBusDesc
    void setBusDesc(java.lang.String) -> setBusDesc
    java.lang.String getBusIntroduce() -> getBusIntroduce
    void setBusIntroduce(java.lang.String) -> setBusIntroduce
    java.lang.String getBusLicense() -> getBusLicense
    void setBusLicense(java.lang.String) -> setBusLicense
    java.lang.String getBusName() -> getBusName
    void setBusName(java.lang.String) -> setBusName
    java.lang.String getBusAddress() -> getBusAddress
    void setBusAddress(java.lang.String) -> setBusAddress
    java.lang.String toString() -> toString
com.loongme.activity.bean.MoreMenuIndicator -> com.loongme.activity.bean.MoreMenuIndicator:
    java.lang.String indicatorName -> indicatorName
    int indicatorIconResId -> indicatorIconResId
    java.util.List menuItems -> menuItems
    java.lang.String getIndicatorName() -> getIndicatorName
    void setIndicatorName(java.lang.String) -> setIndicatorName
    int getIndicatorIconResId() -> getIndicatorIconResId
    void setIndicatorIconResId(int) -> setIndicatorIconResId
    java.util.List getMenuItems() -> getMenuItems
    void setMenuItems(java.util.List) -> setMenuItems
com.loongme.activity.bean.MoreMenuItem -> com.loongme.activity.bean.MoreMenuItem:
    java.lang.String menuName -> menuName
    int menuIconResId -> menuIconResId
    java.lang.String menuRedirectUrl -> menuRedirectUrl
    java.lang.String getMenuName() -> getMenuName
    void setMenuName(java.lang.String) -> setMenuName
    int getMenuIconResId() -> getMenuIconResId
    void setMenuIconResId(int) -> setMenuIconResId
    java.lang.String getMenuRedirectUrl() -> getMenuRedirectUrl
    void setMenuRedirectUrl(java.lang.String) -> setMenuRedirectUrl
com.loongme.activity.bean.PerInfoMenuItem -> com.loongme.activity.bean.PerInfoMenuItem:
    java.lang.String name -> name
    int iconResId -> iconResId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getIconResId() -> getIconResId
    void setIconResId(int) -> setIconResId
com.loongme.activity.bean.PersonalBonkeMsg -> com.loongme.activity.bean.PersonalBonkeMsg:
    java.lang.String persNname -> persNname
    java.lang.String persBack -> persBack
    java.lang.String persFront -> persFront
    java.lang.String persJob -> persJob
    java.lang.String persDesc -> persDesc
    java.lang.String persIntroduce -> persIntroduce
    java.lang.String getPersNname() -> getPersNname
    void setPersNname(java.lang.String) -> setPersNname
    java.lang.String getPersBack() -> getPersBack
    void setPersBack(java.lang.String) -> setPersBack
    java.lang.String getPersFront() -> getPersFront
    void setPersFront(java.lang.String) -> setPersFront
    java.lang.String getPersJob() -> getPersJob
    void setPersJob(java.lang.String) -> setPersJob
    java.lang.String getPersDesc() -> getPersDesc
    void setPersDesc(java.lang.String) -> setPersDesc
    java.lang.String getPersIntroduce() -> getPersIntroduce
    void setPersIntroduce(java.lang.String) -> setPersIntroduce
    java.lang.String toString() -> toString
com.loongme.activity.bean.SpeakItem -> com.loongme.activity.bean.SpeakItem:
    int id -> id
    java.lang.String speakerPhoto -> speakerPhoto
    java.lang.String speakerContent -> speakerContent
    java.lang.String speakTime -> speakTime
    int speakerType -> speakerType
    int getId() -> getId
    void setId(int) -> setId
    java.lang.String getSpeakerPhoto() -> getSpeakerPhoto
    void setSpeakerPhoto(java.lang.String) -> setSpeakerPhoto
    java.lang.String getSpeakerContent() -> getSpeakerContent
    void setSpeakerContent(java.lang.String) -> setSpeakerContent
    java.lang.String getSpeakTime() -> getSpeakTime
    void setSpeakTime(java.lang.String) -> setSpeakTime
    int getSpeakerType() -> getSpeakerType
    void setSpeakerType(int) -> setSpeakerType
    java.lang.String toString() -> toString
com.loongme.activity.bean.User -> com.loongme.activity.bean.User:
    java.lang.String userPhone -> userPhone
    java.lang.String userNickname -> userNickname
    java.lang.String userPassword -> userPassword
    java.lang.String userType -> userType
    java.lang.String relationType -> relationType
    java.lang.String relationAcct -> relationAcct
    java.lang.String relationIcon -> relationIcon
    java.lang.String userSex -> userSex
    int userId -> userId
    java.lang.String userPicture -> userPicture
    java.lang.String declaration -> declaration
    int auditStatus -> auditStatus
    java.util.ArrayList busMsgs -> busMsgs
    java.util.ArrayList persMsgs -> persMsgs
    byte[] readBytes(java.io.InputStream) -> readBytes
    java.lang.String readString(java.io.InputStream) -> readString
    java.lang.String getUserPhone() -> getUserPhone
    void setUserPhone(java.lang.String) -> setUserPhone
    java.lang.String getUserNickname() -> getUserNickname
    void setUserNickname(java.lang.String) -> setUserNickname
    java.lang.String getUserPassword() -> getUserPassword
    void setUserPassword(java.lang.String) -> setUserPassword
    java.lang.String getUserType() -> getUserType
    void setUserType(java.lang.String) -> setUserType
    java.lang.String getRelationType() -> getRelationType
    void setRelationType(java.lang.String) -> setRelationType
    java.lang.String getRelationAcct() -> getRelationAcct
    void setRelationAcct(java.lang.String) -> setRelationAcct
    java.lang.String getRelationIcon() -> getRelationIcon
    void setRelationIcon(java.lang.String) -> setRelationIcon
    java.lang.String getUserSex() -> getUserSex
    void setUserSex(java.lang.String) -> setUserSex
    int getUserId() -> getUserId
    void setUserId(int) -> setUserId
    java.lang.String getUserPicture() -> getUserPicture
    void setUserPicture(java.lang.String) -> setUserPicture
    java.lang.String getDeclaration() -> getDeclaration
    void setDeclaration(java.lang.String) -> setDeclaration
    int getAuditStatus() -> getAuditStatus
    void setAuditStatus(int) -> setAuditStatus
    java.util.ArrayList getBusMsgs() -> getBusMsgs
    void setBusMsgs(java.util.ArrayList) -> setBusMsgs
    java.util.ArrayList getPersMsgs() -> getPersMsgs
    void setPersMsgs(java.util.ArrayList) -> setPersMsgs
    java.lang.String toString() -> toString
com.loongme.activity.business.Helpers -> com.loongme.activity.business.a:
    void saveUserInfoToLocal(android.content.Context,com.loongme.activity.bean.User) -> a
    void saveBonkeStatusToLocal(android.content.Context,com.loongme.activity.enums.BonkeStatus) -> a
    com.loongme.activity.bean.User getUserInfo(android.content.Context) -> a
    void saveVoiceStatus(android.content.Context,boolean) -> a
    java.lang.Boolean getVoiceStatus(android.content.Context) -> b
com.loongme.activity.business.SSBonLocationService -> com.loongme.activity.business.SSBonLocationService:
    com.loongme.activity.business.SsbService requestManager -> a
    java.lang.String locationInfo -> b
    boolean getLocationSwitch -> c
    com.baidu.location.LocationClient locationClient -> d
    boolean startThreadOnce -> e
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    boolean access$0(com.loongme.activity.business.SSBonLocationService) -> a
    com.loongme.activity.business.SsbService access$1(com.loongme.activity.business.SSBonLocationService) -> b
    java.lang.String access$2(com.loongme.activity.business.SSBonLocationService) -> c
    void access$3(com.loongme.activity.business.SSBonLocationService,java.lang.String) -> a
    boolean access$4(com.loongme.activity.business.SSBonLocationService) -> d
    void access$5$154c361e(com.loongme.activity.business.SSBonLocationService) -> e
com.loongme.activity.business.SSBonLocationService$LocationThread -> com.loongme.activity.business.b:
    com.loongme.activity.business.SSBonLocationService this$0 -> a
    void run() -> run
com.loongme.activity.business.SSBonLocationService$SSBonLocationListener -> com.loongme.activity.business.c:
    com.loongme.activity.business.SSBonLocationService this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.loongme.activity.business.SsbService -> com.loongme.activity.business.d:
    java.lang.String TAG -> a
    java.lang.String ip -> b
    java.lang.String logMsg -> c
    java.net.Socket socket -> d
    java.io.BufferedWriter writer -> e
    java.net.InetSocketAddress isa -> f
    java.net.Socket getSocket() -> a
    java.lang.String ReceiveMsg(java.net.Socket) -> a
    void connecttoserver() -> b
    void SendMsg(java.net.Socket,java.lang.String) -> a
    java.lang.String stringFill$1bca37db(java.lang.String) -> a
com.loongme.activity.business.VoiceAssistantManager -> com.loongme.activity.business.e:
    java.lang.String[] CONTENT -> b
    int[] ICONS -> c
    java.lang.String[] URLS -> d
    com.loongme.activity.business.VoiceAssistantManager instance -> a
    android.content.Context mContext -> e
    com.loongme.activity.business.VoiceAssistantManager getInstance(android.content.Context) -> a
    java.util.List getDatasWithPostion(int) -> a
    java.lang.String dealWelcomeMsg(java.lang.String) -> a
    void initSpeechToText(com.iflytek.cloud.ui.RecognizerDialog) -> a
    void initTextToSpeech(com.iflytek.cloud.SpeechSynthesizer) -> a
    android.webkit.WebView getH5WebView(android.content.Context) -> b
com.loongme.activity.common.Configuration -> com.loongme.activity.b.a:
    java.lang.String SDCARD_PATH -> a
    java.lang.String Errorlogs_Directory -> b
    java.lang.String PHOTO_SAVEPATH -> c
    java.lang.String BUSLICENSE_SAVEPATH -> d
    java.lang.String IDCARD_MAINSIDE_SAVEPATH -> e
    java.lang.String IDCARD_REVERSESIDE_SAVEPATH -> f
    java.lang.String SERVER_COVER_SAVEPATH -> g
    java.lang.String SERVER_WORK_SAVEPATH -> h
    java.lang.String getSDCardDirectory() -> a
com.loongme.activity.enums.BonkeStatus -> com.loongme.activity.enums.BonkeStatus:
    com.loongme.activity.enums.BonkeStatus BonkeChecking -> BonkeChecking
    com.loongme.activity.enums.BonkeStatus BonkeChecked -> BonkeChecked
    com.loongme.activity.enums.BonkeStatus BonkeUnChecked -> BonkeUnChecked
    com.loongme.activity.enums.BonkeStatus BonkeUnRegiste -> BonkeUnRegiste
    java.lang.String vaule -> vaule
    int code -> code
    com.loongme.activity.enums.BonkeStatus[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String valueByCode(int) -> valueByCode
    java.lang.String getVaule() -> getVaule
    void setVaule(java.lang.String) -> setVaule
    int getCode() -> getCode
    void setCode(int) -> setCode
    com.loongme.activity.enums.BonkeStatus[] values() -> values
    com.loongme.activity.enums.BonkeStatus valueOf(java.lang.String) -> valueOf
com.loongme.activity.enums.EnumBoolean -> com.loongme.activity.enums.EnumBoolean:
    com.loongme.activity.enums.EnumBoolean NO -> NO
    com.loongme.activity.enums.EnumBoolean YES -> YES
    int enumCode -> enumCode
    java.lang.String enumTitle -> enumTitle
    com.loongme.activity.enums.EnumBoolean[] ENUM$VALUES -> ENUM$VALUES
    int getEnumCode() -> getEnumCode
    java.lang.String getEnumTitle() -> getEnumTitle
    com.loongme.activity.enums.EnumBoolean valueOfByCode(int) -> valueOfByCode
    java.lang.String toString() -> toString
    com.loongme.activity.enums.EnumBoolean[] values() -> values
    com.loongme.activity.enums.EnumBoolean valueOf(java.lang.String) -> valueOf
com.loongme.activity.enums.SSBonServerStatus -> com.loongme.activity.enums.SSBonServerStatus:
    com.loongme.activity.enums.SSBonServerStatus ServerChecking -> ServerChecking
    com.loongme.activity.enums.SSBonServerStatus ServerChecked -> ServerChecked
    com.loongme.activity.enums.SSBonServerStatus ServerUnChecked -> ServerUnChecked
    com.loongme.activity.enums.SSBonServerStatus ServerDelete -> ServerDelete
    java.lang.String vaule -> vaule
    int code -> code
    com.loongme.activity.enums.SSBonServerStatus[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String valueByCode(int) -> valueByCode
    java.lang.String getVaule() -> getVaule
    void setVaule(java.lang.String) -> setVaule
    int getCode() -> getCode
    void setCode(int) -> setCode
    com.loongme.activity.enums.SSBonServerStatus[] values() -> values
    com.loongme.activity.enums.SSBonServerStatus valueOf(java.lang.String) -> valueOf
com.loongme.activity.enums.UserType -> com.loongme.activity.enums.UserType:
    com.loongme.activity.enums.UserType Normal -> Normal
    com.loongme.activity.enums.UserType Personal -> Personal
    com.loongme.activity.enums.UserType Merchant -> Merchant
    java.lang.String vaule -> vaule
    int code -> code
    com.loongme.activity.enums.UserType[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String valueByCode(int) -> valueByCode
    java.lang.String getVaule() -> getVaule
    void setVaule(java.lang.String) -> setVaule
    int getCode() -> getCode
    void setCode(int) -> setCode
    com.loongme.activity.enums.UserType[] values() -> values
    com.loongme.activity.enums.UserType valueOf(java.lang.String) -> valueOf
com.loongme.activity.ui.ActivityAboutUs -> com.loongme.activity.ui.ActivityAboutUs:
    android.widget.ImageButton btn_goback -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void initUI() -> d
    void regListener() -> c
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.ActivityAgreement -> com.loongme.activity.ui.ActivityAgreement:
    android.widget.ImageButton btn_goback -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void regListener() -> c
    void initUI() -> d
com.loongme.activity.ui.ActivityAgreement$1 -> com.loongme.activity.ui.a:
    com.loongme.activity.ui.ActivityAgreement this$0 -> a
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.ActivityFeedback -> com.loongme.activity.ui.ActivityFeedback:
    android.widget.ImageButton btn_goback -> b
    android.widget.Button bt_feedback_send -> c
    android.widget.EditText et_feedback -> d
    android.widget.EditText et_feedback_phone -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void initUI() -> d
    void regListener() -> c
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.ActivityForgetPassWord -> com.loongme.activity.ui.ActivityForgetPassWord:
    android.widget.ImageButton btn_goback -> b
    android.widget.EditText edit_username -> c
    android.widget.EditText edit_matchCode -> d
    android.widget.Button btn_getCode -> e
    android.widget.Button btn_next -> f
    cn.smssdk.EventHandler eventHandler -> g
    java.lang.Runnable timeRunnable -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void regListener() -> c
    void initUI() -> d
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    android.widget.Button access$0(com.loongme.activity.ui.ActivityForgetPassWord) -> a
    android.widget.EditText access$1(com.loongme.activity.ui.ActivityForgetPassWord) -> b
    java.lang.Runnable access$2(com.loongme.activity.ui.ActivityForgetPassWord) -> c
com.loongme.activity.ui.ActivityForgetPassWord$1 -> com.loongme.activity.ui.b:
    com.loongme.activity.ui.ActivityForgetPassWord this$0 -> a
    void run() -> run
    com.loongme.activity.ui.ActivityForgetPassWord access$0(com.loongme.activity.ui.ActivityForgetPassWord$1) -> a
com.loongme.activity.ui.ActivityForgetPassWord$1$1 -> com.loongme.activity.ui.c:
    com.loongme.activity.ui.ActivityForgetPassWord$1 this$1 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.loongme.activity.ui.ActivityForgetPassWord$2 -> com.loongme.activity.ui.d:
    com.loongme.activity.ui.ActivityForgetPassWord this$0 -> a
    void afterEvent(int,int,java.lang.Object) -> afterEvent
    com.loongme.activity.ui.ActivityForgetPassWord access$0(com.loongme.activity.ui.ActivityForgetPassWord$2) -> a
com.loongme.activity.ui.ActivityForgetPassWord$2$1 -> com.loongme.activity.ui.e:
    com.loongme.activity.ui.ActivityForgetPassWord$2 this$1 -> a
    int val$event -> b
    void run() -> run
com.loongme.activity.ui.ActivityGuest -> com.loongme.activity.ui.ActivityGuest:
    com.loongme.activity.enums.UserType bonkeType -> c
    com.loongme.activity.widgets.CustomProgressDialog progressDialog -> b
    android.widget.ImageView iv_fanhuig -> d
    android.widget.ImageView iv_business_license -> e
    android.widget.ImageView iv_identity_just -> f
    android.widget.ImageView iv_identity_against -> g
    android.widget.RadioGroup group2 -> h
    android.widget.RadioButton rb_gr -> i
    android.widget.RadioButton rb_sj -> j
    android.widget.LinearLayout ll_gr -> k
    android.widget.ScrollView sl_sj -> l
    android.widget.Button bt_submit -> m
    android.widget.Button bt_submit2 -> n
    android.widget.RelativeLayout rl_sj_ms -> o
    android.widget.RelativeLayout rl_sj_js -> p
    android.widget.RelativeLayout rl_gr_pj -> q
    android.widget.RelativeLayout rl_gr_js -> r
    android.content.SharedPreferences mPreferences -> s
    java.lang.String Id -> t
    android.widget.EditText et_busName -> u
    android.widget.EditText et_busAddress -> v
    android.widget.EditText et_busContact -> w
    android.widget.EditText et_busPhone -> x
    android.widget.EditText et_busGhone -> y
    android.widget.EditText edit_personalName -> z
    android.widget.EditText edit_personalJob -> A
    android.widget.EditText edit_personalPhone -> B
    java.lang.String personalName -> C
    java.lang.String personalJob -> D
    java.lang.String personalMobile -> E
    java.lang.String personalJudge -> F
    java.lang.String personalDes -> G
    java.lang.String merchant_describe -> H
    java.lang.String merchant_introduce -> I
    java.lang.String busGhone -> J
    java.lang.String busPhone -> K
    java.lang.String busContact -> L
    java.lang.String busAddress -> M
    java.lang.String busName -> N
    android.content.SharedPreferences spf -> O
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void deleteCache(java.lang.String) -> b
    android.widget.RadioButton access$0(com.loongme.activity.ui.ActivityGuest) -> a
    android.widget.LinearLayout access$1(com.loongme.activity.ui.ActivityGuest) -> b
    android.widget.ScrollView access$2(com.loongme.activity.ui.ActivityGuest) -> c
    void access$3(com.loongme.activity.ui.ActivityGuest,com.loongme.activity.enums.UserType) -> a
    android.widget.RadioButton access$4(com.loongme.activity.ui.ActivityGuest) -> d
    void access$5$105ab8f8(java.lang.String) -> a
com.loongme.activity.ui.ActivityGuest$1 -> com.loongme.activity.ui.f:
    com.loongme.activity.ui.ActivityGuest this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.loongme.activity.ui.ActivityGuest$2 -> com.loongme.activity.ui.g:
    com.loongme.activity.ui.ActivityGuest this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.loongme.activity.ui.ActivityGuest$3 -> com.loongme.activity.ui.h:
    com.loongme.activity.ui.ActivityGuest this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.loongme.activity.ui.ActivityLogin -> com.loongme.activity.ui.ActivityLogin:
    android.widget.ImageButton btn_goback -> f
    android.widget.EditText edit_username -> g
    android.widget.EditText edit_password -> h
    android.widget.TextView view_forgetpass -> i
    android.widget.Button btn_login -> j
    android.widget.TextView tx_registe -> k
    android.widget.ImageButton btn_oauth_sina -> l
    cn.sharesdk.framework.Platform weibo -> m
    java.lang.String id -> b
    java.lang.String name -> c
    java.lang.String description -> d
    java.lang.String profile_image_url -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void regListener() -> c
    void initUI() -> d
    void onClick(android.view.View) -> onClick
    boolean handleSuccess(int,org.json.JSONObject,int) -> a
    boolean handleFailure(int,java.lang.String,java.lang.Throwable,int) -> a
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
com.loongme.activity.ui.ActivityLogin$1 -> com.loongme.activity.ui.i:
    com.loongme.activity.ui.ActivityLogin this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.loongme.activity.ui.ActivityMain -> com.loongme.activity.ui.ActivityMain:
    android.widget.ImageView btn_voiceSwitch -> b
    android.widget.ImageButton btn_setting -> c
    int keyBackClickCount -> d
    android.widget.ListView listview_speak -> e
    java.util.List datas -> f
    com.loongme.activity.adapter.AdapterSpeakList adapterSpeakList -> g
    com.loongme.activity.business.VoiceAssistantManager voiceAssistantManager -> h
    android.view.View rootLayout -> i
    int screenHeight -> j
    int screenWidth -> k
    int keyHeight -> l
    android.widget.ImageView img_voice -> m
    android.widget.ImageView img_text -> n
    android.widget.EditText edit_speakContent -> o
    android.widget.ImageView btn_showMenu -> p
    android.widget.Button btn_recordAudio -> q
    android.widget.Button btn_send -> r
    android.widget.LinearLayout layout_speak_menu -> s
    android.support.v4.view.ViewPager vp_speak_menu -> t
    com.viewpagerindicator.TabPageIndicator tabPageIndicator -> u
    boolean isMenuShowing -> v
    com.loongme.activity.business.SsbService iService -> w
    java.lang.String IMEI -> x
    android.content.Intent ssBonLocationServiceIntent -> y
    com.lidroid.xutils.DbUtils db -> z
    com.iflytek.cloud.ui.RecognizerDialog mIatDialog -> A
    java.lang.StringBuffer userSpeakContent -> B
    com.iflytek.cloud.SpeechSynthesizer mTts -> C
    com.loongme.activity.widgets.CustomProgressDialog progressDialog -> D
    android.webkit.WebView webView -> E
    android.content.BroadcastReceiver mReceiver -> a
    com.iflytek.cloud.InitListener mTtsInitListener -> F
    com.iflytek.cloud.InitListener mInitListener -> G
    com.iflytek.cloud.ui.RecognizerDialogListener mRecognizerDialogListener -> H
    com.iflytek.cloud.SynthesizerListener mTtsListener -> I
    void onCreate(android.os.Bundle) -> onCreate
    void initUI() -> a
    void onClick(android.view.View) -> onClick
    void dismissSpeakMenu() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onMoreMenuItemClick(com.loongme.activity.bean.MoreMenuItem) -> a
    void onDestroy() -> onDestroy
    void finish() -> finish
    com.iflytek.cloud.SpeechSynthesizer access$0(com.loongme.activity.ui.ActivityMain) -> a
    java.lang.StringBuffer access$1(com.loongme.activity.ui.ActivityMain) -> b
    java.util.List access$2(com.loongme.activity.ui.ActivityMain) -> c
    com.loongme.activity.adapter.AdapterSpeakList access$3(com.loongme.activity.ui.ActivityMain) -> d
    com.lidroid.xutils.DbUtils access$4(com.loongme.activity.ui.ActivityMain) -> e
    java.lang.String access$5(com.loongme.activity.ui.ActivityMain) -> f
    com.loongme.activity.business.SsbService access$6(com.loongme.activity.ui.ActivityMain) -> g
    com.loongme.activity.business.VoiceAssistantManager access$7(com.loongme.activity.ui.ActivityMain) -> h
    android.widget.ListView access$8(com.loongme.activity.ui.ActivityMain) -> i
    com.iflytek.cloud.SynthesizerListener access$9(com.loongme.activity.ui.ActivityMain) -> j
    com.iflytek.cloud.ui.RecognizerDialog access$10(com.loongme.activity.ui.ActivityMain) -> k
    com.iflytek.cloud.ui.RecognizerDialogListener access$11(com.loongme.activity.ui.ActivityMain) -> l
    android.widget.Button access$12(com.loongme.activity.ui.ActivityMain) -> m
    void access$13(com.loongme.activity.ui.ActivityMain) -> n
    void access$14$12ed7513(com.loongme.activity.ui.ActivityMain) -> o
    int access$15(com.loongme.activity.ui.ActivityMain) -> p
    com.loongme.activity.widgets.CustomProgressDialog access$16(com.loongme.activity.ui.ActivityMain) -> q
    android.webkit.WebView access$17(com.loongme.activity.ui.ActivityMain) -> r
    void access$18$12ed3542(com.loongme.activity.ui.ActivityMain) -> s
com.loongme.activity.ui.ActivityMain$1 -> com.loongme.activity.ui.j:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.loongme.activity.ui.ActivityMain$10 -> com.loongme.activity.ui.k:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.loongme.activity.ui.ActivityMain$11 -> com.loongme.activity.ui.l:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.loongme.activity.ui.ActivityMain$12 -> com.loongme.activity.ui.m:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    void run() -> run
com.loongme.activity.ui.ActivityMain$2 -> com.loongme.activity.ui.n:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    void onInit(int) -> onInit
com.loongme.activity.ui.ActivityMain$3 -> com.loongme.activity.ui.o:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    void onInit(int) -> onInit
com.loongme.activity.ui.ActivityMain$4 -> com.loongme.activity.ui.p:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
com.loongme.activity.ui.ActivityMain$5 -> com.loongme.activity.ui.q:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    void onSpeakBegin() -> onSpeakBegin
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.loongme.activity.ui.ActivityMain$6 -> com.loongme.activity.ui.r:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.loongme.activity.ui.ActivityMain$7 -> com.loongme.activity.ui.s:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.loongme.activity.ui.ActivityMain$8 -> com.loongme.activity.ui.t:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.loongme.activity.ui.ActivityMain$9 -> com.loongme.activity.ui.u:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.loongme.activity.ui.ActivityMain$AskSSBonTask -> com.loongme.activity.ui.v:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    com.loongme.activity.bean.SpeakItem doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.loongme.activity.ui.ActivityMain$GetWelcomeMsgTask -> com.loongme.activity.ui.w:
    com.loongme.activity.ui.ActivityMain this$0 -> a
    com.loongme.activity.bean.SpeakItem doInBackground$48905b52() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.loongme.activity.ui.ActivityManifesto -> com.loongme.activity.ui.ActivityManifesto:
    android.widget.ImageButton btn_goback -> b
    android.widget.Button btn_title_send -> c
    android.widget.EditText ed_manifesto -> d
    com.loongme.activity.bean.User user -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void initUI() -> d
    void regListener() -> c
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.ActivityMerDes -> com.loongme.activity.ui.ActivityMerDes:
    android.widget.Button btn_sj_send -> b
    android.widget.ImageView iv_fanhumd -> c
    android.widget.EditText et_mer_des_three -> d
    android.widget.EditText et_mer_des_two -> e
    android.widget.EditText et_mer_des_one -> f
    java.lang.String merchant_describe -> g
    java.lang.String et_mer_des_one2 -> h
    java.lang.String et_mer_des_two2 -> i
    java.lang.String et_mer_des_three2 -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.loongme.activity.ui.ActivityMerInt -> com.loongme.activity.ui.ActivityMerInt:
    android.widget.ImageView iv_fanhumi -> b
    android.widget.Button btn_sjjs_send -> c
    android.widget.EditText ed_introduce -> d
    java.lang.String merchant_introduce -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.loongme.activity.ui.ActivityMyServe -> com.loongme.activity.ui.ActivityMyServe:
    android.widget.ImageButton btn_goBack -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void regListener() -> c
    void initUI() -> d
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.ActivityNickName -> com.loongme.activity.ui.ActivityNickName:
    android.widget.ImageButton btn_goback -> b
    android.widget.Button btn_title_send -> c
    android.widget.EditText ed_nick_name -> d
    com.loongme.activity.bean.User user -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void initUI() -> d
    void regListener() -> c
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.ActivityNotificationMeg -> com.loongme.activity.ui.ActivityNotificationMeg:
    android.widget.ImageButton btn_goback -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void initUI() -> d
    void regListener() -> c
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.ActivityPerDes -> com.loongme.activity.ui.ActivityPerDes:
    android.widget.Button btn_gr_send -> b
    android.widget.ImageView iv_fanhupd -> c
    android.widget.EditText editText1 -> d
    android.widget.EditText editText2 -> e
    android.widget.EditText editText3 -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.loongme.activity.ui.ActivityPerInt -> com.loongme.activity.ui.ActivityPerInt:
    android.widget.ImageView iv_fanhupi -> b
    android.widget.Button btn_grjs_send -> c
    android.widget.EditText ed_introduce -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.loongme.activity.ui.ActivityPersonalInfo -> com.loongme.activity.ui.ActivityPersonalInfo:
    java.lang.String[] menuItemNames -> b
    java.lang.String[] menuItemNames_bonke -> c
    int[] menuIcons -> d
    int[] menuIcons_bonke -> e
    android.widget.ImageButton btn_goBack -> f
    android.widget.TextView tx_login -> g
    android.widget.TextView tx_registe -> h
    android.view.View view_viewNotLogin -> i
    android.widget.ImageView image_userPhoto -> j
    android.widget.TextView tx_userName -> k
    android.widget.TextView tx_userPhone -> l
    android.widget.Button btn_applybon -> m
    android.view.View view_normalInfo -> n
    android.widget.ImageView image_bonkePhoto -> o
    android.widget.TextView tx_bonkeName -> p
    android.widget.TextView tx_bonkeNotice -> q
    android.widget.TextView tx_bonkeJobOrAddress -> r
    android.view.View view_bokeInfo -> s
    android.widget.TextView tx_issueServer -> t
    android.widget.ListView listview_menu -> u
    java.util.List menuItems -> v
    com.loongme.activity.adapter.AdapterPerInfoMenuList adapterPerInfoMenuList -> w
    com.loongme.activity.bean.User user -> x
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void regListener() -> c
    void initUI() -> d
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean handleSuccess(int,org.json.JSONObject,int) -> a
    boolean handleFailure(int,java.lang.String,java.lang.Throwable,int) -> a
com.loongme.activity.ui.ActivityPersonalInfo$1 -> com.loongme.activity.ui.x:
    com.loongme.activity.ui.ActivityPersonalInfo this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.loongme.activity.ui.ActivityPersonalInfoSet -> com.loongme.activity.ui.ActivityPersonalInfoSet:
    android.widget.ImageButton btn_goback -> b
    android.widget.ImageView img_userPhoto -> c
    android.view.View view_setPhoto -> d
    android.widget.TextView tx_nicheng -> e
    android.view.View view_setNicheng -> f
    android.widget.TextView tx_sex -> g
    android.view.View view_setsex -> h
    android.widget.TextView tx_phone -> i
    android.widget.TextView tx_gexuan -> j
    android.view.View view_setgexuan -> k
    android.widget.ImageView img_notice -> l
    android.widget.TextView tx_bonkeStatus -> m
    com.loongme.activity.bean.User user -> n
    boolean isInfoReset -> o
    android.app.Dialog choosePicDialog -> p
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void regListener() -> c
    void initUI() -> d
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean handleSuccess(int,org.json.JSONObject,int) -> a
    boolean handleFailure(int,java.lang.String,java.lang.Throwable,int) -> a
    void access$0(com.loongme.activity.ui.ActivityPersonalInfoSet) -> a
    void access$1$62cbfa21(com.loongme.activity.ui.ActivityPersonalInfoSet) -> b
    void access$2$62cc39f2(com.loongme.activity.ui.ActivityPersonalInfoSet) -> c
com.loongme.activity.ui.ActivityPersonalInfoSet$1 -> com.loongme.activity.ui.y:
    com.loongme.activity.ui.ActivityPersonalInfoSet this$0 -> a
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.ActivityPersonalInfoSet$2 -> com.loongme.activity.ui.z:
    com.loongme.activity.ui.ActivityPersonalInfoSet this$0 -> a
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.ActivityPersonalInfoSet$3 -> com.loongme.activity.ui.aa:
    com.loongme.activity.ui.ActivityPersonalInfoSet this$0 -> a
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.ActivityPersonalInfoSet$4 -> com.loongme.activity.ui.ab:
    com.loongme.activity.ui.ActivityPersonalInfoSet this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.loongme.activity.ui.ActivityRecommendFriend -> com.loongme.activity.ui.ActivityRecommendFriend:
    android.widget.ImageButton btn_goback -> i
    android.widget.ImageView weixin -> b
    android.widget.ImageView qq -> c
    android.widget.ImageView pengyou -> d
    android.widget.ImageView qzone -> e
    android.widget.ImageView sina -> f
    android.widget.ImageView tencen -> g
    java.lang.String TEST_IMAGE -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void initUI() -> d
    void regListener() -> c
    void onClick(android.view.View) -> onClick
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    boolean handleMessage(android.os.Message) -> handleMessage
    void showNotification$5c0975f9(java.lang.String) -> a
    void onDestroy() -> onDestroy
    void access$0(com.loongme.activity.ui.ActivityRecommendFriend) -> a
com.loongme.activity.ui.ActivityRecommendFriend$1 -> com.loongme.activity.ui.ac:
    com.loongme.activity.ui.ActivityRecommendFriend this$0 -> a
    void run() -> run
com.loongme.activity.ui.ActivityRegiste -> com.loongme.activity.ui.ActivityRegiste:
    com.loongme.activity.ui.FragmentReisteStepOne fragmentReisteStepOne -> b
    com.loongme.activity.ui.FragmentRegisteStepTwo fragmentRegisteStepTwo -> c
    android.support.v4.app.FragmentManager fragmentManager -> d
    android.widget.ImageButton btn_goback -> e
    int isFrom -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void regListener() -> c
    void onClick(android.view.View) -> onClick
    void initUI() -> d
    void onRegisteNext(java.lang.String) -> a
com.loongme.activity.ui.ActivityResetPassWord -> com.loongme.activity.ui.ActivityResetPassWord:
    android.widget.ImageButton btn_goback -> b
    android.widget.EditText edit_pass1 -> c
    android.widget.EditText edit_pass2 -> d
    android.widget.Button btn_complete -> e
    java.lang.String pass1 -> f
    java.lang.String pass2 -> g
    java.lang.String userPhone -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void regListener() -> c
    void initUI() -> d
    void onClick(android.view.View) -> onClick
    boolean handleSuccess(int,org.json.JSONObject,int) -> a
    boolean handleFailure(int,java.lang.String,java.lang.Throwable,int) -> a
com.loongme.activity.ui.ActivitySet -> com.loongme.activity.ui.ActivitySet:
    android.widget.RelativeLayout rl_set_pronounce_type -> c
    android.widget.RelativeLayout ll_update -> d
    android.widget.RelativeLayout ll_About_Us -> e
    android.widget.LinearLayout ll_exit -> f
    android.widget.PopupWindow popselector -> g
    android.widget.ImageButton btn_goback -> h
    android.widget.RadioGroup group -> i
    android.widget.RadioButton btn_rb1 -> j
    android.widget.RadioButton btn_rb2 -> k
    android.widget.RadioButton btn_rb3 -> l
    android.widget.RadioButton btn_rb4 -> m
    com.iflytek.cloud.SpeechSynthesizer mySynthesizer -> b
    java.lang.String mEngineType -> n
    java.lang.String voicer -> o
    java.lang.String[] voicer1 -> p
    android.widget.Button btn_cancel -> q
    android.content.SharedPreferences mPreferences -> r
    android.content.SharedPreferences$Editor editor -> s
    android.widget.TextView tv_type -> t
    com.iflytek.cloud.InitListener myInitListener -> u
    java.lang.String type -> v
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    android.widget.RadioButton access$0(com.loongme.activity.ui.ActivitySet) -> a
    android.content.SharedPreferences$Editor access$1(com.loongme.activity.ui.ActivitySet) -> b
    android.widget.RadioButton access$2(com.loongme.activity.ui.ActivitySet) -> c
    android.widget.RadioButton access$3(com.loongme.activity.ui.ActivitySet) -> d
    android.widget.RadioButton access$4(com.loongme.activity.ui.ActivitySet) -> e
    java.lang.String access$5(com.loongme.activity.ui.ActivitySet) -> f
com.loongme.activity.ui.ActivitySet$1 -> com.loongme.activity.ui.ad:
    com.loongme.activity.ui.ActivitySet this$0 -> a
    void onInit(int) -> onInit
com.loongme.activity.ui.ActivitySet$2 -> com.loongme.activity.ui.ae:
    com.loongme.activity.ui.ActivitySet this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void setVoicer() -> a
com.loongme.activity.ui.ActivitySet$poponDismissListener -> com.loongme.activity.ui.af:
    com.loongme.activity.ui.ActivitySet this$0 -> a
    void onDismiss() -> onDismiss
com.loongme.activity.ui.ActivitySex -> com.loongme.activity.ui.ActivitySex:
    android.widget.ImageButton btn_goback -> b
    android.widget.Button btn_sex -> c
    android.widget.RadioGroup group_sex -> d
    com.loongme.activity.bean.User user -> e
    java.lang.String str -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void initUI() -> d
    void regListener() -> c
    void onClick(android.view.View) -> onClick
    void access$0(com.loongme.activity.ui.ActivitySex,java.lang.String) -> a
com.loongme.activity.ui.ActivitySex$1 -> com.loongme.activity.ui.ag:
    com.loongme.activity.ui.ActivitySex this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.loongme.activity.ui.ActivityShowMoreInfo -> com.loongme.activity.ui.ActivityShowMoreInfo:
    java.lang.String url -> b
    android.webkit.WebView webView -> c
    android.widget.ImageButton btn_goback -> d
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void regListener() -> c
    void initUI() -> d
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.loongme.activity.ui.ActivityShowMoreInfo$1 -> com.loongme.activity.ui.ah:
    com.loongme.activity.ui.ActivityShowMoreInfo this$0 -> a
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.loongme.activity.ui.ActivitySplash -> com.loongme.activity.ui.ActivitySplash:
    android.support.v4.view.ViewPager viewPager_splash -> b
    java.util.List datas -> c
    android.widget.TextView tx_registe -> d
    android.widget.TextView tx_login -> e
    android.view.View view_try -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void regListener() -> c
    void initUI() -> d
    void onClick(android.view.View) -> onClick
    java.util.List access$0(com.loongme.activity.ui.ActivitySplash) -> a
com.loongme.activity.ui.ActivitySplash$VPAdapter -> com.loongme.activity.ui.ai:
    com.loongme.activity.ui.ActivitySplash this$0 -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
com.loongme.activity.ui.ActivityUpdate -> com.loongme.activity.ui.ActivityUpdate:
    android.widget.ImageButton btn_goBack -> b
    android.widget.Button btn_versions_send -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void initUI() -> d
    void regListener() -> c
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.ActivityWelcome -> com.loongme.activity.ui.ActivityWelcome:
    void onCreate(android.os.Bundle) -> onCreate
    void initParas() -> a
    void initWidgets() -> b
    void regListener() -> c
    void initUI() -> d
com.loongme.activity.ui.ActivityWelcome$1 -> com.loongme.activity.ui.aj:
    com.loongme.activity.ui.ActivityWelcome this$0 -> a
    void run() -> run
    com.loongme.activity.ui.ActivityWelcome access$0(com.loongme.activity.ui.ActivityWelcome$1) -> a
com.loongme.activity.ui.ActivityWelcome$1$1 -> com.loongme.activity.ui.ak:
    com.loongme.activity.ui.ActivityWelcome$1 this$1 -> a
    void run() -> run
com.loongme.activity.ui.ActivityWelcome$1$2 -> com.loongme.activity.ui.al:
    com.loongme.activity.ui.ActivityWelcome$1 this$1 -> a
    void run() -> run
com.loongme.activity.ui.Bound2Activity -> com.loongme.activity.ui.Bound2Activity:
    android.widget.ImageView iv_fane -> a
    android.widget.Button btn_logine -> b
    android.widget.EditText et_bound_phone1 -> c
    android.widget.EditText et_bound_phone2 -> d
    java.lang.String bound_phone1 -> e
    java.lang.String bound_phone2 -> f
    android.content.SharedPreferences mPreferences -> g
    java.lang.String phone -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.Bound2Activity$1 -> com.loongme.activity.ui.am:
    com.loongme.activity.ui.Bound2Activity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.loongme.activity.ui.Bound3Activity -> com.loongme.activity.ui.Bound3Activity:
    android.widget.ImageView iv_returnx -> b
    android.widget.Button btn_for_pwd -> c
    android.widget.Button btn_enterx -> d
    android.widget.EditText et_bou_phone -> e
    android.widget.EditText et_bou_pwd -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.loongme.activity.ui.Bound3Activity$1 -> com.loongme.activity.ui.an:
    com.loongme.activity.ui.Bound3Activity this$0 -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
com.loongme.activity.ui.BoundActivity -> com.loongme.activity.ui.BoundActivity:
    android.widget.ImageView iv_fand -> d
    android.widget.Button btn_stepd -> e
    android.widget.Button btn_bound -> f
    android.widget.Button btn_cordc -> g
    android.widget.EditText et_phonec -> h
    android.widget.EditText et_cordc -> i
    android.widget.TextView nowc -> j
    java.lang.String iPhone -> k
    java.lang.String iCord -> l
    int time -> m
    boolean flag -> n
    android.os.Handler handlerText -> b
    android.os.Handler handler -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    int access$0(com.loongme.activity.ui.BoundActivity) -> a
    android.widget.TextView access$1(com.loongme.activity.ui.BoundActivity) -> b
    void access$2(com.loongme.activity.ui.BoundActivity,int) -> a
    android.widget.Button access$3(com.loongme.activity.ui.BoundActivity) -> c
    android.widget.EditText access$4(com.loongme.activity.ui.BoundActivity) -> d
    android.widget.EditText access$5(com.loongme.activity.ui.BoundActivity) -> e
    void access$6(com.loongme.activity.ui.BoundActivity) -> f
    boolean access$7(com.loongme.activity.ui.BoundActivity) -> g
com.loongme.activity.ui.BoundActivity$1 -> com.loongme.activity.ui.ao:
    com.loongme.activity.ui.BoundActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.loongme.activity.ui.BoundActivity$2 -> com.loongme.activity.ui.ap:
    com.loongme.activity.ui.BoundActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.loongme.activity.ui.BoundActivity$3 -> com.loongme.activity.ui.aq:
    com.loongme.activity.ui.BoundActivity this$0 -> a
    void afterEvent(int,int,java.lang.Object) -> afterEvent
com.loongme.activity.ui.BusinessLicenseActivity -> com.loongme.activity.ui.BusinessLicenseActivity:
    android.widget.ImageView iv_bus_lic -> b
    android.widget.LinearLayout ll_bus_lic -> c
    android.widget.LinearLayout ll_photo_album -> d
    android.widget.Button btn_cancel -> e
    android.widget.TextView txt_notice -> g
    int requestCode -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startPhotoZoom(android.net.Uri) -> a
com.loongme.activity.ui.FragmentMoreMenuVP -> com.loongme.activity.ui.ar:
    android.widget.GridView gridView -> a
    java.util.List datas -> b
    android.view.View contentView -> c
    com.loongme.activity.base.MenuItemClickCallBack menuItemClickCallBack -> d
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    java.util.List access$0(com.loongme.activity.ui.FragmentMoreMenuVP) -> a
    com.loongme.activity.base.MenuItemClickCallBack access$1(com.loongme.activity.ui.FragmentMoreMenuVP) -> b
com.loongme.activity.ui.FragmentMoreMenuVP$1 -> com.loongme.activity.ui.as:
    com.loongme.activity.ui.FragmentMoreMenuVP this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.loongme.activity.ui.FragmentMoreMenuVP$GridAdapter -> com.loongme.activity.ui.at:
    com.loongme.activity.ui.FragmentMoreMenuVP this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.loongme.activity.ui.FragmentMoreMenuVP$ViewHolder -> com.loongme.activity.ui.au:
    android.widget.ImageView image_menuitem -> a
    android.widget.TextView tx_menuitem -> b
    com.loongme.activity.ui.FragmentMoreMenuVP this$0 -> c
com.loongme.activity.ui.FragmentRegisteStepTwo -> com.loongme.activity.ui.av:
    android.widget.EditText edit_pass1 -> a
    android.widget.EditText edit_pass2 -> b
    android.widget.CheckBox checkbox_agree -> c
    android.widget.TextView tx_agreement -> d
    android.widget.Button btn_registe -> e
    android.view.View contentView -> f
    java.lang.String pass1 -> g
    java.lang.String pass2 -> h
    com.loongme.activity.business.SsbService iService -> i
    int isFrom -> j
    java.lang.String userPhone -> k
    void setUserPhone(java.lang.String) -> a
    void setIsFrom(int) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    boolean handleSuccess(int,org.json.JSONObject,int) -> a
    boolean handleFailure(int,java.lang.String,java.lang.Throwable,int) -> a
com.loongme.activity.ui.FragmentReisteStepOne -> com.loongme.activity.ui.aw:
    android.widget.EditText edit_username -> a
    android.widget.EditText edit_matchCode -> b
    android.widget.Button btn_getCode -> c
    android.widget.Button btn_next -> d
    android.view.View contentView -> e
    com.loongme.activity.base.RegisteNextCallBack registeNextCallBack -> f
    cn.smssdk.EventHandler eventHandler -> g
    java.lang.Runnable timeRunnable -> h
    void setRegisteNextCallBack(com.loongme.activity.base.RegisteNextCallBack) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    android.widget.Button access$0(com.loongme.activity.ui.FragmentReisteStepOne) -> a
    com.loongme.activity.base.RegisteNextCallBack access$1(com.loongme.activity.ui.FragmentReisteStepOne) -> b
    android.widget.EditText access$2(com.loongme.activity.ui.FragmentReisteStepOne) -> c
    java.lang.Runnable access$3(com.loongme.activity.ui.FragmentReisteStepOne) -> d
com.loongme.activity.ui.FragmentReisteStepOne$1 -> com.loongme.activity.ui.ax:
    com.loongme.activity.ui.FragmentReisteStepOne this$0 -> a
    void run() -> run
    com.loongme.activity.ui.FragmentReisteStepOne access$0(com.loongme.activity.ui.FragmentReisteStepOne$1) -> a
com.loongme.activity.ui.FragmentReisteStepOne$1$1 -> com.loongme.activity.ui.ay:
    com.loongme.activity.ui.FragmentReisteStepOne$1 this$1 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.loongme.activity.ui.FragmentReisteStepOne$2 -> com.loongme.activity.ui.az:
    com.loongme.activity.ui.FragmentReisteStepOne this$0 -> a
    void afterEvent(int,int,java.lang.Object) -> afterEvent
    com.loongme.activity.ui.FragmentReisteStepOne access$0(com.loongme.activity.ui.FragmentReisteStepOne$2) -> a
com.loongme.activity.ui.FragmentReisteStepOne$2$1 -> com.loongme.activity.ui.ba:
    com.loongme.activity.ui.FragmentReisteStepOne$2 this$1 -> a
    int val$event -> b
    void run() -> run
com.loongme.activity.utils.CookieUtil -> com.loongme.activity.utils.a:
    org.apache.http.client.CookieStore store -> a
    org.apache.http.client.CookieStore getCookieStore(android.content.Context) -> a
com.loongme.activity.utils.DateUtil -> com.loongme.activity.utils.b:
    java.lang.String[] WEEK_OF_DAY_NAMES -> a
    java.lang.String getCurrentSpeakTime() -> a
com.loongme.activity.utils.DeviceUtils -> com.loongme.activity.utils.c:
    void hideSoftInput(android.content.Context,android.view.View) -> a
    java.lang.String getIMEINum(android.content.Context) -> a
    java.lang.String getDeviceId(android.content.Context) -> b
com.loongme.activity.utils.FileUtils -> com.loongme.activity.utils.FileUtils:
    java.lang.String[] VIDEO_EXTENSIONS -> a
    java.lang.String[] AUDIO_EXTENSIONS -> b
    java.util.HashSet mHashVideo -> c
    java.util.HashSet mHashAudio -> d
com.loongme.activity.utils.FileUtils$PathStatus -> com.loongme.activity.utils.FileUtils$PathStatus:
    com.loongme.activity.utils.FileUtils$PathStatus ERROR -> ERROR
    com.loongme.activity.utils.FileUtils$PathStatus EXITS -> EXITS
    com.loongme.activity.utils.FileUtils$PathStatus SUCCESS -> SUCCESS
    com.loongme.activity.utils.FileUtils$PathStatus[] ENUM$VALUES -> ENUM$VALUES
    com.loongme.activity.utils.FileUtils$PathStatus[] values() -> values
    com.loongme.activity.utils.FileUtils$PathStatus valueOf(java.lang.String) -> valueOf
com.loongme.activity.utils.HttpUtil -> com.loongme.activity.utils.d:
    com.loopj.android.http.AsyncHttpClient mHttpClient -> a
    android.content.Context mContext -> b
    com.loopj.android.http.AsyncHttpClient getHttpClient(android.content.Context) -> a
    boolean isNetworkAvailable(android.content.Context) -> b
com.loongme.activity.utils.ImageUtils -> com.loongme.activity.utils.e:
    android.graphics.Bitmap bitmap -> a
    void saveFile(android.graphics.Bitmap,java.lang.String) -> a
com.loongme.activity.utils.Logger -> com.loongme.activity.utils.f:
    boolean isLog -> a
    void d(java.lang.String,java.lang.String) -> a
    void i(java.lang.String,java.lang.String) -> b
    void e(java.lang.String,java.lang.String) -> c
com.loongme.activity.utils.StringUtils -> com.loongme.activity.utils.g:
    java.util.regex.Pattern emailer -> b
    java.text.SimpleDateFormat DATE_FORMAT_PART -> a
    boolean isEmpty(java.lang.String) -> a
    boolean isMobile(java.lang.String) -> b
com.loongme.activity.utils.UIUtil -> com.loongme.activity.utils.h:
    void redirect$74ba9665(android.content.Context,java.lang.Class,android.os.Bundle) -> a
    java.lang.String getUUID() -> a
    void showMsg(android.content.Context,java.lang.String) -> a
    int dip2px(android.content.Context,float) -> a
    android.content.pm.PackageInfo getPackageInfo(android.content.Context) -> a
    java.lang.String stripHtml(java.lang.String) -> a
    void hideSoftKeyBoard(android.content.Context,android.view.View) -> a
com.loongme.activity.widgets.CircleImageView -> com.loongme.activity.widgets.CircleImageView:
    android.widget.ImageView$ScaleType SCALE_TYPE -> SCALE_TYPE
    android.graphics.Bitmap$Config BITMAP_CONFIG -> BITMAP_CONFIG
    int COLORDRAWABLE_DIMENSION -> COLORDRAWABLE_DIMENSION
    int DEFAULT_BORDER_WIDTH -> DEFAULT_BORDER_WIDTH
    int DEFAULT_BORDER_COLOR -> DEFAULT_BORDER_COLOR
    android.graphics.RectF mDrawableRect -> mDrawableRect
    android.graphics.RectF mBorderRect -> mBorderRect
    android.graphics.Matrix mShaderMatrix -> mShaderMatrix
    android.graphics.Paint mBitmapPaint -> mBitmapPaint
    android.graphics.Paint mBorderPaint -> mBorderPaint
    int mBorderColor -> mBorderColor
    int mBorderWidth -> mBorderWidth
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.BitmapShader mBitmapShader -> mBitmapShader
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    float mDrawableRadius -> mDrawableRadius
    float mBorderRadius -> mBorderRadius
    boolean mReady -> mReady
    boolean mSetupPending -> mSetupPending
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int getBorderColor() -> getBorderColor
    void setBorderColor(int) -> setBorderColor
    int getBorderWidth() -> getBorderWidth
    void setBorderWidth(int) -> setBorderWidth
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    android.graphics.Bitmap getBitmapFromDrawable(android.graphics.drawable.Drawable) -> getBitmapFromDrawable
    void setup() -> setup
    void updateShaderMatrix() -> updateShaderMatrix
com.loongme.activity.widgets.ClearEditText -> com.loongme.activity.widgets.ClearEditText:
    android.graphics.drawable.Drawable mClearDrawable -> mClearDrawable
    boolean hasFoucs -> hasFoucs
    com.loongme.activity.widgets.ClearEditText$ClickListenerCallBack clickCallBack -> clickCallBack
    void init() -> init
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void setClearIconVisible(boolean) -> setClearIconVisible
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void setShakeAnimation() -> setShakeAnimation
    android.view.animation.Animation shakeAnimation(int) -> shakeAnimation
    void setClickListener(com.loongme.activity.widgets.ClearEditText$ClickListenerCallBack) -> setClickListener
com.loongme.activity.widgets.ClearEditText$ClickListenerCallBack -> com.loongme.activity.widgets.a:
com.loongme.activity.widgets.CustomProgressDialog -> com.loongme.activity.widgets.b:
    android.graphics.drawable.AnimationDrawable mAnimation -> a
    android.content.Context mContext -> b
    android.widget.ImageView mImageView -> c
    java.lang.String mLoadingTip -> d
    android.widget.TextView mLoadingTv -> e
    int count -> f
    int mResid -> g
    void onCreate(android.os.Bundle) -> onCreate
    android.graphics.drawable.AnimationDrawable access$0(com.loongme.activity.widgets.CustomProgressDialog) -> a
com.loongme.activity.widgets.CustomProgressDialog$1 -> com.loongme.activity.widgets.c:
    com.loongme.activity.widgets.CustomProgressDialog this$0 -> a
    void run() -> run
com.loongme.activity.widgets.cropimg.CutAvatarActivity -> com.loongme.activity.widgets.cropimg.CutAvatarActivity:
    android.graphics.Bitmap bitmap -> a
    com.loongme.activity.widgets.cropimg.CutAvatarView mCutAvatarView -> b
    int isFrom -> c
    java.lang.String imagePath -> d
    int sysWidth -> e
    int sysHeight -> f
    int THUMBNAIL_SIZE -> g
    void onCreate(android.os.Bundle) -> onCreate
    int getPowerOfTwoForSampleRatio(double) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    com.loongme.activity.widgets.cropimg.CutAvatarView access$0(com.loongme.activity.widgets.cropimg.CutAvatarActivity) -> a
com.loongme.activity.widgets.cropimg.CutAvatarActivity$1 -> com.loongme.activity.widgets.cropimg.a:
    com.loongme.activity.widgets.cropimg.CutAvatarActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.loongme.activity.widgets.cropimg.CutAvatarActivity$2 -> com.loongme.activity.widgets.cropimg.b:
    com.loongme.activity.widgets.cropimg.CutAvatarActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.loongme.activity.widgets.cropimg.CutAvatarView -> com.loongme.activity.widgets.cropimg.CutAvatarView:
    float DEF_FRAME_WIDTH -> DEF_FRAME_WIDTH
    float DEF_CLICK_SIZE -> DEF_CLICK_SIZE
    float MAX_SCALE -> MAX_SCALE
    float MIN_SCALE -> MIN_SCALE
    boolean isTouCutBitmap -> isTouCutBitmap
    android.graphics.Matrix mMatrix -> mMatrix
    android.graphics.Matrix mSaveMatrix -> mSaveMatrix
    android.graphics.Bitmap mImgBitmap -> mImgBitmap
    int NONE -> NONE
    int DRAG -> DRAG
    int ZOOM -> ZOOM
    int mCurMode -> mCurMode
    float mCircleRadius -> mCircleRadius
    android.graphics.Paint mRectPaint -> mRectPaint
    android.graphics.Paint mCirclePaint -> mCirclePaint
    android.graphics.Paint mRoundPaint -> mRoundPaint
    android.graphics.RectF mRectF -> mRectF
    android.graphics.PointF mPre -> mPre
    android.graphics.PointF mMid -> mMid
    float dist -> dist
    float[] mMXValues -> mMXValues
    void init() -> init
    android.graphics.Bitmap clip() -> clip
    android.graphics.Bitmap clip(boolean) -> clip
    void comSize(int,int) -> comSize
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void checkBoundary(android.graphics.Matrix) -> checkBoundary
    void center(boolean,boolean) -> center
    float spacing(android.view.MotionEvent) -> spacing
    void midPoint(android.graphics.PointF,android.view.MotionEvent) -> midPoint
com.loongme.activity.widgets.gestureimg.Animation -> com.loongme.activity.widgets.gestureimg.a:
    boolean update(com.loongme.activity.widgets.gestureimg.GestureImageView,long) -> a
com.loongme.activity.widgets.gestureimg.Animator -> com.loongme.activity.widgets.gestureimg.b:
    com.loongme.activity.widgets.gestureimg.GestureImageView view -> a
    com.loongme.activity.widgets.gestureimg.Animation animation -> b
    boolean running -> c
    boolean active -> d
    long lastTime -> e
    void run() -> run
    void finish() -> a
    void play(com.loongme.activity.widgets.gestureimg.Animation) -> a
    void activate() -> c
    void cancel() -> b
com.loongme.activity.widgets.gestureimg.FlingAnimation -> com.loongme.activity.widgets.gestureimg.c:
    float velocityX -> a
    float velocityY -> b
    float factor -> c
    float threshold -> d
    com.loongme.activity.widgets.gestureimg.FlingAnimationListener listener -> e
    boolean update(com.loongme.activity.widgets.gestureimg.GestureImageView,long) -> a
    void setVelocityX(float) -> a
    void setVelocityY(float) -> b
    void setListener(com.loongme.activity.widgets.gestureimg.FlingAnimationListener) -> a
com.loongme.activity.widgets.gestureimg.FlingAnimationListener -> com.loongme.activity.widgets.gestureimg.d:
    void onMove(float,float) -> a
com.loongme.activity.widgets.gestureimg.FlingListener -> com.loongme.activity.widgets.gestureimg.e:
    float velocityX -> a
    float velocityY -> b
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    float getVelocityX() -> a
    float getVelocityY() -> b
com.loongme.activity.widgets.gestureimg.GestureImageView -> com.loongme.activity.widgets.gestureimg.GestureImageView:
    java.lang.String GLOBAL_NS -> GLOBAL_NS
    java.lang.String LOCAL_NS -> LOCAL_NS
    java.util.concurrent.Semaphore drawLock -> drawLock
    com.loongme.activity.widgets.gestureimg.Animator animator -> animator
    android.graphics.drawable.Drawable drawable -> drawable
    float x -> x
    float y -> y
    boolean layout -> layout
    float scaleAdjust -> scaleAdjust
    float startingScale -> startingScale
    float scale -> scale
    float maxScale -> maxScale
    float minScale -> minScale
    float fitScaleHorizontal -> fitScaleHorizontal
    float fitScaleVertical -> fitScaleVertical
    float rotation -> rotation
    float centerX -> centerX
    float centerY -> centerY
    java.lang.Float startX -> startX
    java.lang.Float startY -> startY
    int hWidth -> hWidth
    int hHeight -> hHeight
    int resId -> resId
    boolean recycle -> recycle
    boolean strict -> strict
    int displayHeight -> displayHeight
    int displayWidth -> displayWidth
    int alpha -> alpha
    android.graphics.ColorFilter colorFilter -> colorFilter
    int deviceOrientation -> deviceOrientation
    int imageOrientation -> imageOrientation
    com.loongme.activity.widgets.gestureimg.GestureImageViewListener gestureImageViewListener -> gestureImageViewListener
    com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener gestureImageViewTouchListener -> gestureImageViewTouchListener
    android.view.View$OnTouchListener customOnTouchListener -> customOnTouchListener
    android.view.View$OnClickListener onClickListener -> onClickListener
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> $SWITCH_TABLE$android$widget$ImageView$ScaleType
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setupCanvas(int,int,int) -> setupCanvas
    void computeCropScale(int,int,int,int) -> computeCropScale
    void computeStartingScale(int,int,int,int) -> computeStartingScale
    boolean isRecycled() -> isRecycled
    void recycle() -> recycle
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean waitForDraw(long) -> waitForDraw
    void onAttachedToWindow() -> onAttachedToWindow
    void animationStart(com.loongme.activity.widgets.gestureimg.Animation) -> animationStart
    void animationStop() -> animationStop
    void onDetachedFromWindow() -> onDetachedFromWindow
    void initImage() -> initImage
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    int getScaledWidth() -> getScaledWidth
    int getScaledHeight() -> getScaledHeight
    int getImageWidth() -> getImageWidth
    int getImageHeight() -> getImageHeight
    void moveBy(float,float) -> moveBy
    void setPosition(float,float) -> setPosition
    void redraw() -> redraw
    void setMinScale(float) -> setMinScale
    void setMaxScale(float) -> setMaxScale
    void setScale(float) -> setScale
    float getScale() -> getScale
    float getImageX() -> getImageX
    float getImageY() -> getImageY
    boolean isStrict() -> isStrict
    void setStrict(boolean) -> setStrict
    boolean isRecycle() -> isRecycle
    void setRecycle(boolean) -> setRecycle
    void reset() -> reset
    void setRotation(float) -> setRotation
    void setGestureImageViewListener(com.loongme.activity.widgets.gestureimg.GestureImageViewListener) -> setGestureImageViewListener
    com.loongme.activity.widgets.gestureimg.GestureImageViewListener getGestureImageViewListener() -> getGestureImageViewListener
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setImageURI(android.net.Uri) -> setImageURI
    android.graphics.Matrix getImageMatrix() -> getImageMatrix
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void setAdjustViewBounds(boolean) -> setAdjustViewBounds
    void setImageLevel(int) -> setImageLevel
    void setImageMatrix(android.graphics.Matrix) -> setImageMatrix
    void setImageState(int[],boolean) -> setImageState
    void setSelected(boolean) -> setSelected
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    float getCenterX() -> getCenterX
    float getCenterY() -> getCenterY
    boolean isLandscape() -> isLandscape
    boolean isPortrait() -> isPortrait
    void setStartingScale(float) -> setStartingScale
    void setStartingPosition(float,float) -> setStartingPosition
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    boolean isOrientationAligned() -> isOrientationAligned
    int getDeviceOrientation() -> getDeviceOrientation
    android.view.View$OnTouchListener access$0(com.loongme.activity.widgets.gestureimg.GestureImageView) -> access$0
    com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener access$1(com.loongme.activity.widgets.gestureimg.GestureImageView) -> access$1
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> $SWITCH_TABLE$android$widget$ImageView$ScaleType
com.loongme.activity.widgets.gestureimg.GestureImageView$1 -> com.loongme.activity.widgets.gestureimg.f:
    com.loongme.activity.widgets.gestureimg.GestureImageView this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.loongme.activity.widgets.gestureimg.GestureImageViewListener -> com.loongme.activity.widgets.gestureimg.g:
com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener -> com.loongme.activity.widgets.gestureimg.h:
    com.loongme.activity.widgets.gestureimg.GestureImageView image -> a
    android.view.View$OnClickListener onClickListener -> b
    android.graphics.PointF current -> c
    android.graphics.PointF last -> d
    android.graphics.PointF next -> e
    android.graphics.PointF midpoint -> f
    com.loongme.activity.widgets.gestureimg.VectorF scaleVector -> g
    com.loongme.activity.widgets.gestureimg.VectorF pinchVector -> h
    boolean touched -> i
    boolean inZoom -> j
    float initialDistance -> k
    float lastScale -> l
    float currentScale -> m
    float boundaryLeft -> n
    float boundaryTop -> o
    float boundaryRight -> p
    float boundaryBottom -> q
    float maxScale -> r
    float minScale -> s
    float fitScaleHorizontal -> t
    float fitScaleVertical -> u
    int canvasWidth -> v
    int canvasHeight -> w
    float centerX -> x
    float centerY -> y
    float startingScale -> z
    boolean canDragX -> A
    boolean canDragY -> B
    boolean multiTouch -> C
    int displayWidth -> D
    int displayHeight -> E
    int imageWidth -> F
    int imageHeight -> G
    com.loongme.activity.widgets.gestureimg.FlingListener flingListener -> H
    com.loongme.activity.widgets.gestureimg.FlingAnimation flingAnimation -> I
    com.loongme.activity.widgets.gestureimg.ZoomAnimation zoomAnimation -> J
    com.loongme.activity.widgets.gestureimg.MoveAnimation moveAnimation -> K
    android.view.GestureDetector tapDetector -> L
    android.view.GestureDetector flingDetector -> M
    com.loongme.activity.widgets.gestureimg.GestureImageViewListener imageListener -> N
    boolean zoomed -> O
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void handleUp() -> a
    void handleScale(float,float,float) -> a
    boolean handleDrag(float,float) -> a
    void reset() -> b
    void setMaxScale(float) -> a
    void setMinScale(float) -> b
    void setOnClickListener(android.view.View$OnClickListener) -> a
    void setCanvasWidth(int) -> a
    void setCanvasHeight(int) -> b
    void setFitScaleHorizontal(float) -> c
    void setFitScaleVertical(float) -> d
    void boundCoordinates() -> c
    void calculateBoundaries() -> d
    android.graphics.PointF access$0(com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener) -> a
    float access$1(com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener) -> b
    float access$2(com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener) -> c
    void access$3$41e0d591(com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener) -> d
    void access$4(com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener,android.view.MotionEvent) -> a
    boolean access$5(com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener) -> e
    android.view.View$OnClickListener access$6(com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener) -> f
com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener$1 -> com.loongme.activity.widgets.gestureimg.i:
    com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener this$0 -> a
    void onMove(float,float) -> a
com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener$2 -> com.loongme.activity.widgets.gestureimg.j:
    com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener this$0 -> a
    void onZoom(float,float,float) -> a
    void onComplete() -> a
com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener$3 -> com.loongme.activity.widgets.gestureimg.k:
    com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener this$0 -> a
    com.loongme.activity.widgets.gestureimg.GestureImageView val$image -> b
    void onMove(float,float) -> a
com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener$4 -> com.loongme.activity.widgets.gestureimg.l:
    com.loongme.activity.widgets.gestureimg.GestureImageViewTouchListener this$0 -> a
    com.loongme.activity.widgets.gestureimg.GestureImageView val$image -> b
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.loongme.activity.widgets.gestureimg.MoveAnimation -> com.loongme.activity.widgets.gestureimg.m:
    boolean firstFrame -> a
    float startX -> b
    float startY -> c
    float targetX -> d
    float targetY -> e
    long animationTimeMS -> f
    long totalTime -> g
    com.loongme.activity.widgets.gestureimg.MoveAnimationListener moveAnimationListener -> h
    boolean update(com.loongme.activity.widgets.gestureimg.GestureImageView,long) -> a
    void setMoveAnimationListener(com.loongme.activity.widgets.gestureimg.MoveAnimationListener) -> a
com.loongme.activity.widgets.gestureimg.MoveAnimationListener -> com.loongme.activity.widgets.gestureimg.n:
    void onMove(float,float) -> a
com.loongme.activity.widgets.gestureimg.VectorF -> com.loongme.activity.widgets.gestureimg.o:
    float angle -> a
    float length -> b
    android.graphics.PointF start -> c
    android.graphics.PointF end -> d
    void calculateEndPoint() -> a
    void setStart(android.graphics.PointF) -> a
    void setEnd(android.graphics.PointF) -> b
    float calculateLength() -> b
    float calculateAngle() -> c
com.loongme.activity.widgets.gestureimg.ZoomAnimation -> com.loongme.activity.widgets.gestureimg.p:
    boolean firstFrame -> a
    float touchX -> b
    float touchY -> c
    float zoom -> d
    float startX -> e
    float startY -> f
    float startScale -> g
    float xDiff -> h
    float yDiff -> i
    float scaleDiff -> j
    long animationLengthMS -> k
    long totalTime -> l
    com.loongme.activity.widgets.gestureimg.ZoomAnimationListener zoomAnimationListener -> m
    boolean update(com.loongme.activity.widgets.gestureimg.GestureImageView,long) -> a
    void reset() -> a
    void setZoom(float) -> a
    void setTouchX(float) -> b
    void setTouchY(float) -> c
    void setZoomAnimationListener(com.loongme.activity.widgets.gestureimg.ZoomAnimationListener) -> a
com.loongme.activity.widgets.gestureimg.ZoomAnimationListener -> com.loongme.activity.widgets.gestureimg.q:
    void onZoom(float,float,float) -> a
    void onComplete() -> a
com.loongme.activity.wxapi.WXEntryActivity -> com.loongme.activity.wxapi.WXEntryActivity:
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onGetMessageFromWXReq
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onShowMessageFromWXReq
com.loopj.android.http.AssertUtils -> com.loopj.android.http.AssertUtils:
    void asserts(boolean,java.lang.String) -> asserts
com.loopj.android.http.AsyncHttpClient -> com.loopj.android.http.AsyncHttpClient:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String HEADER_CONTENT_TYPE -> HEADER_CONTENT_TYPE
    java.lang.String HEADER_CONTENT_RANGE -> HEADER_CONTENT_RANGE
    java.lang.String HEADER_CONTENT_ENCODING -> HEADER_CONTENT_ENCODING
    java.lang.String HEADER_CONTENT_DISPOSITION -> HEADER_CONTENT_DISPOSITION
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int DEFAULT_MAX_CONNECTIONS -> DEFAULT_MAX_CONNECTIONS
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    int DEFAULT_RETRY_SLEEP_TIME_MILLIS -> DEFAULT_RETRY_SLEEP_TIME_MILLIS
    int DEFAULT_SOCKET_BUFFER_SIZE -> DEFAULT_SOCKET_BUFFER_SIZE
    int maxConnections -> maxConnections
    int connectTimeout -> connectTimeout
    int responseTimeout -> responseTimeout
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    java.util.concurrent.ExecutorService threadPool -> threadPool
    java.util.Map requestMap -> requestMap
    java.util.Map clientHeaderMap -> clientHeaderMap
    boolean isUrlEncodingEnabled -> isUrlEncodingEnabled
    org.apache.http.conn.scheme.SchemeRegistry getDefaultSchemeRegistry(boolean,int,int) -> getDefaultSchemeRegistry
    void allowRetryExceptionClass(java.lang.Class) -> allowRetryExceptionClass
    void blockRetryExceptionClass(java.lang.Class) -> blockRetryExceptionClass
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    org.apache.http.protocol.HttpContext getHttpContext() -> getHttpContext
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    void setThreadPool(java.util.concurrent.ExecutorService) -> setThreadPool
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
    java.util.concurrent.ExecutorService getDefaultThreadPool() -> getDefaultThreadPool
    void setEnableRedirects(boolean,boolean,boolean) -> setEnableRedirects
    void setEnableRedirects(boolean,boolean) -> setEnableRedirects
    void setEnableRedirects(boolean) -> setEnableRedirects
    void setRedirectHandler(org.apache.http.client.RedirectHandler) -> setRedirectHandler
    void setUserAgent(java.lang.String) -> setUserAgent
    int getMaxConnections() -> getMaxConnections
    void setMaxConnections(int) -> setMaxConnections
    int getTimeout() -> getTimeout
    void setTimeout(int) -> setTimeout
    int getConnectTimeout() -> getConnectTimeout
    void setConnectTimeout(int) -> setConnectTimeout
    int getResponseTimeout() -> getResponseTimeout
    void setResponseTimeout(int) -> setResponseTimeout
    void setProxy(java.lang.String,int) -> setProxy
    void setProxy(java.lang.String,int,java.lang.String,java.lang.String) -> setProxy
    void setSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> setSSLSocketFactory
    void setMaxRetriesAndTimeout(int,int) -> setMaxRetriesAndTimeout
    void removeAllHeaders() -> removeAllHeaders
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    void setBasicAuth(java.lang.String,java.lang.String) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,boolean) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,org.apache.http.auth.AuthScope) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,org.apache.http.auth.AuthScope,boolean) -> setBasicAuth
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    void setAuthenticationPreemptive(boolean) -> setAuthenticationPreemptive
    void clearBasicAuth() -> clearBasicAuth
    void clearCredentialsProvider() -> clearCredentialsProvider
    void cancelRequests(android.content.Context,boolean) -> cancelRequests
    void cancelAllRequests(boolean) -> cancelAllRequests
    com.loopj.android.http.RequestHandle head(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle put(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle delete(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.AsyncHttpRequest newAsyncHttpRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> newAsyncHttpRequest
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
    void setURLEncodingEnabled(boolean) -> setURLEncodingEnabled
    java.lang.String getUrlWithQueryString(boolean,java.lang.String,com.loopj.android.http.RequestParams) -> getUrlWithQueryString
    boolean isInputStreamGZIPCompressed(java.io.PushbackInputStream) -> isInputStreamGZIPCompressed
    void silentCloseInputStream(java.io.InputStream) -> silentCloseInputStream
    void silentCloseOutputStream(java.io.OutputStream) -> silentCloseOutputStream
    org.apache.http.HttpEntity paramsToEntity(com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> paramsToEntity
    boolean isUrlEncodingEnabled() -> isUrlEncodingEnabled
    org.apache.http.client.methods.HttpEntityEnclosingRequestBase addEntityToRequestBase(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.HttpEntity) -> addEntityToRequestBase
    void endEntityViaReflection(org.apache.http.HttpEntity) -> endEntityViaReflection
    java.util.Map access$000(com.loopj.android.http.AsyncHttpClient) -> access$000
    java.util.Map access$100(com.loopj.android.http.AsyncHttpClient) -> access$100
com.loopj.android.http.AsyncHttpClient$1 -> com.loopj.android.http.AsyncHttpClient$1:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.loopj.android.http.AsyncHttpClient$2:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$3 -> com.loopj.android.http.AsyncHttpClient$3:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$4 -> com.loopj.android.http.AsyncHttpClient$4:
    android.content.Context val$context -> val$context
    boolean val$mayInterruptIfRunning -> val$mayInterruptIfRunning
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void run() -> run
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.loopj.android.http.AsyncHttpClient$InflatingEntity:
    java.io.InputStream wrappedStream -> wrappedStream
    java.io.PushbackInputStream pushbackStream -> pushbackStream
    java.util.zip.GZIPInputStream gzippedStream -> gzippedStream
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void consumeContent() -> consumeContent
com.loopj.android.http.AsyncHttpRequest -> com.loopj.android.http.AsyncHttpRequest:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.client.methods.HttpUriRequest request -> request
    com.loopj.android.http.ResponseHandlerInterface responseHandler -> responseHandler
    int executionCount -> executionCount
    boolean isCancelled -> isCancelled
    boolean cancelIsNotified -> cancelIsNotified
    boolean isFinished -> isFinished
    boolean isRequestPreProcessed -> isRequestPreProcessed
    void onPreProcessRequest(com.loopj.android.http.AsyncHttpRequest) -> onPreProcessRequest
    void onPostProcessRequest(com.loopj.android.http.AsyncHttpRequest) -> onPostProcessRequest
    void run() -> run
    void makeRequest() -> makeRequest
    void makeRequestWithRetries() -> makeRequestWithRetries
    boolean isCancelled() -> isCancelled
    void sendCancelNotification() -> sendCancelNotification
    boolean isDone() -> isDone
    boolean cancel(boolean) -> cancel
com.loopj.android.http.AsyncHttpResponseHandler -> com.loopj.android.http.AsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    int SUCCESS_MESSAGE -> SUCCESS_MESSAGE
    int FAILURE_MESSAGE -> FAILURE_MESSAGE
    int START_MESSAGE -> START_MESSAGE
    int FINISH_MESSAGE -> FINISH_MESSAGE
    int PROGRESS_MESSAGE -> PROGRESS_MESSAGE
    int RETRY_MESSAGE -> RETRY_MESSAGE
    int CANCEL_MESSAGE -> CANCEL_MESSAGE
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String UTF8_BOM -> UTF8_BOM
    java.lang.String responseCharset -> responseCharset
    android.os.Handler handler -> handler
    boolean useSynchronousMode -> useSynchronousMode
    java.net.URI requestURI -> requestURI
    org.apache.http.Header[] requestHeaders -> requestHeaders
    android.os.Looper looper -> looper
    java.net.URI getRequestURI() -> getRequestURI
    org.apache.http.Header[] getRequestHeaders() -> getRequestHeaders
    void setRequestURI(java.net.URI) -> setRequestURI
    void setRequestHeaders(org.apache.http.Header[]) -> setRequestHeaders
    boolean getUseSynchronousMode() -> getUseSynchronousMode
    void setUseSynchronousMode(boolean) -> setUseSynchronousMode
    void setCharset(java.lang.String) -> setCharset
    java.lang.String getCharset() -> getCharset
    void onProgress(int,int) -> onProgress
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onPreProcessResponse(com.loopj.android.http.ResponseHandlerInterface,org.apache.http.HttpResponse) -> onPreProcessResponse
    void onPostProcessResponse(com.loopj.android.http.ResponseHandlerInterface,org.apache.http.HttpResponse) -> onPostProcessResponse
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onRetry(int) -> onRetry
    void onCancel() -> onCancel
    void sendProgressMessage(int,int) -> sendProgressMessage
    void sendSuccessMessage(int,org.apache.http.Header[],byte[]) -> sendSuccessMessage
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendRetryMessage(int) -> sendRetryMessage
    void sendCancelMessage() -> sendCancelMessage
    void handleMessage(android.os.Message) -> handleMessage
    void sendMessage(android.os.Message) -> sendMessage
    void postRunnable(java.lang.Runnable) -> postRunnable
    android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler -> com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler:
    com.loopj.android.http.AsyncHttpResponseHandler mResponder -> mResponder
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.Base64 -> com.loopj.android.http.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
com.loopj.android.http.Base64$Coder -> com.loopj.android.http.Base64$Coder:
    byte[] output -> output
    int op -> op
    boolean process(byte[],int,int,boolean) -> process
    int maxOutputSize(int) -> maxOutputSize
com.loopj.android.http.Base64$Decoder -> com.loopj.android.http.Base64$Decoder:
    int[] DECODE -> DECODE
    int[] DECODE_WEBSAFE -> DECODE_WEBSAFE
    int SKIP -> SKIP
    int EQUALS -> EQUALS
    int state -> state
    int value -> value
    int[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.loopj.android.http.Base64$Encoder -> com.loopj.android.http.Base64$Encoder:
    int LINE_GROUPS -> LINE_GROUPS
    byte[] ENCODE -> ENCODE
    byte[] ENCODE_WEBSAFE -> ENCODE_WEBSAFE
    byte[] tail -> tail
    int tailLen -> tailLen
    int count -> count
    boolean do_padding -> do_padding
    boolean do_newline -> do_newline
    boolean do_cr -> do_cr
    byte[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.loopj.android.http.Base64DataException -> com.loopj.android.http.Base64DataException:
com.loopj.android.http.Base64OutputStream -> com.loopj.android.http.Base64OutputStream:
    com.loopj.android.http.Base64$Coder coder -> coder
    int flags -> flags
    byte[] buffer -> buffer
    int bpos -> bpos
    byte[] EMPTY -> EMPTY
    void write(int) -> write
    void flushBuffer() -> flushBuffer
    void write(byte[],int,int) -> write
    void close() -> close
    void internalWrite(byte[],int,int,boolean) -> internalWrite
    byte[] embiggen(byte[],int) -> embiggen
com.loopj.android.http.BaseJsonHttpResponseHandler -> com.loopj.android.http.BaseJsonHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onSuccess(int,org.apache.http.Header[],java.lang.String,java.lang.Object) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,java.lang.String,java.lang.Object) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    java.lang.Object parseResponse(java.lang.String,boolean) -> parseResponse
com.loopj.android.http.BaseJsonHttpResponseHandler$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1:
    java.lang.String val$responseString -> val$responseString
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    com.loopj.android.http.BaseJsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$1$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.BaseJsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$1$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1$2:
    java.lang.Throwable val$t -> val$t
    com.loopj.android.http.BaseJsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2:
    java.lang.String val$responseString -> val$responseString
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    com.loopj.android.http.BaseJsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.BaseJsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2$2:
    com.loopj.android.http.BaseJsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BinaryHttpResponseHandler -> com.loopj.android.http.BinaryHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String[] mAllowedContentTypes -> mAllowedContentTypes
    java.lang.String[] getAllowedContentTypes() -> getAllowedContentTypes
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
com.loopj.android.http.BuildConfig -> com.loopj.android.http.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.loopj.android.http.DataAsyncHttpResponseHandler -> com.loopj.android.http.DataAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    int PROGRESS_DATA_MESSAGE -> PROGRESS_DATA_MESSAGE
    void onProgressData(byte[]) -> onProgressData
    void sendProgressDataMessage(byte[]) -> sendProgressDataMessage
    void handleMessage(android.os.Message) -> handleMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    byte[] copyOfRange(byte[],int,int) -> copyOfRange
com.loopj.android.http.FileAsyncHttpResponseHandler -> com.loopj.android.http.FileAsyncHttpResponseHandler:
    java.io.File mFile -> mFile
    boolean append -> append
    java.lang.String LOG_TAG -> LOG_TAG
    boolean $assertionsDisabled -> $assertionsDisabled
    boolean deleteTargetFile() -> deleteTargetFile
    java.io.File getTemporaryFile(android.content.Context) -> getTemporaryFile
    java.io.File getTargetFile() -> getTargetFile
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,java.io.File) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],java.io.File) -> onSuccess
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
com.loopj.android.http.JsonHttpResponseHandler -> com.loopj.android.http.JsonHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onSuccess(int,org.apache.http.Header[],org.json.JSONObject) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],org.json.JSONArray) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONObject) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONArray) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.Object parseResponse(byte[]) -> parseResponse
com.loopj.android.http.JsonHttpResponseHandler$1 -> com.loopj.android.http.JsonHttpResponseHandler$1:
    byte[] val$responseBytes -> val$responseBytes
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$1 -> com.loopj.android.http.JsonHttpResponseHandler$1$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$2 -> com.loopj.android.http.JsonHttpResponseHandler$1$2:
    org.json.JSONException val$ex -> val$ex
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2 -> com.loopj.android.http.JsonHttpResponseHandler$2:
    byte[] val$responseBytes -> val$responseBytes
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$1 -> com.loopj.android.http.JsonHttpResponseHandler$2$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$2 -> com.loopj.android.http.JsonHttpResponseHandler$2$2:
    org.json.JSONException val$ex -> val$ex
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonStreamerEntity -> com.loopj.android.http.JsonStreamerEntity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.UnsupportedOperationException ERR_UNSUPPORTED -> ERR_UNSUPPORTED
    int BUFFER_SIZE -> BUFFER_SIZE
    byte[] buffer -> buffer
    java.lang.StringBuilder BUILDER -> BUILDER
    byte[] JSON_TRUE -> JSON_TRUE
    byte[] JSON_FALSE -> JSON_FALSE
    byte[] JSON_NULL -> JSON_NULL
    byte[] STREAM_NAME -> STREAM_NAME
    byte[] STREAM_TYPE -> STREAM_TYPE
    byte[] STREAM_CONTENTS -> STREAM_CONTENTS
    byte[] STREAM_ELAPSED -> STREAM_ELAPSED
    org.apache.http.Header HEADER_JSON_CONTENT -> HEADER_JSON_CONTENT
    org.apache.http.Header HEADER_GZIP_ENCODING -> HEADER_GZIP_ENCODING
    java.util.Map jsonParams -> jsonParams
    org.apache.http.Header contentEncoding -> contentEncoding
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> progressHandler
    void addPart(java.lang.String,java.lang.Object) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    org.apache.http.Header getContentType() -> getContentType
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    void writeToFromStream(java.io.OutputStream,com.loopj.android.http.RequestParams$StreamWrapper) -> writeToFromStream
    void writeToFromFile(java.io.OutputStream,com.loopj.android.http.RequestParams$FileWrapper) -> writeToFromFile
    void writeMetaData(java.io.OutputStream,java.lang.String,java.lang.String) -> writeMetaData
    void endMetaData(java.io.OutputStream) -> endMetaData
    byte[] escape(java.lang.String) -> escape
com.loopj.android.http.JsonValueInterface -> com.loopj.android.http.JsonValueInterface:
    byte[] getEscapedJsonValue() -> getEscapedJsonValue
com.loopj.android.http.MyRedirectHandler -> com.loopj.android.http.MyRedirectHandler:
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    boolean enableRedirects -> enableRedirects
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.loopj.android.http.MySSLSocketFactory -> com.loopj.android.http.MySSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    void fixHttpsURLConnection() -> fixHttpsURLConnection
    java.security.KeyStore getKeystoreOfCA(java.io.InputStream) -> getKeystoreOfCA
    java.security.KeyStore getKeystore() -> getKeystore
    org.apache.http.conn.ssl.SSLSocketFactory getFixedSocketFactory() -> getFixedSocketFactory
    org.apache.http.impl.client.DefaultHttpClient getNewHttpClient(java.security.KeyStore) -> getNewHttpClient
com.loopj.android.http.MySSLSocketFactory$1 -> com.loopj.android.http.MySSLSocketFactory$1:
    com.loopj.android.http.MySSLSocketFactory this$0 -> this$0
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.loopj.android.http.PersistentCookieStore -> com.loopj.android.http.PersistentCookieStore:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    boolean omitNonPersistentCookies -> omitNonPersistentCookies
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    void setOmitNonPersistentCookies(boolean) -> setOmitNonPersistentCookies
    void deleteCookie(org.apache.http.cookie.Cookie) -> deleteCookie
    java.lang.String encodeCookie(com.loopj.android.http.SerializableCookie) -> encodeCookie
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.loopj.android.http.PreemtiveAuthorizationHttpRequestInterceptor -> com.loopj.android.http.PreemtiveAuthorizationHttpRequestInterceptor:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.RangeFileAsyncHttpResponseHandler -> com.loopj.android.http.RangeFileAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    long current -> current
    boolean append -> append
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    void updateRequestHeaders(org.apache.http.client.methods.HttpUriRequest) -> updateRequestHeaders
com.loopj.android.http.RequestHandle -> com.loopj.android.http.RequestHandle:
    java.lang.ref.WeakReference request -> request
    boolean cancel(boolean) -> cancel
    boolean isFinished() -> isFinished
    boolean isCancelled() -> isCancelled
    boolean shouldBeGarbageCollected() -> shouldBeGarbageCollected
com.loopj.android.http.RequestParams -> com.loopj.android.http.RequestParams:
    java.lang.String APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    java.lang.String APPLICATION_JSON -> APPLICATION_JSON
    java.lang.String LOG_TAG -> LOG_TAG
    boolean isRepeatable -> isRepeatable
    boolean useJsonStreamer -> useJsonStreamer
    boolean autoCloseInputStreams -> autoCloseInputStreams
    java.util.concurrent.ConcurrentHashMap urlParams -> urlParams
    java.util.concurrent.ConcurrentHashMap streamParams -> streamParams
    java.util.concurrent.ConcurrentHashMap fileParams -> fileParams
    java.util.concurrent.ConcurrentHashMap urlParamsWithObjects -> urlParamsWithObjects
    java.lang.String contentEncoding -> contentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.File) -> put
    void put(java.lang.String,java.lang.String,java.io.File) -> put
    void put(java.lang.String,java.io.File,java.lang.String) -> put
    void put(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String,boolean) -> put
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void add(java.lang.String,java.lang.String) -> add
    void remove(java.lang.String) -> remove
    boolean has(java.lang.String) -> has
    java.lang.String toString() -> toString
    void setHttpEntityIsRepeatable(boolean) -> setHttpEntityIsRepeatable
    void setUseJsonStreamer(boolean) -> setUseJsonStreamer
    void setAutoCloseInputStreams(boolean) -> setAutoCloseInputStreams
    org.apache.http.HttpEntity getEntity(com.loopj.android.http.ResponseHandlerInterface) -> getEntity
    org.apache.http.HttpEntity createJsonStreamerEntity(com.loopj.android.http.ResponseHandlerInterface) -> createJsonStreamerEntity
    org.apache.http.HttpEntity createFormEntity() -> createFormEntity
    org.apache.http.HttpEntity createMultipartEntity(com.loopj.android.http.ResponseHandlerInterface) -> createMultipartEntity
    java.util.List getParamsList() -> getParamsList
    java.util.List getParamsList(java.lang.String,java.lang.Object) -> getParamsList
    java.lang.String getParamString() -> getParamString
com.loopj.android.http.RequestParams$1 -> com.loopj.android.http.RequestParams$1:
    java.lang.String val$key -> val$key
    java.lang.String val$value -> val$value
com.loopj.android.http.RequestParams$FileWrapper -> com.loopj.android.http.RequestParams$FileWrapper:
    java.io.File file -> file
    java.lang.String contentType -> contentType
    java.lang.String customFileName -> customFileName
com.loopj.android.http.RequestParams$StreamWrapper -> com.loopj.android.http.RequestParams$StreamWrapper:
    java.io.InputStream inputStream -> inputStream
    java.lang.String name -> name
    java.lang.String contentType -> contentType
    boolean autoClose -> autoClose
    com.loopj.android.http.RequestParams$StreamWrapper newInstance(java.io.InputStream,java.lang.String,java.lang.String,boolean) -> newInstance
com.loopj.android.http.ResponseHandlerInterface -> com.loopj.android.http.ResponseHandlerInterface:
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendProgressMessage(int,int) -> sendProgressMessage
    void sendCancelMessage() -> sendCancelMessage
    void sendSuccessMessage(int,org.apache.http.Header[],byte[]) -> sendSuccessMessage
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    void sendRetryMessage(int) -> sendRetryMessage
    java.net.URI getRequestURI() -> getRequestURI
    org.apache.http.Header[] getRequestHeaders() -> getRequestHeaders
    void setRequestURI(java.net.URI) -> setRequestURI
    void setRequestHeaders(org.apache.http.Header[]) -> setRequestHeaders
    void setUseSynchronousMode(boolean) -> setUseSynchronousMode
    boolean getUseSynchronousMode() -> getUseSynchronousMode
    void onPreProcessResponse(com.loopj.android.http.ResponseHandlerInterface,org.apache.http.HttpResponse) -> onPreProcessResponse
    void onPostProcessResponse(com.loopj.android.http.ResponseHandlerInterface,org.apache.http.HttpResponse) -> onPostProcessResponse
com.loopj.android.http.RetryHandler -> com.loopj.android.http.RetryHandler:
    java.util.HashSet exceptionWhitelist -> exceptionWhitelist
    java.util.HashSet exceptionBlacklist -> exceptionBlacklist
    int maxRetries -> maxRetries
    int retrySleepTimeMS -> retrySleepTimeMS
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    void addClassToWhitelist(java.lang.Class) -> addClassToWhitelist
    void addClassToBlacklist(java.lang.Class) -> addClassToBlacklist
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> isInList
com.loopj.android.http.SaxAsyncHttpResponseHandler -> com.loopj.android.http.SaxAsyncHttpResponseHandler:
    org.xml.sax.helpers.DefaultHandler handler -> handler
    java.lang.String LOG_TAG -> LOG_TAG
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    void onSuccess(int,org.apache.http.Header[],org.xml.sax.helpers.DefaultHandler) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],org.xml.sax.helpers.DefaultHandler) -> onFailure
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.loopj.android.http.SerializableCookie -> com.loopj.android.http.SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    org.apache.http.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.loopj.android.http.SimpleMultipartEntity -> com.loopj.android.http.SimpleMultipartEntity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String STR_CR_LF -> STR_CR_LF
    byte[] CR_LF -> CR_LF
    byte[] TRANSFER_ENCODING_BINARY -> TRANSFER_ENCODING_BINARY
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    java.lang.String boundary -> boundary
    byte[] boundaryLine -> boundaryLine
    byte[] boundaryEnd -> boundaryEnd
    boolean isRepeatable -> isRepeatable
    java.util.List fileParts -> fileParts
    java.io.ByteArrayOutputStream out -> out
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> progressHandler
    int bytesWritten -> bytesWritten
    int totalSize -> totalSize
    void addPart(java.lang.String,java.lang.String,java.lang.String) -> addPart
    void addPartWithCharset(java.lang.String,java.lang.String,java.lang.String) -> addPartWithCharset
    void addPart(java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.io.File) -> addPart
    void addPart(java.lang.String,java.io.File,java.lang.String) -> addPart
    void addPart(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String) -> addPart
    java.lang.String normalizeContentType(java.lang.String) -> normalizeContentType
    byte[] createContentType(java.lang.String) -> createContentType
    byte[] createContentDisposition(java.lang.String) -> createContentDisposition
    byte[] createContentDisposition(java.lang.String,java.lang.String) -> createContentDisposition
    void updateProgress(int) -> updateProgress
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    void setIsRepeatable(boolean) -> setIsRepeatable
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    byte[] access$000(com.loopj.android.http.SimpleMultipartEntity) -> access$000
    byte[] access$100(com.loopj.android.http.SimpleMultipartEntity,java.lang.String,java.lang.String) -> access$100
    byte[] access$200(com.loopj.android.http.SimpleMultipartEntity,java.lang.String) -> access$200
    byte[] access$300() -> access$300
    byte[] access$400() -> access$400
    void access$500(com.loopj.android.http.SimpleMultipartEntity,int) -> access$500
com.loopj.android.http.SimpleMultipartEntity$FilePart -> com.loopj.android.http.SimpleMultipartEntity$FilePart:
    java.io.File file -> file
    byte[] header -> header
    com.loopj.android.http.SimpleMultipartEntity this$0 -> this$0
    byte[] createHeader(java.lang.String,java.lang.String,java.lang.String) -> createHeader
    long getTotalLength() -> getTotalLength
    void writeTo(java.io.OutputStream) -> writeTo
com.loopj.android.http.SyncHttpClient -> com.loopj.android.http.SyncHttpClient:
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
com.loopj.android.http.TextHttpResponseHandler -> com.loopj.android.http.TextHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.String getResponseString(byte[],java.lang.String) -> getResponseString
com.mob.commons.authorize.DeviceAuthorizer -> com.mob.commons.authorize.DeviceAuthorizer:
    java.lang.String authorize(android.content.Context,com.mob.commons.authorize.MobProduct) -> authorize
com.mob.commons.authorize.MobProduct -> com.mob.commons.authorize.MobProduct:
    java.lang.String getProductTag() -> getProductTag
    java.lang.String getProductAppkey() -> getProductAppkey
    int getSdkver() -> getSdkver
com.mob.commons.authorize.a -> com.mob.commons.authorize.a:
    java.lang.String a(android.content.Context,com.mob.commons.authorize.MobProduct) -> a
    java.lang.String b(android.content.Context,com.mob.commons.authorize.MobProduct) -> b
    boolean a(android.content.Context,java.util.HashMap) -> a
    java.util.HashMap c(android.content.Context,com.mob.commons.authorize.MobProduct) -> c
    java.lang.String a(android.content.Context,com.mob.commons.authorize.MobProduct,java.util.HashMap,boolean) -> a
    void a(android.content.Context,com.mob.commons.authorize.MobProduct,java.util.HashMap) -> a
com.mob.commons.logcollector.LogsCollector -> com.mob.commons.logcollector.LogsCollector:
    com.mob.commons.logcollector.c a -> a
    int getSDKVersion() -> getSDKVersion
    java.lang.String getAppkey() -> getAppkey
    java.lang.String getSDKTag() -> getSDKTag
    void log(java.lang.String,int,int,java.lang.String,java.lang.String) -> log
    int a(int,java.lang.String) -> a
com.mob.commons.logcollector.a -> com.mob.commons.logcollector.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
com.mob.commons.logcollector.b -> com.mob.commons.logcollector.b:
    android.content.Context a -> a
    com.mob.commons.logcollector.a b -> b
    com.mob.commons.logcollector.b c -> c
    com.mob.commons.logcollector.b a(android.content.Context) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[]) -> a
com.mob.commons.logcollector.c -> com.mob.commons.logcollector.c:
    com.mob.commons.logcollector.c a -> a
    java.lang.String b -> b
    java.util.HashMap c -> c
    android.content.Context d -> d
    com.mob.tools.utils.DeviceHelper e -> e
    com.mob.tools.network.NetworkHelper f -> f
    com.mob.commons.logcollector.d g -> g
    java.io.File h -> h
    com.mob.tools.utils.FileLocker i -> i
    android.content.Context a() -> a
    com.mob.commons.logcollector.c a(android.content.Context) -> a
    void a(int,java.lang.String,java.lang.String) -> a
    void a(int,int,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.os.Message) -> a
    void b(int,int,java.lang.String,java.lang.String,java.lang.String) -> b
    void onMessage(android.os.Message) -> onMessage
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    java.lang.String b() -> b
    void b(int,java.lang.String,java.lang.String) -> b
    java.lang.String c() -> c
    void a(int,java.lang.String,java.lang.String,java.lang.String[]) -> a
    java.util.HashMap c(int,java.lang.String,java.lang.String) -> c
    java.lang.String a(java.lang.String) -> a
    boolean a(java.lang.String,boolean) -> a
com.mob.commons.logcollector.d -> com.mob.commons.logcollector.d:
    com.mob.commons.logcollector.d a -> a
    com.mob.tools.utils.SharePrefrenceHelper b -> b
    com.mob.commons.logcollector.d a(android.content.Context) -> a
    void a(long) -> a
    long a() -> a
    void a(boolean) -> a
    boolean b() -> b
    void b(boolean) -> b
    boolean c() -> c
    void c(boolean) -> c
    boolean d() -> d
    void d(boolean) -> d
    boolean e() -> e
    java.lang.String f() -> f
    void a(java.lang.String) -> a
com.mob.commons.logcollector.e -> com.mob.commons.logcollector.e:
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
com.mob.commons.logcollector.f -> com.mob.commons.logcollector.f:
    long a(android.content.Context,long,java.lang.String,int,java.lang.String) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String[]) -> a
com.mob.tools.FakeActivity -> com.mob.tools.FakeActivity:
    java.lang.Class shellClass -> shellClass
    android.app.Activity activity -> activity
    com.mob.tools.FakeActivity resultReceiver -> resultReceiver
    java.util.HashMap result -> result
    android.view.View contentView -> contentView
    void setShell(java.lang.Class) -> setShell
    void registerExecutor(java.lang.String,java.lang.Object) -> registerExecutor
    void setActivity(android.app.Activity) -> setActivity
    void setContentViewLayoutResName(java.lang.String) -> setContentViewLayoutResName
    void setContentView(android.view.View) -> setContentView
    android.view.View getContentView() -> getContentView
    android.view.View findViewById(int) -> findViewById
    android.view.View findViewByResName(android.view.View,java.lang.String) -> findViewByResName
    android.view.View findViewByResName(java.lang.String) -> findViewByResName
    void onCreate() -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    void finish() -> finish
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    android.content.Context getContext() -> getContext
    void show(android.content.Context,android.content.Intent) -> show
    void showForResult(android.content.Context,android.content.Intent,com.mob.tools.FakeActivity) -> showForResult
    com.mob.tools.FakeActivity getParent() -> getParent
    void setResult(java.util.HashMap) -> setResult
    void sendResult() -> sendResult
    void onResult(java.util.HashMap) -> onResult
    void runOnUIThread(java.lang.Runnable) -> runOnUIThread
    void runOnUIThread(java.lang.Runnable,long) -> runOnUIThread
    void setRequestedOrientation(int) -> setRequestedOrientation
    void requestPortraitOrientation() -> requestPortraitOrientation
    void requestLandscapeOrientation() -> requestLandscapeOrientation
    int getOrientation() -> getOrientation
    void requestFullScreen(boolean) -> requestFullScreen
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.mob.tools.FakeActivity$1 -> com.mob.tools.FakeActivity$1:
    com.mob.tools.FakeActivity this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
com.mob.tools.FakeActivity$2 -> com.mob.tools.FakeActivity$2:
    java.lang.Runnable val$r -> val$r
    com.mob.tools.FakeActivity this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
com.mob.tools.FakeActivity$3 -> com.mob.tools.FakeActivity$3:
    java.lang.Runnable val$r -> val$r
    com.mob.tools.FakeActivity this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
com.mob.tools.MobLog -> com.mob.tools.MobLog:
    java.lang.String getSDKTag() -> getSDKTag
    com.mob.tools.log.NLog getInstance() -> getInstance
com.mob.tools.MobUIShell -> com.mob.tools.MobUIShell:
    java.util.HashMap executors -> executors
    com.mob.tools.FakeActivity executor -> executor
    int forceTheme -> forceTheme
    java.lang.String registerExecutor(java.lang.Object) -> registerExecutor
    java.lang.String registerExecutor(java.lang.String,java.lang.Object) -> registerExecutor
    void setTheme(int) -> setTheme
    void onCreate(android.os.Bundle) -> onCreate
    com.mob.tools.FakeActivity getDefault() -> getDefault
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    void finish() -> finish
    java.lang.Object getExecutor() -> getExecutor
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.mob.tools.SSDKHandlerThread -> com.mob.tools.SSDKHandlerThread:
    int MSG_START -> MSG_START
    int MSG_STOP -> MSG_STOP
    android.os.Handler handler -> handler
    java.lang.String name -> name
    java.lang.String getName() -> getName
    void startThread() -> startThread
    void startThread(int,int,java.lang.Object) -> startThread
    void stopThread() -> stopThread
    void stopThread(int,int,java.lang.Object) -> stopThread
    boolean handleMessage(android.os.Message) -> handleMessage
    void onStart(android.os.Message) -> onStart
    void onStop(android.os.Message) -> onStop
    void onMessage(android.os.Message) -> onMessage
com.mob.tools.gui.AsyncImageView -> com.mob.tools.gui.AsyncImageView:
    int MSG_IMG_GOT -> MSG_IMG_GOT
    java.util.Random rnd -> rnd
    float[] rect -> rect
    boolean scaleToCrop -> scaleToCrop
    java.lang.String url -> url
    int defaultRes -> defaultRes
    android.graphics.Bitmap defaultBm -> defaultBm
    void init(android.content.Context) -> init
    void setRound(float) -> setRound
    void setRound(float,float,float,float) -> setRound
    void setScaleToCropCenter(boolean) -> setScaleToCropCenter
    void execute(java.lang.String,int) -> execute
    void execute(java.lang.String,android.graphics.Bitmap) -> execute
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> onImageGot
    android.graphics.Bitmap goCrop(android.graphics.Bitmap) -> goCrop
    android.graphics.Bitmap goRound(android.graphics.Bitmap) -> goRound
    int[] getSize() -> getSize
    boolean handleMessage(android.os.Message) -> handleMessage
com.mob.tools.gui.BitmapProcessor -> com.mob.tools.gui.BitmapProcessor:
    int CAPACITY -> CAPACITY
    int MAX_REQ_TIME -> MAX_REQ_TIME
    int MAX_SIZE -> MAX_SIZE
    int OVERFLOW_SIZE -> OVERFLOW_SIZE
    int MAX_CACHE_SIZE -> MAX_CACHE_SIZE
    int MAX_CACHE_TIME -> MAX_CACHE_TIME
    com.mob.tools.gui.BitmapProcessor instance -> instance
    int reqTimeout -> reqTimeout
    int maxReqCount -> maxReqCount
    int overflowReqCount -> overflowReqCount
    com.mob.tools.gui.CachePool cachePool -> cachePool
    boolean work -> work
    java.util.Vector reqList -> reqList
    java.io.File cacheDir -> cacheDir
    com.mob.tools.gui.BitmapProcessor$WorkerThread[] workerList -> workerList
    java.util.Vector netReqTPS -> netReqTPS
    com.mob.tools.gui.BitmapProcessor$ManagerThread manager -> manager
    void prepare(android.content.Context) -> prepare
    void prepare(android.content.Context,int,int,int,float,int) -> prepare
    void start() -> start
    void stop() -> stop
    void process(java.lang.String,com.mob.tools.gui.BitmapProcessor$BitmapCallback) -> process
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> getBitmapFromCache
    boolean access$300(com.mob.tools.gui.BitmapProcessor) -> access$300
    int access$500(com.mob.tools.gui.BitmapProcessor) -> access$500
    com.mob.tools.gui.CachePool access$600(com.mob.tools.gui.BitmapProcessor) -> access$600
    java.util.Vector access$700(com.mob.tools.gui.BitmapProcessor) -> access$700
    com.mob.tools.gui.BitmapProcessor$WorkerThread[] access$800(com.mob.tools.gui.BitmapProcessor) -> access$800
    java.io.File access$1300(com.mob.tools.gui.BitmapProcessor) -> access$1300
    java.util.Vector access$1400(com.mob.tools.gui.BitmapProcessor) -> access$1400
    int access$1500(com.mob.tools.gui.BitmapProcessor) -> access$1500
com.mob.tools.gui.BitmapProcessor$BitmapCallback -> com.mob.tools.gui.BitmapProcessor$BitmapCallback:
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> onImageGot
com.mob.tools.gui.BitmapProcessor$ImageReq -> com.mob.tools.gui.BitmapProcessor$ImageReq:
    java.lang.String url -> url
    com.mob.tools.gui.BitmapProcessor$BitmapCallback callback -> callback
    com.mob.tools.gui.BitmapProcessor$WorkerThread worker -> worker
    long reqTime -> reqTime
    android.graphics.Bitmap image -> image
    void throwComplete(android.graphics.Bitmap) -> throwComplete
    java.lang.String toString() -> toString
    java.lang.String access$002(com.mob.tools.gui.BitmapProcessor$ImageReq,java.lang.String) -> access$002
    com.mob.tools.gui.BitmapProcessor$BitmapCallback access$102(com.mob.tools.gui.BitmapProcessor$ImageReq,com.mob.tools.gui.BitmapProcessor$BitmapCallback) -> access$102
    java.lang.String access$000(com.mob.tools.gui.BitmapProcessor$ImageReq) -> access$000
    com.mob.tools.gui.BitmapProcessor$WorkerThread access$1102(com.mob.tools.gui.BitmapProcessor$ImageReq,com.mob.tools.gui.BitmapProcessor$WorkerThread) -> access$1102
    void access$1200(com.mob.tools.gui.BitmapProcessor$ImageReq,android.graphics.Bitmap) -> access$1200
com.mob.tools.gui.BitmapProcessor$ManagerThread -> com.mob.tools.gui.BitmapProcessor$ManagerThread:
    com.mob.tools.gui.BitmapProcessor processor -> processor
    void scan() -> scan
    com.mob.tools.gui.BitmapProcessor access$200(com.mob.tools.gui.BitmapProcessor$ManagerThread) -> access$200
    void access$400(com.mob.tools.gui.BitmapProcessor$ManagerThread) -> access$400
com.mob.tools.gui.BitmapProcessor$ManagerThread$1 -> com.mob.tools.gui.BitmapProcessor$ManagerThread$1:
    int counter -> counter
    com.mob.tools.gui.BitmapProcessor$ManagerThread this$0 -> this$0
    void run() -> run
com.mob.tools.gui.BitmapProcessor$PatchInputStream -> com.mob.tools.gui.BitmapProcessor$PatchInputStream:
    java.io.InputStream in -> in
    long skip(long) -> skip
com.mob.tools.gui.BitmapProcessor$WorkerThread -> com.mob.tools.gui.BitmapProcessor$WorkerThread:
    com.mob.tools.gui.BitmapProcessor processor -> processor
    long lastReport -> lastReport
    boolean localType -> localType
    com.mob.tools.gui.BitmapProcessor$ImageReq curReq -> curReq
    void run() -> run
    void doLocalTask() -> doLocalTask
    void doNetworkTask() -> doNetworkTask
    void doTask(com.mob.tools.gui.BitmapProcessor$ImageReq) -> doTask
    void saveFile(android.graphics.Bitmap,java.io.File,boolean) -> saveFile
    void interrupt() -> interrupt
    boolean access$902(com.mob.tools.gui.BitmapProcessor$WorkerThread,boolean) -> access$902
    long access$1000(com.mob.tools.gui.BitmapProcessor$WorkerThread) -> access$1000
    boolean access$900(com.mob.tools.gui.BitmapProcessor$WorkerThread) -> access$900
    com.mob.tools.gui.BitmapProcessor$ImageReq access$1602(com.mob.tools.gui.BitmapProcessor$WorkerThread,com.mob.tools.gui.BitmapProcessor$ImageReq) -> access$1602
    void access$1700(com.mob.tools.gui.BitmapProcessor$WorkerThread,android.graphics.Bitmap,java.io.File,boolean) -> access$1700
    com.mob.tools.gui.BitmapProcessor access$1800(com.mob.tools.gui.BitmapProcessor$WorkerThread) -> access$1800
com.mob.tools.gui.BitmapProcessor$WorkerThread$1 -> com.mob.tools.gui.BitmapProcessor$WorkerThread$1:
    java.io.File val$file -> val$file
    boolean val$saveAsPng -> val$saveAsPng
    com.mob.tools.gui.BitmapProcessor$ImageReq val$req -> val$req
    com.mob.tools.gui.BitmapProcessor$WorkerThread this$0 -> this$0
    void onResponse(java.io.InputStream) -> onResponse
com.mob.tools.gui.CachePool -> com.mob.tools.gui.CachePool:
    int capacity -> capacity
    int size -> size
    com.mob.tools.gui.CachePool$Node head -> head
    com.mob.tools.gui.CachePool$Node tail -> tail
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void clear() -> clear
    void trimBeforeTime(long) -> trimBeforeTime
    int size() -> size
com.mob.tools.gui.CachePool$1 -> com.mob.tools.gui.CachePool$1:
com.mob.tools.gui.CachePool$Node -> com.mob.tools.gui.CachePool$Node:
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.mob.tools.gui.CachePool$Node previous -> previous
    com.mob.tools.gui.CachePool$Node next -> next
    long cacheTime -> cacheTime
    long access$102(com.mob.tools.gui.CachePool$Node,long) -> access$102
    long access$100(com.mob.tools.gui.CachePool$Node) -> access$100
com.mob.tools.gui.ListInnerAdapter -> com.mob.tools.gui.ListInnerAdapter:
    com.mob.tools.gui.PullToRefreshBaseListAdapter adapter -> adapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
com.mob.tools.gui.MobViewPager -> com.mob.tools.gui.MobViewPager:
    int TOUCH_STATE_REST -> TOUCH_STATE_REST
    int TOUCH_STATE_SCROLLING -> TOUCH_STATE_SCROLLING
    int SNAP_VELOCITY -> SNAP_VELOCITY
    int currentScreen -> currentScreen
    int screenCount -> screenCount
    android.view.View previousPage -> previousPage
    android.view.View currentPage -> currentPage
    android.view.View nextPage -> nextPage
    android.widget.Scroller scroller -> scroller
    int touchSlop -> touchSlop
    int mMaximumVelocity -> mMaximumVelocity
    com.mob.tools.gui.ViewPagerAdapter adapter -> adapter
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int touchState -> touchState
    float lastMotionX -> lastMotionX
    float lastMotionY -> lastMotionY
    void init(android.content.Context) -> init
    void setAdapter(com.mob.tools.gui.ViewPagerAdapter) -> setAdapter
    int getCurrentScreen() -> getCurrentScreen
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void computeScroll() -> computeScroll
    void onScreenChange(int) -> onScreenChange
    void scrollLeft(boolean) -> scrollLeft
    void scrollRight(boolean) -> scrollRight
    void scrollToScreen(int,boolean) -> scrollToScreen
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void handleInterceptMove(android.view.MotionEvent) -> handleInterceptMove
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleScrollMove(android.view.MotionEvent) -> handleScrollMove
com.mob.tools.gui.MobViewPager$1 -> com.mob.tools.gui.MobViewPager$1:
    float[] values -> values
    com.mob.tools.gui.MobViewPager this$0 -> this$0
    float getInterpolation(float) -> getInterpolation
com.mob.tools.gui.OnListStopScrollListener -> com.mob.tools.gui.OnListStopScrollListener:
    void onListStopScrolling(int,int) -> onListStopScrolling
com.mob.tools.gui.PullToRefreshAdatper -> com.mob.tools.gui.PullToRefreshAdatper:
    android.content.Context context -> context
    com.mob.tools.gui.PullToRefreshView parent -> parent
    android.content.Context getContext() -> getContext
    com.mob.tools.gui.PullToRefreshView getParent() -> getParent
    void notifyDataSetChanged() -> notifyDataSetChanged
    android.view.View getHeaderView() -> getHeaderView
    com.mob.tools.gui.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onReversed() -> onReversed
com.mob.tools.gui.PullToRefreshBaseListAdapter -> com.mob.tools.gui.PullToRefreshBaseListAdapter:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    boolean isFling() -> isFling
    void onScroll(com.mob.tools.gui.Scrollable,int,int,int) -> onScroll
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
com.mob.tools.gui.PullToRefreshGridAdapter -> com.mob.tools.gui.PullToRefreshGridAdapter:
    com.mob.tools.gui.ScrollableGridView gridView -> gridView
    com.mob.tools.gui.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    com.mob.tools.gui.OnListStopScrollListener osListener -> osListener
    com.mob.tools.gui.ScrollableGridView onNewGridView(android.content.Context) -> onNewGridView
    com.mob.tools.gui.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    android.widget.GridView getGridView() -> getGridView
    boolean isFling() -> isFling
    void onScroll(com.mob.tools.gui.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setHorizontalSpacing(int) -> setHorizontalSpacing
    void setVerticalSpacing(int) -> setVerticalSpacing
    void setNumColumns(int) -> setNumColumns
    void setColumnWidth(int) -> setColumnWidth
    void setStretchMode(int) -> setStretchMode
    boolean access$002(com.mob.tools.gui.PullToRefreshGridAdapter,boolean) -> access$002
    com.mob.tools.gui.OnListStopScrollListener access$100(com.mob.tools.gui.PullToRefreshGridAdapter) -> access$100
    com.mob.tools.gui.ListInnerAdapter access$200(com.mob.tools.gui.PullToRefreshGridAdapter) -> access$200
    com.mob.tools.gui.ScrollableGridView access$300(com.mob.tools.gui.PullToRefreshGridAdapter) -> access$300
com.mob.tools.gui.PullToRefreshGridAdapter$1 -> com.mob.tools.gui.PullToRefreshGridAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    com.mob.tools.gui.PullToRefreshGridAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.mob.tools.gui.PullToRefreshListAdapter -> com.mob.tools.gui.PullToRefreshListAdapter:
    com.mob.tools.gui.ScrollableListView listView -> listView
    com.mob.tools.gui.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    com.mob.tools.gui.OnListStopScrollListener osListener -> osListener
    com.mob.tools.gui.ScrollableListView onNewListView(android.content.Context) -> onNewListView
    com.mob.tools.gui.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    android.widget.ListView getListView() -> getListView
    boolean isFling() -> isFling
    void onScroll(com.mob.tools.gui.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
    void setDividerHeight(int) -> setDividerHeight
    boolean access$002(com.mob.tools.gui.PullToRefreshListAdapter,boolean) -> access$002
    com.mob.tools.gui.OnListStopScrollListener access$100(com.mob.tools.gui.PullToRefreshListAdapter) -> access$100
    com.mob.tools.gui.ListInnerAdapter access$200(com.mob.tools.gui.PullToRefreshListAdapter) -> access$200
    com.mob.tools.gui.ScrollableListView access$300(com.mob.tools.gui.PullToRefreshListAdapter) -> access$300
com.mob.tools.gui.PullToRefreshListAdapter$1 -> com.mob.tools.gui.PullToRefreshListAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    com.mob.tools.gui.PullToRefreshListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.mob.tools.gui.PullToRefreshView -> com.mob.tools.gui.PullToRefreshView:
    long MIN_REF_TIME -> MIN_REF_TIME
    com.mob.tools.gui.PullToRefreshAdatper adapter -> adapter
    android.view.View headerView -> headerView
    android.view.View bodyView -> bodyView
    int headerHeight -> headerHeight
    int top -> top
    float downY -> downY
    boolean requesting -> requesting
    boolean pullingLock -> pullingLock
    java.lang.Runnable stopAct -> stopAct
    long refreshTime -> refreshTime
    void init() -> init
    void setAdapter(com.mob.tools.gui.PullToRefreshAdatper) -> setAdapter
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    android.view.MotionEvent getCancelEvent(android.view.MotionEvent) -> getCancelEvent
    void performRequest() -> performRequest
    void stopRequest() -> stopRequest
    void performPulling(boolean) -> performPulling
    void reversePulling() -> reversePulling
    void stopPulling() -> stopPulling
    void lockPulling() -> lockPulling
    void releaseLock() -> releaseLock
    boolean canPull() -> canPull
    void access$000(com.mob.tools.gui.PullToRefreshView) -> access$000
    void access$100(com.mob.tools.gui.PullToRefreshView) -> access$100
com.mob.tools.gui.PullToRefreshView$1 -> com.mob.tools.gui.PullToRefreshView$1:
    com.mob.tools.gui.PullToRefreshView this$0 -> this$0
    void run() -> run
com.mob.tools.gui.ScaledImageView -> com.mob.tools.gui.ScaledImageView:
    int DRAG_1 -> DRAG_1
    int DRAG_2 -> DRAG_2
    int NONE -> NONE
    int ZOOM -> ZOOM
    android.graphics.Bitmap bitmap -> bitmap
    float distSquare -> distSquare
    float[] downPoint -> downPoint
    int dragScrollMinDistSquare -> dragScrollMinDistSquare
    com.mob.tools.gui.ScaledImageView$OnMatrixChangedListener listener -> listener
    android.graphics.Matrix matrix -> matrix
    int mode -> mode
    android.graphics.Matrix savedMatrix -> savedMatrix
    void init(android.content.Context) -> init
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    void setOnMatrixChangedListener(com.mob.tools.gui.ScaledImageView$OnMatrixChangedListener) -> setOnMatrixChangedListener
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void rotateLeft() -> rotateLeft
    void rotateRight() -> rotateRight
    void zoomIn() -> zoomIn
    void zoomOut() -> zoomOut
    android.graphics.Bitmap getCropedBitmap(android.graphics.Rect) -> getCropedBitmap
com.mob.tools.gui.ScaledImageView$OnMatrixChangedListener -> com.mob.tools.gui.ScaledImageView$OnMatrixChangedListener:
    void onMactrixChage(android.graphics.Matrix) -> onMactrixChage
com.mob.tools.gui.Scrollable -> com.mob.tools.gui.Scrollable:
com.mob.tools.gui.Scrollable$OnScrollListener -> com.mob.tools.gui.Scrollable$OnScrollListener:
    void onScrollChanged(com.mob.tools.gui.Scrollable,int,int,int,int) -> onScrollChanged
com.mob.tools.gui.ScrollableGridView -> com.mob.tools.gui.ScrollableGridView:
    com.mob.tools.gui.Scrollable$OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    boolean isReadyToPull() -> isReadyToPull
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    boolean access$002(com.mob.tools.gui.ScrollableGridView,boolean) -> access$002
com.mob.tools.gui.ScrollableGridView$1 -> com.mob.tools.gui.ScrollableGridView$1:
    com.mob.tools.gui.ScrollableGridView this$0 -> this$0
    void onScrollChanged(com.mob.tools.gui.Scrollable,int,int,int,int) -> onScrollChanged
com.mob.tools.gui.ScrollableListView -> com.mob.tools.gui.ScrollableListView:
    com.mob.tools.gui.Scrollable$OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    boolean isReadyToPull() -> isReadyToPull
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    boolean access$002(com.mob.tools.gui.ScrollableListView,boolean) -> access$002
com.mob.tools.gui.ScrollableListView$1 -> com.mob.tools.gui.ScrollableListView$1:
    com.mob.tools.gui.ScrollableListView this$0 -> this$0
    void onScrollChanged(com.mob.tools.gui.Scrollable,int,int,int,int) -> onScrollChanged
com.mob.tools.gui.ViewPagerAdapter -> com.mob.tools.gui.ViewPagerAdapter:
    com.mob.tools.gui.MobViewPager parent -> parent
    void setMobViewPager(com.mob.tools.gui.MobViewPager) -> setMobViewPager
    int getCount() -> getCount
    void onScreenChange(int,int) -> onScreenChange
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void invalidate() -> invalidate
com.mob.tools.log.LogCollector -> com.mob.tools.log.LogCollector:
    int LEVEL_NORMAL -> LEVEL_NORMAL
    int LEVEL_CRASH -> LEVEL_CRASH
    int LEVEL_NATIVE -> LEVEL_NATIVE
    void log(java.lang.String,int,int,java.lang.String,java.lang.String) -> log
com.mob.tools.log.LogPrinter -> com.mob.tools.log.LogPrinter:
    java.util.HashMap collectors -> collectors
    java.lang.String packageName -> packageName
    java.lang.String scope -> scope
    void setContext(android.content.Context) -> setContext
    void setCollector(java.lang.String,com.mob.tools.log.LogCollector) -> setCollector
    int println(java.lang.String,int,int,java.lang.String) -> println
    void nativeCrashLog(java.lang.String,java.lang.String) -> nativeCrashLog
    java.lang.String processMessage(java.lang.Thread,java.lang.String) -> processMessage
    java.lang.String getScope(java.lang.Thread) -> getScope
com.mob.tools.log.MobUncaughtExceptionHandler -> com.mob.tools.log.MobUncaughtExceptionHandler:
    boolean disable -> disable
    boolean isDebug -> isDebug
    java.lang.Thread$UncaughtExceptionHandler oriHandler -> oriHandler
    void disable() -> disable
    void closeLog() -> closeLog
    void openLog() -> openLog
    void register() -> register
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.mob.tools.log.NLog -> com.mob.tools.log.NLog:
    com.mob.tools.log.LogPrinter printer -> printer
    java.util.HashMap loggers -> loggers
    void setContext(android.content.Context) -> setContext
    void setCollector(java.lang.String,com.mob.tools.log.LogCollector) -> setCollector
    com.mob.tools.log.NLog getInstanceForSDK(java.lang.String,boolean) -> getInstanceForSDK
    java.lang.String getSDKTag() -> getSDKTag
    int v(java.lang.Throwable) -> v
    int v(java.lang.Object,java.lang.Object[]) -> v
    int v(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> v
    int d(java.lang.Throwable) -> d
    int d(java.lang.Object,java.lang.Object[]) -> d
    int d(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> d
    int i(java.lang.Throwable) -> i
    int i(java.lang.Object,java.lang.Object[]) -> i
    int i(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> i
    int w(java.lang.Throwable) -> w
    int w(java.lang.Object,java.lang.Object[]) -> w
    int w(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> w
    int e(java.lang.Throwable) -> e
    int e(java.lang.Object,java.lang.Object[]) -> e
    int e(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> e
    int crash(java.lang.Throwable) -> crash
    void nativeCrashLog(java.lang.String) -> nativeCrashLog
com.mob.tools.log.NLog$1 -> com.mob.tools.log.NLog$1:
    java.lang.String val$sdkTag -> val$sdkTag
    java.lang.String getSDKTag() -> getSDKTag
com.mob.tools.log.NativeErrorHandler -> com.mob.tools.log.NativeErrorHandler:
    int MAX_LOG_SIZE -> MAX_LOG_SIZE
    boolean enable -> enable
    boolean prepare(android.content.Context) -> prepare
    java.lang.String getCachePath(android.content.Context) -> getCachePath
    void nativePrepare(java.lang.String) -> nativePrepare
    void uploadCreashLog(java.lang.String) -> uploadCreashLog
    java.util.ArrayList parseIndex(java.lang.String) -> parseIndex
    java.lang.String parseLog(java.lang.String,com.mob.tools.log.NativeErrorHandler$NativeCrashInfo) -> parseLog
com.mob.tools.log.NativeErrorHandler$1 -> com.mob.tools.log.NativeErrorHandler$1:
com.mob.tools.log.NativeErrorHandler$NativeCrashInfo -> com.mob.tools.log.NativeErrorHandler$NativeCrashInfo:
    long time -> time
    int signal -> signal
com.mob.tools.network.BufferedByteArrayOutputStream -> com.mob.tools.network.BufferedByteArrayOutputStream:
    boolean switchBuffer(byte[]) -> switchBuffer
    byte[] getBuffer() -> getBuffer
    int getBufferSize() -> getBufferSize
    void write(java.nio.ByteBuffer) -> write
    void write(java.nio.ByteBuffer,int) -> write
com.mob.tools.network.ByteArrayPart -> com.mob.tools.network.ByteArrayPart:
    com.mob.tools.network.BufferedByteArrayOutputStream buffer -> buffer
    com.mob.tools.network.ByteArrayPart append(byte[]) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
com.mob.tools.network.ByteCounterInputStream -> com.mob.tools.network.ByteCounterInputStream:
    java.io.InputStream is -> is
    long readBytes -> readBytes
    com.mob.tools.network.OnReadListener listener -> listener
    int read() -> read
    int read(byte[],int,int) -> read
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    void reset() -> reset
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    void setOnInputStreamReadListener(com.mob.tools.network.OnReadListener) -> setOnInputStreamReadListener
com.mob.tools.network.FilePart -> com.mob.tools.network.FilePart:
    java.io.File file -> file
    void setFile(java.io.File) -> setFile
    void setFile(java.lang.String) -> setFile
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
com.mob.tools.network.HTTPPart -> com.mob.tools.network.HTTPPart:
    long offset -> offset
    com.mob.tools.network.OnReadListener listener -> listener
    java.io.InputStream getInputStream() -> getInputStream
    long length() -> length
    void setOffset(long) -> setOffset
    java.io.InputStream toInputStream() -> toInputStream
    java.lang.Object getInputStreamEntity() -> getInputStreamEntity
    void setOnReadListener(com.mob.tools.network.OnReadListener) -> setOnReadListener
com.mob.tools.network.HttpConnection -> com.mob.tools.network.HttpConnection:
    int getResponseCode() -> getResponseCode
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getErrorStream() -> getErrorStream
    java.util.Map getHeaderFields() -> getHeaderFields
com.mob.tools.network.HttpConnectionImpl -> com.mob.tools.network.HttpConnectionImpl:
    org.apache.http.HttpResponse response -> response
    int getResponseCode() -> getResponseCode
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getErrorStream() -> getErrorStream
    java.util.Map getHeaderFields() -> getHeaderFields
com.mob.tools.network.HttpConnectionImpl23 -> com.mob.tools.network.HttpConnectionImpl23:
    java.net.HttpURLConnection conn -> conn
    int getResponseCode() -> getResponseCode
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getErrorStream() -> getErrorStream
    java.util.Map getHeaderFields() -> getHeaderFields
com.mob.tools.network.HttpPatch -> com.mob.tools.network.HttpPatch:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
com.mob.tools.network.HttpResponseCallback -> com.mob.tools.network.HttpResponseCallback:
    void onResponse(com.mob.tools.network.HttpConnection) -> onResponse
com.mob.tools.network.KVPair -> com.mob.tools.network.KVPair:
    java.lang.String name -> name
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.mob.tools.network.MultiPart -> com.mob.tools.network.MultiPart:
    java.util.ArrayList parts -> parts
    com.mob.tools.network.MultiPart append(com.mob.tools.network.HTTPPart) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
com.mob.tools.network.MultiPartInputStream -> com.mob.tools.network.MultiPartInputStream:
    java.util.ArrayList isList -> isList
    int curIs -> curIs
    void addInputStream(java.io.InputStream) -> addInputStream
    boolean isEmpty() -> isEmpty
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
com.mob.tools.network.NetworkHelper -> com.mob.tools.network.NetworkHelper:
    int connectionTimeout -> connectionTimeout
    int readTimout -> readTimout
    java.lang.String httpGet(java.lang.String,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> httpGet
    java.lang.String downloadCache(android.content.Context,java.lang.String,java.lang.String,boolean,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> downloadCache
    void rawGet(java.lang.String,com.mob.tools.network.RawNetworkCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> rawGet
    java.lang.String jsonPost(java.lang.String,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> jsonPost
    java.lang.String httpPost(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> httpPost
    java.lang.String httpPostFiles(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> httpPostFiles
    void httpPost(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.HttpResponseCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> httpPost
    com.mob.tools.network.HTTPPart getFilePostHTTPPart(java.net.HttpURLConnection,java.lang.String,java.util.ArrayList,java.util.ArrayList) -> getFilePostHTTPPart
    com.mob.tools.network.HTTPPart getTextPostHTTPPart(java.net.HttpURLConnection,java.lang.String,java.util.ArrayList) -> getTextPostHTTPPart
    void rawPost(java.lang.String,java.util.ArrayList,com.mob.tools.network.HTTPPart,com.mob.tools.network.RawNetworkCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> rawPost
    void rawPost(java.lang.String,java.util.ArrayList,com.mob.tools.network.HTTPPart,com.mob.tools.network.HttpResponseCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> rawPost
    void getHttpPostResponse(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,com.mob.tools.network.HttpResponseCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> getHttpPostResponse
    java.lang.String httpPut(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> httpPut
    java.util.ArrayList httpHead(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> httpHead
    void httpPatch(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,long,java.util.ArrayList,com.mob.tools.network.OnReadListener,com.mob.tools.network.HttpResponseCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> httpPatch
    void httpPatchImpl(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,long,java.util.ArrayList,com.mob.tools.network.OnReadListener,com.mob.tools.network.HttpResponseCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> httpPatchImpl
    void httpPatchImpl23(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,long,java.util.ArrayList,com.mob.tools.network.OnReadListener,com.mob.tools.network.HttpResponseCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> httpPatchImpl23
    java.lang.String kvPairsToUrl(java.util.ArrayList) -> kvPairsToUrl
    java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> getConnection
com.mob.tools.network.NetworkHelper$1 -> com.mob.tools.network.NetworkHelper$1:
    java.util.HashMap val$tmpMap -> val$tmpMap
    com.mob.tools.network.NetworkHelper this$0 -> this$0
    void onResponse(com.mob.tools.network.HttpConnection) -> onResponse
com.mob.tools.network.NetworkHelper$2 -> com.mob.tools.network.NetworkHelper$2:
    com.mob.tools.network.NetworkHelper this$0 -> this$0
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.mob.tools.network.NetworkHelper$3 -> com.mob.tools.network.NetworkHelper$3:
    com.mob.tools.network.NetworkHelper this$0 -> this$0
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.mob.tools.network.NetworkHelper$NetworkTimeOut -> com.mob.tools.network.NetworkHelper$NetworkTimeOut:
    int readTimout -> readTimout
    int connectionTimeout -> connectionTimeout
com.mob.tools.network.OnReadListener -> com.mob.tools.network.OnReadListener:
    void onRead(long) -> onRead
com.mob.tools.network.ProgressCallback -> com.mob.tools.network.ProgressCallback:
    void onProgress(long,long) -> onProgress
com.mob.tools.network.RawNetworkCallback -> com.mob.tools.network.RawNetworkCallback:
    void onResponse(java.io.InputStream) -> onResponse
com.mob.tools.network.SSLSocketFactoryEx -> com.mob.tools.network.SSLSocketFactoryEx:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    void allowAllHostnameVerifier() -> allowAllHostnameVerifier
com.mob.tools.network.SSLSocketFactoryEx$1 -> com.mob.tools.network.SSLSocketFactoryEx$1:
    com.mob.tools.network.SSLSocketFactoryEx this$0 -> this$0
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.mob.tools.network.StringPart -> com.mob.tools.network.StringPart:
    java.lang.StringBuilder sb -> sb
    com.mob.tools.network.StringPart append(java.lang.String) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
com.mob.tools.utils.BitmapHelper -> com.mob.tools.utils.BitmapHelper:
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmap(android.content.Context,java.lang.String) -> getBitmap
    java.lang.String downloadBitmap(android.content.Context,java.lang.String) -> downloadBitmap
    java.lang.String saveViewToImage(android.view.View) -> saveViewToImage
    java.lang.String saveViewToImage(android.view.View,int,int) -> saveViewToImage
    android.graphics.Bitmap captureView(android.view.View,int,int) -> captureView
    android.graphics.Bitmap blur(android.graphics.Bitmap,int,int) -> blur
    android.graphics.Bitmap blur(android.graphics.Bitmap,int,boolean) -> blur
    android.graphics.Bitmap roundBitmap(android.graphics.Bitmap,int,int,float,float,float,float) -> roundBitmap
    int[] fixRect(int[],int[]) -> fixRect
    int[] fixRect_2(int[],int[]) -> fixRect_2
    java.lang.String saveBitmap(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int) -> saveBitmap
    java.lang.String saveBitmap(android.content.Context,android.graphics.Bitmap) -> saveBitmap
    android.graphics.Bitmap$CompressFormat getBmpFormat(byte[]) -> getBmpFormat
    android.graphics.Bitmap$CompressFormat getBmpFormat(java.lang.String) -> getBmpFormat
    java.lang.String getMime(java.lang.String) -> getMime
    java.lang.String getMime(byte[]) -> getMime
    boolean bytesStartWith(byte[],byte[]) -> bytesStartWith
    android.graphics.Bitmap cropBitmap(android.graphics.Bitmap,int,int,int,int) -> cropBitmap
    boolean isBlackBitmap(android.graphics.Bitmap) -> isBlackBitmap
    int mixAlpha(int,int) -> mixAlpha
    android.graphics.Bitmap scaleBitmapByHeight(android.content.Context,int,int) -> scaleBitmapByHeight
    android.graphics.Bitmap scaleBitmapByHeight(android.graphics.Bitmap,int) -> scaleBitmapByHeight
com.mob.tools.utils.Data -> com.mob.tools.utils.Data:
    java.lang.String CHAT_SET -> CHAT_SET
    byte[] SHA1(java.lang.String) -> SHA1
    byte[] SHA1(byte[]) -> SHA1
    byte[] SHA1(java.io.InputStream) -> SHA1
    byte[] SHA1(java.io.File) -> SHA1
    byte[] AES128Encode(java.lang.String,java.lang.String) -> AES128Encode
    byte[] AES128Encode(byte[],java.lang.String) -> AES128Encode
    byte[] AES128Encode(byte[],byte[]) -> AES128Encode
    java.lang.String AES128Decode(java.lang.String,byte[]) -> AES128Decode
    byte[] AES128Decode(byte[],byte[]) -> AES128Decode
    java.lang.String byteToHex(byte[]) -> byteToHex
    java.lang.String byteToHex(byte[],int,int) -> byteToHex
    java.lang.String base62(long) -> base62
    java.lang.String MD5(java.lang.String) -> MD5
    java.lang.String MD5(byte[]) -> MD5
    java.lang.String MD5(java.io.File) -> MD5
    byte[] rawMD5(java.lang.String) -> rawMD5
    byte[] rawMD5(byte[]) -> rawMD5
    byte[] rawMD5(java.io.InputStream) -> rawMD5
    java.lang.String Base64AES(java.lang.String,java.lang.String) -> Base64AES
    java.lang.String urlEncode(java.lang.String,java.lang.String) -> urlEncode
    java.lang.String urlEncode(java.lang.String) -> urlEncode
    java.lang.String CRC32(byte[]) -> CRC32
    byte[] rawRSAEncode(byte[],byte[],int) -> rawRSAEncode
    byte[] rawRSADecode(byte[],byte[],int) -> rawRSADecode
    java.lang.String toHex(byte[]) -> toHex
com.mob.tools.utils.DeviceHelper -> com.mob.tools.utils.DeviceHelper:
    android.content.Context context -> context
    com.mob.tools.utils.DeviceHelper deviceHelper -> deviceHelper
    com.mob.tools.utils.DeviceHelper getInstance(android.content.Context) -> getInstance
    boolean isRooted() -> isRooted
    java.lang.String getSSID() -> getSSID
    java.lang.String getBssid() -> getBssid
    java.lang.String getMacAddress() -> getMacAddress
    java.lang.String getCurrentNetworkHardwareAddress() -> getCurrentNetworkHardwareAddress
    java.lang.String[] listNetworkHardwareAddress() -> listNetworkHardwareAddress
    java.lang.String getHardwareAddressFromShell(java.lang.String) -> getHardwareAddressFromShell
    java.lang.String getModel() -> getModel
    java.lang.String getManufacturer() -> getManufacturer
    java.lang.String getDeviceId() -> getDeviceId
    java.lang.String getMime() -> getMime
    java.lang.String getIMEI() -> getIMEI
    java.lang.String getSerialno() -> getSerialno
    java.lang.String getDeviceData() -> getDeviceData
    java.lang.String getDeviceDataNotAES() -> getDeviceDataNotAES
    java.lang.String Base64AES(java.lang.String,java.lang.String) -> Base64AES
    java.lang.String getOSVersion() -> getOSVersion
    int getOSVersionInt() -> getOSVersionInt
    java.lang.String getOSVersionName() -> getOSVersionName
    java.lang.String getOSLanguage() -> getOSLanguage
    java.lang.String getOSCountry() -> getOSCountry
    java.lang.String getScreenSize() -> getScreenSize
    java.lang.String getCarrier() -> getCarrier
    java.lang.String getCarrierName() -> getCarrierName
    java.lang.String getMCC() -> getMCC
    java.lang.String getMNC() -> getMNC
    java.lang.String getSimSerialNumber() -> getSimSerialNumber
    java.lang.String getLine1Number() -> getLine1Number
    java.lang.String getBluetoothName() -> getBluetoothName
    java.lang.String getSignMD5() -> getSignMD5
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    java.lang.String getNetworkType() -> getNetworkType
    java.lang.String getNetworkTypeForStatic() -> getNetworkTypeForStatic
    java.lang.String getDetailNetworkTypeForStatic() -> getDetailNetworkTypeForStatic
    int getPlatformCode() -> getPlatformCode
    boolean is4GMobileNetwork() -> is4GMobileNetwork
    boolean isFastMobileNetwork() -> isFastMobileNetwork
    org.json.JSONArray getRunningApp() -> getRunningApp
    java.lang.String getRunningAppStr() -> getRunningAppStr
    java.lang.String getDeviceKey() -> getDeviceKey
    java.lang.String getCharAndNumr(int) -> getCharAndNumr
    java.lang.String getLocalDeviceKey() -> getLocalDeviceKey
    void saveLocalDeviceKey(java.lang.String) -> saveLocalDeviceKey
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getAppName() -> getAppName
    int getAppVersion() -> getAppVersion
    java.lang.String getAppVersionName() -> getAppVersionName
    java.util.ArrayList getInstalledApp(boolean) -> getInstalledApp
    boolean isSystemApp(android.content.pm.PackageInfo) -> isSystemApp
    java.lang.String getNetworkOperator() -> getNetworkOperator
    boolean checkPermission(java.lang.String) -> checkPermission
    java.lang.String getTopTaskPackageName() -> getTopTaskPackageName
    boolean getSdcardState() -> getSdcardState
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getAndroidID() -> getAndroidID
    java.lang.String getAdvertisingID() -> getAdvertisingID
    void hideSoftInput(android.view.View) -> hideSoftInput
    void showSoftInput(android.view.View) -> showSoftInput
    boolean isMainProcess(android.content.Context,int) -> isMainProcess
    boolean isMainProcess(int) -> isMainProcess
    java.lang.String getIMSI() -> getIMSI
    java.lang.String getIPAddress() -> getIPAddress
    float[] getLocation(int,int) -> getLocation
    java.util.HashMap ping(java.lang.String,int,int) -> ping
    int getCellId() -> getCellId
    int getCellLac() -> getCellLac
    java.lang.String getDeviceType() -> getDeviceType
com.mob.tools.utils.DeviceHelper$1 -> com.mob.tools.utils.DeviceHelper$1:
com.mob.tools.utils.DeviceHelper$GSConnection -> com.mob.tools.utils.DeviceHelper$GSConnection:
    boolean got -> got
    java.util.concurrent.BlockingQueue iBinders -> iBinders
    com.mob.tools.utils.DeviceHelper this$0 -> this$0
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    android.os.IBinder takeBinder() -> takeBinder
com.mob.tools.utils.FileLocker -> com.mob.tools.utils.FileLocker:
    java.io.FileOutputStream fos -> fos
    java.nio.channels.FileLock lock -> lock
    void setLockFile(java.lang.String) -> setLockFile
    boolean lock() -> lock
    boolean lock(boolean) -> lock
    void unlock() -> unlock
    void release() -> release
com.mob.tools.utils.Hashon -> com.mob.tools.utils.Hashon:
    java.util.HashMap fromJson(java.lang.String) -> fromJson
    java.util.HashMap fromJson(org.json.JSONObject) -> fromJson
    java.util.ArrayList fromJson(org.json.JSONArray) -> fromJson
    java.lang.String fromHashMap(java.util.HashMap) -> fromHashMap
    org.json.JSONObject getJSONObject(java.util.HashMap) -> getJSONObject
    boolean isBasicArray(java.lang.Object) -> isBasicArray
    java.util.ArrayList arrayToList(java.lang.Object) -> arrayToList
    org.json.JSONArray getJSONArray(java.util.ArrayList) -> getJSONArray
    java.lang.String format(java.lang.String) -> format
    java.lang.String format(java.lang.String,java.util.HashMap) -> format
    java.lang.String format(java.lang.String,java.util.ArrayList) -> format
com.mob.tools.utils.LocalDB -> com.mob.tools.utils.LocalDB:
    java.io.File dbFile -> dbFile
    java.util.HashMap map -> map
    void open(java.lang.String) -> open
    void commit() -> commit
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void putString(java.lang.String,java.lang.String) -> putString
    java.lang.String getString(java.lang.String) -> getString
    void putBoolean(java.lang.String,java.lang.Boolean) -> putBoolean
    boolean getBoolean(java.lang.String) -> getBoolean
    void putLong(java.lang.String,java.lang.Long) -> putLong
    long getLong(java.lang.String) -> getLong
    void putInt(java.lang.String,java.lang.Integer) -> putInt
    int getInt(java.lang.String) -> getInt
    void putFloat(java.lang.String,java.lang.Float) -> putFloat
    float getFloat(java.lang.String) -> getFloat
    void remove(java.lang.String) -> remove
    void putObject(java.lang.String,java.lang.Object) -> putObject
    java.lang.Object getObject(java.lang.String) -> getObject
com.mob.tools.utils.LocationHelper -> com.mob.tools.utils.LocationHelper:
    android.os.Handler handler -> handler
    java.util.ArrayList res -> res
    int GPSTimeoutSec -> GPSTimeoutSec
    int networkTimeoutSec -> networkTimeoutSec
    android.location.LocationManager lm -> lm
    boolean gpsRequesting -> gpsRequesting
    boolean networkRequesting -> networkRequesting
    float[] getLocation(android.content.Context) -> getLocation
    float[] getLocation(android.content.Context,int) -> getLocation
    float[] getLocation(android.content.Context,int,int) -> getLocation
    boolean handleMessage(android.os.Message) -> handleMessage
    void onRequest() -> onRequest
    void onGPSTimeout() -> onGPSTimeout
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
com.mob.tools.utils.R -> com.mob.tools.utils.R:
    float density -> density
    int deviceWidth -> deviceWidth
    java.lang.Object rp -> rp
    int dipToPx(android.content.Context,int) -> dipToPx
    int pxToDip(android.content.Context,int) -> pxToDip
    int designToDevice(android.content.Context,int,int) -> designToDevice
    int designToDevice(android.content.Context,float,int) -> designToDevice
    int[] getScreenSize(android.content.Context) -> getScreenSize
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
    void setResourceProvider(java.lang.Object) -> setResourceProvider
    int getResId(android.content.Context,java.lang.String,java.lang.String) -> getResId
    int getBitmapRes(android.content.Context,java.lang.String) -> getBitmapRes
    int getStringRes(android.content.Context,java.lang.String) -> getStringRes
    int getStringArrayRes(android.content.Context,java.lang.String) -> getStringArrayRes
    int getLayoutRes(android.content.Context,java.lang.String) -> getLayoutRes
    int getStyleRes(android.content.Context,java.lang.String) -> getStyleRes
    int getIdRes(android.content.Context,java.lang.String) -> getIdRes
    int getColorRes(android.content.Context,java.lang.String) -> getColorRes
    int getRawRes(android.content.Context,java.lang.String) -> getRawRes
    int getPluralsRes(android.content.Context,java.lang.String) -> getPluralsRes
    int getAnimRes(android.content.Context,java.lang.String) -> getAnimRes
    void setCacheRoot(java.lang.String) -> setCacheRoot
    java.lang.String getCacheRoot(android.content.Context) -> getCacheRoot
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> getCachePath
    java.lang.String getImageCachePath(android.content.Context) -> getImageCachePath
    void clearCache(android.content.Context) -> clearCache
    void deleteFilesInFolder(java.io.File) -> deleteFilesInFolder
    void deleteFileAndFolder(java.io.File) -> deleteFileAndFolder
    java.lang.String toWordText(java.lang.String,int) -> toWordText
    int getTextLengthInWord(java.lang.String) -> getTextLengthInWord
    long strToDate(java.lang.String) -> strToDate
    long dateStrToLong(java.lang.String) -> dateStrToLong
    java.util.Date longToDate(long) -> longToDate
    java.lang.String longToTime(long,int) -> longToTime
    long dateToLong(java.lang.String) -> dateToLong
    int[] covertTimeInYears(long) -> covertTimeInYears
    android.net.Uri pathToContentUri(android.content.Context,java.lang.String) -> pathToContentUri
    java.lang.String contentUriToPath(android.content.Context,android.net.Uri) -> contentUriToPath
    java.lang.String encodeUrl(android.os.Bundle) -> encodeUrl
    java.lang.String encodeUrl(java.util.ArrayList) -> encodeUrl
    android.os.Bundle urlToBundle(java.lang.String) -> urlToBundle
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
    int parseInt(java.lang.String) -> parseInt
    int parseInt(java.lang.String,int) -> parseInt
    int parseInt(java.lang.String,int,int,boolean) -> parseInt
    int digit(int,int) -> digit
    java.lang.Throwable invalidInt(java.lang.String) -> invalidInt
    long parseLong(java.lang.String) -> parseLong
    long parseLong(java.lang.String,int) -> parseLong
    long parseLong(java.lang.String,int,int,boolean) -> parseLong
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object forceCast(java.lang.Object) -> forceCast
    boolean copyFile(java.lang.String,java.lang.String) -> copyFile
    void copyFile(java.io.FileInputStream,java.io.FileOutputStream) -> copyFile
    long getFileSize(java.lang.String) -> getFileSize
    long getFileSize(java.io.File) -> getFileSize
    boolean saveObjectToFile(java.lang.String,java.lang.Object) -> saveObjectToFile
    java.lang.Object readObjectFromFile(java.lang.String) -> readObjectFromFile
com.mob.tools.utils.ReflectHelper -> com.mob.tools.utils.ReflectHelper:
    java.util.HashSet packageSet -> packageSet
    java.util.HashMap classMap -> classMap
    com.mob.tools.gui.CachePool cachedMethod -> cachedMethod
    com.mob.tools.gui.CachePool cachedConstr -> cachedConstr
    java.lang.String importClass(java.lang.String) -> importClass
    java.lang.String importClass(java.lang.String,java.lang.String) -> importClass
    java.lang.Class getImportedClass(java.lang.String) -> getImportedClass
    java.lang.Class[] getTypes(java.lang.Object[]) -> getTypes
    boolean primitiveEquals(java.lang.Class,java.lang.Class) -> primitiveEquals
    boolean matchParams(java.lang.Class[],java.lang.Class[]) -> matchParams
    java.lang.Object newInstance(java.lang.String,java.lang.Object[]) -> newInstance
    java.lang.Object onNewInstance(java.lang.String,java.lang.Object[]) -> onNewInstance
    java.lang.Object invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Object[]) -> invokeStaticMethod
    java.lang.Object onInvokeStaticMethod(java.lang.String,java.lang.String,java.lang.Object[]) -> onInvokeStaticMethod
    java.lang.Object invokeInstanceMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeInstanceMethod
    java.lang.Object onInvokeInstanceMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> onInvokeInstanceMethod
    java.lang.Object getStaticField(java.lang.String,java.lang.String) -> getStaticField
    java.lang.Object onGetStaticField(java.lang.String,java.lang.String) -> onGetStaticField
    void setStaticField(java.lang.String,java.lang.String,java.lang.Object) -> setStaticField
    void onSetStaticField(java.lang.String,java.lang.String,java.lang.Object) -> onSetStaticField
    java.lang.Object getInstanceField(java.lang.Object,java.lang.String) -> getInstanceField
    java.lang.Object onGetInstanceField(java.lang.Object,java.lang.String) -> onGetInstanceField
    void setInstanceField(java.lang.Object,java.lang.String,java.lang.Object) -> setInstanceField
    void onSetInstanceField(java.lang.Object,java.lang.String,java.lang.Object) -> onSetInstanceField
    java.lang.Class getClass(java.lang.String) -> getClass
    java.lang.Object createProxy(java.util.HashMap,java.lang.Class) -> createProxy
    java.lang.Object createProxy(java.util.HashMap,java.lang.Class[]) -> createProxy
com.mob.tools.utils.ReflectHelper$1 -> com.mob.tools.utils.ReflectHelper$1:
    java.util.HashMap val$proxyHandler -> val$proxyHandler
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.mob.tools.utils.ReflectHelper$ReflectRunnable -> com.mob.tools.utils.ReflectHelper$ReflectRunnable:
    java.lang.Object run(java.lang.Object) -> run
com.mob.tools.utils.SQLiteHelper -> com.mob.tools.utils.SQLiteHelper:
    com.mob.tools.utils.SQLiteHelper$SingleTableDB getDatabase(android.content.Context,java.lang.String,int) -> getDatabase
    long insert(com.mob.tools.utils.SQLiteHelper$SingleTableDB,android.content.ContentValues) -> insert
    int delete(com.mob.tools.utils.SQLiteHelper$SingleTableDB,java.lang.String,java.lang.String[]) -> delete
    int update(com.mob.tools.utils.SQLiteHelper$SingleTableDB,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    android.database.Cursor query(com.mob.tools.utils.SQLiteHelper$SingleTableDB,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    void execSQL(com.mob.tools.utils.SQLiteHelper$SingleTableDB,java.lang.String) -> execSQL
    android.database.Cursor rawQuery(com.mob.tools.utils.SQLiteHelper$SingleTableDB,java.lang.String,java.lang.String[]) -> rawQuery
    int getSize(com.mob.tools.utils.SQLiteHelper$SingleTableDB) -> getSize
    void close(com.mob.tools.utils.SQLiteHelper$SingleTableDB) -> close
com.mob.tools.utils.SQLiteHelper$1 -> com.mob.tools.utils.SQLiteHelper$1:
com.mob.tools.utils.SQLiteHelper$SingleTableDB -> com.mob.tools.utils.SQLiteHelper$SingleTableDB:
    android.content.Context context -> context
    java.lang.String name -> name
    int version -> version
    android.database.sqlite.SQLiteOpenHelper sqlite -> sqlite
    java.util.LinkedHashMap fieldTypes -> fieldTypes
    java.util.HashMap fieldLimits -> fieldLimits
    java.lang.String primary -> primary
    boolean primaryAutoincrement -> primaryAutoincrement
    void addField(java.lang.String,java.lang.String,boolean) -> addField
    void setPrimary(java.lang.String,boolean) -> setPrimary
    void open() -> open
    void close() -> close
    java.lang.String getName() -> getName
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    android.database.sqlite.SQLiteDatabase getReadableDatabase() -> getReadableDatabase
    void access$100(com.mob.tools.utils.SQLiteHelper$SingleTableDB) -> access$100
    android.database.sqlite.SQLiteDatabase access$200(com.mob.tools.utils.SQLiteHelper$SingleTableDB) -> access$200
    java.lang.String access$300(com.mob.tools.utils.SQLiteHelper$SingleTableDB) -> access$300
    android.database.sqlite.SQLiteDatabase access$400(com.mob.tools.utils.SQLiteHelper$SingleTableDB) -> access$400
    void access$500(com.mob.tools.utils.SQLiteHelper$SingleTableDB) -> access$500
    java.lang.String access$600(com.mob.tools.utils.SQLiteHelper$SingleTableDB) -> access$600
    java.util.LinkedHashMap access$700(com.mob.tools.utils.SQLiteHelper$SingleTableDB) -> access$700
    java.util.HashMap access$800(com.mob.tools.utils.SQLiteHelper$SingleTableDB) -> access$800
    java.lang.String access$900(com.mob.tools.utils.SQLiteHelper$SingleTableDB) -> access$900
    boolean access$1000(com.mob.tools.utils.SQLiteHelper$SingleTableDB) -> access$1000
com.mob.tools.utils.SQLiteHelper$SingleTableDB$1 -> com.mob.tools.utils.SQLiteHelper$SingleTableDB$1:
    com.mob.tools.utils.SQLiteHelper$SingleTableDB this$0 -> this$0
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
com.mob.tools.utils.SharePrefrenceHelper -> com.mob.tools.utils.SharePrefrenceHelper:
    android.content.Context context -> context
    android.content.SharedPreferences prefrence -> prefrence
    void open(java.lang.String) -> open
    void open(java.lang.String,int) -> open
    void putString(java.lang.String,java.lang.String) -> putString
    java.lang.String getString(java.lang.String) -> getString
    void putBoolean(java.lang.String,java.lang.Boolean) -> putBoolean
    boolean getBoolean(java.lang.String) -> getBoolean
    void putLong(java.lang.String,java.lang.Long) -> putLong
    long getLong(java.lang.String) -> getLong
    void putInt(java.lang.String,java.lang.Integer) -> putInt
    int getInt(java.lang.String) -> getInt
    void putFloat(java.lang.String,java.lang.Float) -> putFloat
    float getFloat(java.lang.String) -> getFloat
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
com.mob.tools.utils.UIHandler -> com.mob.tools.utils.UIHandler:
    java.lang.String[] prays -> prays
    android.os.Handler handler -> handler
    void prepare() -> prepare
    void reset() -> reset
    void printPray() -> printPray
    void handleMessage(android.os.Message) -> handleMessage
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> getShellMessage
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> getShellMessage
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> sendMessage
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> sendMessageDelayed
    boolean sendMessageAtTime(android.os.Message,long,android.os.Handler$Callback) -> sendMessageAtTime
    boolean sendMessageAtFrontOfQueue(android.os.Message,android.os.Handler$Callback) -> sendMessageAtFrontOfQueue
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> sendEmptyMessage
    boolean sendEmptyMessageAtTime(int,long,android.os.Handler$Callback) -> sendEmptyMessageAtTime
    boolean sendEmptyMessageDelayed(int,long,android.os.Handler$Callback) -> sendEmptyMessageDelayed
    void access$000(android.os.Message) -> access$000
com.mob.tools.utils.UIHandler$1 -> com.mob.tools.utils.UIHandler$1:
    boolean handleMessage(android.os.Message) -> handleMessage
com.mob.tools.utils.UIHandler$InnerObj -> com.mob.tools.utils.UIHandler$InnerObj:
    android.os.Message msg -> msg
    android.os.Handler$Callback callback -> callback
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.nostra13.universalimageloader.cache.disc.DiscCacheAware:
    java.io.File getDirectory() -> getDirectory
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void close() -> close
    void clear() -> clear
com.nostra13.universalimageloader.cache.disc.DiskCache -> com.nostra13.universalimageloader.cache.disc.DiskCache:
com.nostra13.universalimageloader.cache.disc.impl.BaseDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.BaseDiscCache:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> DEFAULT_COMPRESS_FORMAT
    int DEFAULT_COMPRESS_QUALITY -> DEFAULT_COMPRESS_QUALITY
    java.lang.String ERROR_ARG_NULL -> ERROR_ARG_NULL
    java.lang.String TEMP_IMAGE_POSTFIX -> TEMP_IMAGE_POSTFIX
    java.io.File cacheDir -> cacheDir
    java.io.File reserveCacheDir -> reserveCacheDir
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> fileNameGenerator
    int bufferSize -> bufferSize
    android.graphics.Bitmap$CompressFormat compressFormat -> compressFormat
    int compressQuality -> compressQuality
    java.io.File getDirectory() -> getDirectory
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void close() -> close
    void clear() -> clear
    java.io.File getFile(java.lang.String) -> getFile
    void setBufferSize(int) -> setBufferSize
    void setCompressFormat(android.graphics.Bitmap$CompressFormat) -> setCompressFormat
    void setCompressQuality(int) -> setCompressQuality
com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache:
    long maxFileAge -> maxFileAge
    java.util.Map loadingDates -> loadingDates
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void clear() -> clear
    void rememberUsage(java.lang.String) -> rememberUsage
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache:
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache:
    java.lang.String JOURNAL_FILE -> JOURNAL_FILE
    java.lang.String JOURNAL_FILE_TEMP -> JOURNAL_FILE_TEMP
    java.lang.String JOURNAL_FILE_BACKUP -> JOURNAL_FILE_BACKUP
    java.lang.String MAGIC -> MAGIC
    java.lang.String VERSION_1 -> VERSION_1
    long ANY_SEQUENCE_NUMBER -> ANY_SEQUENCE_NUMBER
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> LEGAL_KEY_PATTERN
    java.lang.String CLEAN -> CLEAN
    java.lang.String DIRTY -> DIRTY
    java.lang.String REMOVE -> REMOVE
    java.lang.String READ -> READ
    java.io.File directory -> directory
    java.io.File journalFile -> journalFile
    java.io.File journalFileTmp -> journalFileTmp
    java.io.File journalFileBackup -> journalFileBackup
    int appVersion -> appVersion
    long maxSize -> maxSize
    int maxFileCount -> maxFileCount
    int valueCount -> valueCount
    long size -> size
    int fileCount -> fileCount
    java.io.Writer journalWriter -> journalWriter
    java.util.LinkedHashMap lruEntries -> lruEntries
    int redundantOpCount -> redundantOpCount
    long nextSequenceNumber -> nextSequenceNumber
    java.util.concurrent.ThreadPoolExecutor executorService -> executorService
    java.util.concurrent.Callable cleanupCallable -> cleanupCallable
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache open(java.io.File,int,int,long,int) -> open
    void readJournal() -> readJournal
    void readJournalLine(java.lang.String) -> readJournalLine
    void processJournal() -> processJournal
    void rebuildJournal() -> rebuildJournal
    void deleteIfExists(java.io.File) -> deleteIfExists
    void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot get(java.lang.String) -> get
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String) -> edit
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    java.io.File getDirectory() -> getDirectory
    long getMaxSize() -> getMaxSize
    int getMaxFileCount() -> getMaxFileCount
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    long fileCount() -> fileCount
    void completeEdit(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> completeEdit
    boolean journalRebuildRequired() -> journalRebuildRequired
    boolean remove(java.lang.String) -> remove
    boolean isClosed() -> isClosed
    void checkNotClosed() -> checkNotClosed
    void flush() -> flush
    void close() -> close
    void trimToSize() -> trimToSize
    void trimToFileCount() -> trimToFileCount
    void delete() -> delete
    void validateKey(java.lang.String) -> validateKey
    java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    java.io.Writer access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$000
    void access$100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$100
    void access$200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$200
    boolean access$300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$300
    void access$400(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$400
    int access$502(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,int) -> access$502
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$1700(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,java.lang.String,long) -> access$1700
    java.lang.String access$1800(java.io.InputStream) -> access$1800
    int access$1900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$1900
    java.io.File access$2000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$2000
    java.io.OutputStream access$2100() -> access$2100
    void access$2300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> access$2300
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1 -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2 -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2:
    void write(int) -> write
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry entry -> entry
    boolean[] written -> written
    boolean hasErrors -> hasErrors
    boolean committed -> committed
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    java.io.InputStream newInputStream(int) -> newInputStream
    java.lang.String getString(int) -> getString
    java.io.OutputStream newOutputStream(int) -> newOutputStream
    void set(int,java.lang.String) -> set
    void commit() -> commit
    void abort() -> abort
    void abortUnlessCommitted() -> abortUnlessCommitted
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry access$1500(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$1500
    boolean[] access$1600(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$1600
    boolean access$2402(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> access$2402
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor this$1 -> this$1
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry:
    java.lang.String key -> key
    long[] lengths -> lengths
    boolean readable -> readable
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor currentEditor -> currentEditor
    long sequenceNumber -> sequenceNumber
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    java.lang.String getLengths() -> getLengths
    void setLengths(java.lang.String[]) -> setLengths
    java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    java.io.File getCleanFile(int) -> getCleanFile
    java.io.File getDirtyFile(int) -> getDirtyFile
    boolean access$702(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,boolean) -> access$702
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$802(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$802
    void access$900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,java.lang.String[]) -> access$900
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$800(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$800
    long[] access$1100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1100
    java.lang.String access$1200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1200
    boolean access$700(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$700
    long access$1300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1300
    long access$1302(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,long) -> access$1302
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot:
    java.lang.String key -> key
    long sequenceNumber -> sequenceNumber
    java.io.File[] files -> files
    java.io.InputStream[] ins -> ins
    long[] lengths -> lengths
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit() -> edit
    java.io.File getFile(int) -> getFile
    java.io.InputStream getInputStream(int) -> getInputStream
    java.lang.String getString(int) -> getString
    long getLength(int) -> getLength
    void close() -> close
com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> DEFAULT_COMPRESS_FORMAT
    int DEFAULT_COMPRESS_QUALITY -> DEFAULT_COMPRESS_QUALITY
    java.lang.String ERROR_ARG_NULL -> ERROR_ARG_NULL
    java.lang.String ERROR_ARG_NEGATIVE -> ERROR_ARG_NEGATIVE
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache -> cache
    java.io.File reserveCacheDir -> reserveCacheDir
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> fileNameGenerator
    int bufferSize -> bufferSize
    android.graphics.Bitmap$CompressFormat compressFormat -> compressFormat
    int compressQuality -> compressQuality
    void initCache(java.io.File,java.io.File,long,int) -> initCache
    java.io.File getDirectory() -> getDirectory
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void close() -> close
    void clear() -> clear
    java.lang.String getKey(java.lang.String) -> getKey
    void setBufferSize(int) -> setBufferSize
    void setCompressFormat(android.graphics.Bitmap$CompressFormat) -> setCompressFormat
    void setCompressQuality(int) -> setCompressQuality
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader -> com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    java.io.InputStream in -> in
    java.nio.charset.Charset charset -> charset
    byte[] buf -> buf
    int pos -> pos
    int end -> end
    void close() -> close
    java.lang.String readLine() -> readLine
    void fillBuf() -> fillBuf
    java.nio.charset.Charset access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader) -> access$000
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1 -> com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1:
    com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader this$0 -> this$0
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.cache.disc.impl.ext.Util -> com.nostra13.universalimageloader.cache.disc.impl.ext.Util:
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.lang.String readFully(java.io.Reader) -> readFully
    void deleteContents(java.io.File) -> deleteContents
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator:
    java.lang.String HASH_ALGORITHM -> HASH_ALGORITHM
    int RADIX -> RADIX
    java.lang.String generate(java.lang.String) -> generate
    byte[] getMD5(byte[]) -> getMD5
com.nostra13.universalimageloader.cache.memory.BaseMemoryCache -> com.nostra13.universalimageloader.cache.memory.BaseMemoryCache:
    java.util.Map softMap -> softMap
    android.graphics.Bitmap get(java.lang.String) -> get
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache:
    int MAX_NORMAL_CACHE_SIZE_IN_MB -> MAX_NORMAL_CACHE_SIZE_IN_MB
    int MAX_NORMAL_CACHE_SIZE -> MAX_NORMAL_CACHE_SIZE
    int sizeLimit -> sizeLimit
    java.util.concurrent.atomic.AtomicInteger cacheSize -> cacheSize
    java.util.List hardCache -> hardCache
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.String) -> remove
    void clear() -> clear
    int getSizeLimit() -> getSizeLimit
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.Object remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.MemoryCache -> com.nostra13.universalimageloader.cache.memory.MemoryCache:
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.nostra13.universalimageloader.cache.memory.MemoryCacheAware:
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache:
    java.util.List queue -> queue
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCache cache -> cache
    java.util.Comparator keyComparator -> keyComparator
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    android.graphics.Bitmap remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Collection keys() -> keys
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache:
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    float LOAD_FACTOR -> LOAD_FACTOR
    java.util.Map lruCache -> lruCache
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    android.graphics.Bitmap remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache:
    java.util.Map valueSizes -> valueSizes
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCache cache -> cache
    long maxAge -> maxAge
    java.util.Map loadingDates -> loadingDates
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    android.graphics.Bitmap remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int maxSize -> maxSize
    int size -> size
    android.graphics.Bitmap get(java.lang.String) -> get
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void trimToSize(int) -> trimToSize
    android.graphics.Bitmap remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    java.lang.String toString() -> toString
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache:
    java.util.Map usingCounts -> usingCounts
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    android.graphics.Bitmap remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache:
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> createExecutor
    java.util.concurrent.Executor createTaskDistributor() -> createTaskDistributor
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> createFileNameGenerator
    com.nostra13.universalimageloader.cache.disc.DiskCache createDiskCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,long,int) -> createDiskCache
    java.io.File createReserveDiskCacheDir(android.content.Context) -> createReserveDiskCacheDir
    com.nostra13.universalimageloader.cache.memory.MemoryCache createMemoryCache(int) -> createMemoryCache
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> createImageDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> createImageDecoder
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> createBitmapDisplayer
    java.util.concurrent.ThreadFactory createThreadFactory(int,java.lang.String) -> createThreadFactory
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> poolNumber
    java.lang.ThreadGroup group -> group
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    int threadPriority -> threadPriority
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.nostra13.universalimageloader.core.DisplayBitmapTask:
    java.lang.String LOG_DISPLAY_IMAGE_IN_IMAGEAWARE -> LOG_DISPLAY_IMAGE_IN_IMAGEAWARE
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    android.graphics.Bitmap bitmap -> bitmap
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    void run() -> run
    boolean isViewWasReused() -> isViewWasReused
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.nostra13.universalimageloader.core.DisplayImageOptions:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisk -> cacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    boolean shouldShowImageOnLoading() -> shouldShowImageOnLoading
    boolean shouldShowImageForEmptyUri() -> shouldShowImageForEmptyUri
    boolean shouldShowImageOnFail() -> shouldShowImageOnFail
    boolean shouldPreProcess() -> shouldPreProcess
    boolean shouldPostProcess() -> shouldPostProcess
    boolean shouldDelayBeforeLoading() -> shouldDelayBeforeLoading
    android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> getImageOnLoading
    android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> getImageForEmptyUri
    android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> getImageOnFail
    boolean isResetViewBeforeLoading() -> isResetViewBeforeLoading
    boolean isCacheInMemory() -> isCacheInMemory
    boolean isCacheOnDisk() -> isCacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    int getDelayBeforeLoading() -> getDelayBeforeLoading
    boolean isConsiderExifParams() -> isConsiderExifParams
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> getPreProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> getPostProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> getDisplayer
    android.os.Handler getHandler() -> getHandler
    boolean isSyncLoading() -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> createSimple
    int access$1900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1900
    int access$2000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2000
    int access$2100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2100
    android.graphics.drawable.Drawable access$2200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2200
    android.graphics.drawable.Drawable access$2300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2300
    android.graphics.drawable.Drawable access$2400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2400
    boolean access$2500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2500
    boolean access$2600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2600
    boolean access$2700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2700
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$2800(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2800
    android.graphics.BitmapFactory$Options access$2900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2900
    int access$3000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3000
    boolean access$3100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3100
    java.lang.Object access$3200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3200
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3400
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$3500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3500
    android.os.Handler access$3600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3600
    boolean access$3700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3700
com.nostra13.universalimageloader.core.DisplayImageOptions$1 -> com.nostra13.universalimageloader.core.DisplayImageOptions$1:
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.nostra13.universalimageloader.core.DisplayImageOptions$Builder:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisk -> cacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> showStubImage
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(android.graphics.drawable.Drawable) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(android.graphics.drawable.Drawable) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(android.graphics.drawable.Drawable) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading() -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading(boolean) -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean) -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc(boolean) -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisk(boolean) -> cacheOnDisk
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> imageScaleType
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> bitmapConfig
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder decodingOptions(android.graphics.BitmapFactory$Options) -> decodingOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder delayBeforeLoading(int) -> delayBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder extraForDownloader(java.lang.Object) -> extraForDownloader
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder considerExifParams(boolean) -> considerExifParams
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder preProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> preProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder postProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> postProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> displayer
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder syncLoading(boolean) -> syncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder handler(android.os.Handler) -> handler
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> cloneFrom
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> build
    int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$200
    android.graphics.drawable.Drawable access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$300
    android.graphics.drawable.Drawable access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$400
    android.graphics.drawable.Drawable access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$500
    boolean access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$600
    boolean access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$700
    boolean access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$800
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$900
    android.graphics.BitmapFactory$Options access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1000
    int access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1100
    boolean access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1200
    java.lang.Object access$1300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1500
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1600
    android.os.Handler access$1700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1800
com.nostra13.universalimageloader.core.ImageLoader -> com.nostra13.universalimageloader.core.ImageLoader:
    java.lang.String TAG -> TAG
    java.lang.String LOG_INIT_CONFIG -> LOG_INIT_CONFIG
    java.lang.String LOG_DESTROY -> LOG_DESTROY
    java.lang.String LOG_LOAD_IMAGE_FROM_MEMORY_CACHE -> LOG_LOAD_IMAGE_FROM_MEMORY_CACHE
    java.lang.String WARNING_RE_INIT_CONFIG -> WARNING_RE_INIT_CONFIG
    java.lang.String ERROR_WRONG_ARGUMENTS -> ERROR_WRONG_ARGUMENTS
    java.lang.String ERROR_NOT_INIT -> ERROR_NOT_INIT
    java.lang.String ERROR_INIT_CONFIG_WITH_NULL -> ERROR_INIT_CONFIG_WITH_NULL
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener emptyListener -> emptyListener
    com.nostra13.universalimageloader.core.ImageLoader instance -> instance
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> getInstance
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> init
    boolean isInited() -> isInited
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> loadImage
    android.graphics.Bitmap loadImageSync(java.lang.String) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    void checkConfiguration() -> checkConfiguration
    com.nostra13.universalimageloader.cache.memory.MemoryCache getMemoryCache() -> getMemoryCache
    void clearMemoryCache() -> clearMemoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache getDiscCache() -> getDiscCache
    com.nostra13.universalimageloader.cache.disc.DiskCache getDiskCache() -> getDiskCache
    void clearDiscCache() -> clearDiscCache
    void clearDiskCache() -> clearDiskCache
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    void cancelDisplayTask(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTask
    void cancelDisplayTask(android.widget.ImageView) -> cancelDisplayTask
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void destroy() -> destroy
    android.os.Handler defineHandler(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defineHandler
com.nostra13.universalimageloader.core.ImageLoader$1 -> com.nostra13.universalimageloader.core.ImageLoader$1:
com.nostra13.universalimageloader.core.ImageLoader$SyncImageLoadingListener -> com.nostra13.universalimageloader.core.ImageLoader$SyncImageLoadingListener:
    android.graphics.Bitmap loadedImage -> loadedImage
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    android.graphics.Bitmap getLoadedBitmap() -> getLoadedBitmap
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration:
    android.content.res.Resources resources -> resources
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiskCache -> maxImageWidthForDiskCache
    int maxImageHeightForDiskCache -> maxImageHeightForDiskCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> processorForDiskCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> diskCache
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration createDefault(android.content.Context) -> createDefault
    com.nostra13.universalimageloader.core.assist.ImageSize getMaxImageSize() -> getMaxImageSize
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder:
    java.lang.String WARNING_OVERLAP_DISK_CACHE_PARAMS -> WARNING_OVERLAP_DISK_CACHE_PARAMS
    java.lang.String WARNING_OVERLAP_DISK_CACHE_NAME_GENERATOR -> WARNING_OVERLAP_DISK_CACHE_NAME_GENERATOR
    java.lang.String WARNING_OVERLAP_MEMORY_CACHE -> WARNING_OVERLAP_MEMORY_CACHE
    java.lang.String WARNING_OVERLAP_EXECUTOR -> WARNING_OVERLAP_EXECUTOR
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int DEFAULT_THREAD_PRIORITY -> DEFAULT_THREAD_PRIORITY
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> DEFAULT_TASK_PROCESSING_TYPE
    android.content.Context context -> context
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiskCache -> maxImageWidthForDiskCache
    int maxImageHeightForDiskCache -> maxImageHeightForDiskCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> processorForDiskCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    boolean denyCacheImageMultipleSizesInMemory -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    int memoryCacheSize -> memoryCacheSize
    long diskCacheSize -> diskCacheSize
    int diskCacheFileCount -> diskCacheFileCount
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> diskCache
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator diskCacheFileNameGenerator -> diskCacheFileNameGenerator
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean writeLogs -> writeLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheExtraOptions(int,int) -> memoryCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheExtraOptions(int,int,com.nostra13.universalimageloader.core.process.BitmapProcessor) -> discCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheExtraOptions(int,int,com.nostra13.universalimageloader.core.process.BitmapProcessor) -> diskCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutor(java.util.concurrent.Executor) -> taskExecutor
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutorForCachedImages(java.util.concurrent.Executor) -> taskExecutorForCachedImages
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> threadPoolSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> threadPriority
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> tasksProcessingOrder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> memoryCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSizePercentage(int) -> memoryCacheSizePercentage
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCache) -> memoryCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheSize(int) -> discCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheSize(int) -> diskCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileCount(int) -> discCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileCount(int) -> diskCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> diskCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCache(com.nostra13.universalimageloader.cache.disc.DiskCache) -> discCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCache(com.nostra13.universalimageloader.cache.disc.DiskCache) -> diskCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.universalimageloader.core.download.ImageDownloader) -> imageDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDecoder(com.nostra13.universalimageloader.core.decode.ImageDecoder) -> imageDecoder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder writeDebugLogs() -> writeDebugLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> build
    void initEmptyFieldsWithDefaultValues() -> initEmptyFieldsWithDefaultValues
    android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$200
    int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$300
    int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$500
    java.util.concurrent.Executor access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$600
    java.util.concurrent.Executor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$700
    int access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$800
    int access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$900
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1000
    com.nostra13.universalimageloader.cache.disc.DiskCache access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1100
    com.nostra13.universalimageloader.cache.memory.MemoryCache access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1200
    com.nostra13.universalimageloader.core.DisplayImageOptions access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1300
    com.nostra13.universalimageloader.core.download.ImageDownloader access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1400
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1500
    boolean access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1600
    boolean access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1800
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.nostra13.universalimageloader.core.ImageLoaderEngine:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    java.util.concurrent.Executor taskDistributor -> taskDistributor
    java.util.Map cacheKeysForImageAwares -> cacheKeysForImageAwares
    java.util.Map uriLocks -> uriLocks
    java.util.concurrent.atomic.AtomicBoolean paused -> paused
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> networkDenied
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> slowNetwork
    java.lang.Object pauseLock -> pauseLock
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> submit
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> submit
    void initExecutorsIfNeed() -> initExecutorsIfNeed
    java.util.concurrent.Executor createTaskExecutor() -> createTaskExecutor
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware,java.lang.String) -> prepareDisplayTaskFor
    void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTaskFor
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void fireCallback(java.lang.Runnable) -> fireCallback
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> getLockForUri
    java.util.concurrent.atomic.AtomicBoolean getPause() -> getPause
    java.lang.Object getPauseLock() -> getPauseLock
    boolean isNetworkDenied() -> isNetworkDenied
    boolean isSlowNetwork() -> isSlowNetwork
    void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$000
    java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$100
    java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$200
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.nostra13.universalimageloader.core.ImageLoaderEngine$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> val$task
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.nostra13.universalimageloader.core.ImageLoadingInfo:
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> progressListener
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> loadFromUriLock
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask:
    java.lang.String LOG_WAITING_FOR_RESUME -> LOG_WAITING_FOR_RESUME
    java.lang.String LOG_RESUME_AFTER_PAUSE -> LOG_RESUME_AFTER_PAUSE
    java.lang.String LOG_DELAY_BEFORE_LOADING -> LOG_DELAY_BEFORE_LOADING
    java.lang.String LOG_START_DISPLAY_IMAGE_TASK -> LOG_START_DISPLAY_IMAGE_TASK
    java.lang.String LOG_WAITING_FOR_IMAGE_LOADED -> LOG_WAITING_FOR_IMAGE_LOADED
    java.lang.String LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING -> LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING
    java.lang.String LOG_LOAD_IMAGE_FROM_NETWORK -> LOG_LOAD_IMAGE_FROM_NETWORK
    java.lang.String LOG_LOAD_IMAGE_FROM_DISK_CACHE -> LOG_LOAD_IMAGE_FROM_DISK_CACHE
    java.lang.String LOG_RESIZE_CACHED_IMAGE_FILE -> LOG_RESIZE_CACHED_IMAGE_FILE
    java.lang.String LOG_PREPROCESS_IMAGE -> LOG_PREPROCESS_IMAGE
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    java.lang.String LOG_CACHE_IMAGE_IN_MEMORY -> LOG_CACHE_IMAGE_IN_MEMORY
    java.lang.String LOG_CACHE_IMAGE_ON_DISK -> LOG_CACHE_IMAGE_ON_DISK
    java.lang.String LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISK -> LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISK
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    java.lang.String LOG_TASK_INTERRUPTED -> LOG_TASK_INTERRUPTED
    java.lang.String ERROR_PRE_PROCESSOR_NULL -> ERROR_PRE_PROCESSOR_NULL
    java.lang.String ERROR_POST_PROCESSOR_NULL -> ERROR_POST_PROCESSOR_NULL
    java.lang.String ERROR_PROCESSOR_FOR_DISK_CACHE_NULL -> ERROR_PROCESSOR_FOR_DISK_CACHE_NULL
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> progressListener
    boolean syncLoading -> syncLoading
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    void run() -> run
    boolean waitIfPaused() -> waitIfPaused
    boolean delayIfNeed() -> delayIfNeed
    android.graphics.Bitmap tryLoadBitmap() -> tryLoadBitmap
    android.graphics.Bitmap decodeImage(java.lang.String) -> decodeImage
    boolean tryCacheImageOnDisk() -> tryCacheImageOnDisk
    boolean downloadImage() -> downloadImage
    boolean resizeAndSaveImage(int,int) -> resizeAndSaveImage
    boolean onBytesCopied(int,int) -> onBytesCopied
    boolean fireProgressEvent(int,int) -> fireProgressEvent
    void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> fireFailEvent
    void fireCancelEvent() -> fireCancelEvent
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    void checkTaskNotActual() -> checkTaskNotActual
    boolean isTaskNotActual() -> isTaskNotActual
    void checkViewCollected() -> checkViewCollected
    boolean isViewCollected() -> isViewCollected
    void checkViewReused() -> checkViewReused
    boolean isViewReused() -> isViewReused
    void checkTaskInterrupted() -> checkTaskInterrupted
    boolean isTaskInterrupted() -> isTaskInterrupted
    java.lang.String getLoadingUri() -> getLoadingUri
    void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine) -> runTask
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> access$000
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1:
    int val$current -> val$current
    int val$total -> val$total
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> val$failType
    java.lang.Throwable val$failCause -> val$failCause
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask:
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    android.graphics.Bitmap bitmap -> bitmap
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    void run() -> run
com.nostra13.universalimageloader.core.assist.ContentLengthInputStream -> com.nostra13.universalimageloader.core.assist.ContentLengthInputStream:
    java.io.InputStream stream -> stream
    int length -> length
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    boolean markSupported() -> markSupported
com.nostra13.universalimageloader.core.assist.FailReason -> com.nostra13.universalimageloader.core.assist.FailReason:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> type
    java.lang.Throwable cause -> cause
    com.nostra13.universalimageloader.core.assist.FailReason$FailType getType() -> getType
    java.lang.Throwable getCause() -> getCause
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.nostra13.universalimageloader.core.assist.FailReason$FailType:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> IO_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> DECODING_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> NETWORK_DENIED
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> OUT_OF_MEMORY
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> UNKNOWN
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.nostra13.universalimageloader.core.assist.FlushedInputStream:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.nostra13.universalimageloader.core.assist.ImageScaleType:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> NONE
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE_SAFE -> NONE_SAFE
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> IN_SAMPLE_POWER_OF_2
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> IN_SAMPLE_INT
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> EXACTLY
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> EXACTLY_STRETCHED
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.nostra13.universalimageloader.core.assist.ImageSize:
    int TO_STRING_MAX_LENGHT -> TO_STRING_MAX_LENGHT
    java.lang.String SEPARATOR -> SEPARATOR
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> scaleDown
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> scale
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.LoadedFrom -> com.nostra13.universalimageloader.core.assist.LoadedFrom:
    com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK -> NETWORK
    com.nostra13.universalimageloader.core.assist.LoadedFrom DISC_CACHE -> DISC_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom MEMORY_CACHE -> MEMORY_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] values() -> values
    com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.nostra13.universalimageloader.core.assist.QueueProcessingType:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> FIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> LIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.nostra13.universalimageloader.core.assist.ViewScaleType:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> FIT_INSIDE
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> CROP
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> fromImageView
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> com.nostra13.universalimageloader.core.assist.ViewScaleType$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.BlockingDeque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    void push(java.lang.Object) -> push
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.nostra13.universalimageloader.core.assist.deque.Deque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> first
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> last
    int count -> count
    int capacity -> capacity
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.Condition notFull -> notFull
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkFirst
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkLast
    java.lang.Object unlinkFirst() -> unlinkFirst
    java.lang.Object unlinkLast() -> unlinkLast
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> unlink
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1 -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1:
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
    java.lang.Object nextItem -> nextItem
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> lastRet
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> succ
    void advance() -> advance
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node:
    java.lang.Object item -> item
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> prev
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder:
    java.lang.String LOG_SUBSAMPLE_IMAGE -> LOG_SUBSAMPLE_IMAGE
    java.lang.String LOG_SCALE_IMAGE -> LOG_SCALE_IMAGE
    java.lang.String LOG_ROTATE_IMAGE -> LOG_ROTATE_IMAGE
    java.lang.String LOG_FLIP_IMAGE -> LOG_FLIP_IMAGE
    java.lang.String ERROR_CANT_DECODE_IMAGE -> ERROR_CANT_DECODE_IMAGE
    boolean loggingEnabled -> loggingEnabled
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> getImageStream
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> defineImageSizeAndRotation
    boolean canDefineExifParams(java.lang.String,java.lang.String) -> canDefineExifParams
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> defineExifOrientation
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> prepareDecodingOptions
    java.io.InputStream resetStream(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> resetStream
    android.graphics.Bitmap considerExactScaleAndOrientatiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> considerExactScaleAndOrientatiton
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo:
    int rotation -> rotation
    boolean flipHorizontal -> flipHorizontal
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> exif
com.nostra13.universalimageloader.core.decode.ImageDecoder -> com.nostra13.universalimageloader.core.decode.ImageDecoder:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.nostra13.universalimageloader.core.decode.ImageDecodingInfo:
    java.lang.String imageKey -> imageKey
    java.lang.String imageUri -> imageUri
    java.lang.String originalImageUri -> originalImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> viewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    java.lang.Object extraForDownloader -> extraForDownloader
    boolean considerExifParams -> considerExifParams
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions10
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions11
    java.lang.String getImageKey() -> getImageKey
    java.lang.String getImageUri() -> getImageUri
    java.lang.String getOriginalImageUri() -> getOriginalImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> getTargetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> getViewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    boolean shouldConsiderExifParams() -> shouldConsiderExifParams
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.nostra13.universalimageloader.core.display.BitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer:
    int durationMillis -> durationMillis
    boolean animateFromNetwork -> animateFromNetwork
    boolean animateFromDisk -> animateFromDisk
    boolean animateFromMemory -> animateFromMemory
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
    void animate(android.view.View,int) -> animate
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer:
    int cornerRadius -> cornerRadius
    int margin -> margin
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable:
    float cornerRadius -> cornerRadius
    int margin -> margin
    android.graphics.RectF mRect -> mRect
    android.graphics.RectF mBitmapRect -> mBitmapRect
    android.graphics.BitmapShader bitmapShader -> bitmapShader
    android.graphics.Paint paint -> paint
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable:
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.nostra13.universalimageloader.core.download.BaseImageDownloader:
    int DEFAULT_HTTP_CONNECT_TIMEOUT -> DEFAULT_HTTP_CONNECT_TIMEOUT
    int DEFAULT_HTTP_READ_TIMEOUT -> DEFAULT_HTTP_READ_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String ALLOWED_URI_CHARS -> ALLOWED_URI_CHARS
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    java.lang.String CONTENT_CONTACTS_URI_PREFIX -> CONTENT_CONTACTS_URI_PREFIX
    java.lang.String ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    android.content.Context context -> context
    int connectTimeout -> connectTimeout
    int readTimeout -> readTimeout
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
    java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object) -> createConnection
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> getStreamFromFile
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> getStreamFromContent
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> getStreamFromAssets
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> getStreamFromDrawable
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> getStreamFromOtherSource
    boolean isVideoUri(android.net.Uri) -> isVideoUri
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.nostra13.universalimageloader.core.download.BaseImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.nostra13.universalimageloader.core.download.ImageDownloader:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> HTTP
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> HTTPS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> FILE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> CONTENT
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> ASSETS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> DRAWABLE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> UNKNOWN
    java.lang.String scheme -> scheme
    java.lang.String uriPrefix -> uriPrefix
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> ofUri
    boolean belongsTo(java.lang.String) -> belongsTo
    java.lang.String wrap(java.lang.String) -> wrap
    java.lang.String crop(java.lang.String) -> crop
com.nostra13.universalimageloader.core.imageaware.ImageAware -> com.nostra13.universalimageloader.core.imageaware.ImageAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ImageViewAware -> com.nostra13.universalimageloader.core.imageaware.ImageViewAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.widget.ImageView getWrappedView() -> getWrappedView
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> setImageDrawableInto
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> setImageBitmapInto
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
    android.view.View getWrappedView() -> getWrappedView
com.nostra13.universalimageloader.core.imageaware.NonViewAware -> com.nostra13.universalimageloader.core.imageaware.NonViewAware:
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.assist.ViewScaleType scaleType -> scaleType
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ViewAware -> com.nostra13.universalimageloader.core.imageaware.ViewAware:
    java.lang.String WARN_CANT_SET_DRAWABLE -> WARN_CANT_SET_DRAWABLE
    java.lang.String WARN_CANT_SET_BITMAP -> WARN_CANT_SET_BITMAP
    java.lang.ref.Reference viewRef -> viewRef
    boolean checkActualViewSize -> checkActualViewSize
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> setImageDrawableInto
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> setImageBitmapInto
com.nostra13.universalimageloader.core.listener.ImageLoadingListener -> com.nostra13.universalimageloader.core.listener.ImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener -> com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener:
    void onProgressUpdate(java.lang.String,android.view.View,int,int) -> onProgressUpdate
com.nostra13.universalimageloader.core.listener.PauseOnScrollListener -> com.nostra13.universalimageloader.core.listener.PauseOnScrollListener:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener -> com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.nostra13.universalimageloader.core.process.BitmapProcessor:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> process
com.nostra13.universalimageloader.utils.DiskCacheUtils -> com.nostra13.universalimageloader.utils.DiskCacheUtils:
    java.io.File findInCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiskCache) -> findInCache
    boolean removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiskCache) -> removeFromCache
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.nostra13.universalimageloader.utils.ImageSizeUtils:
    int DEFAULT_MAX_BITMAP_DIMENSION -> DEFAULT_MAX_BITMAP_DIMENSION
    com.nostra13.universalimageloader.core.assist.ImageSize maxBitmapSize -> maxBitmapSize
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize) -> defineTargetSizeForView
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageSampleSize
    int considerMaxTextureSize(int,int,int,boolean) -> considerMaxTextureSize
    int computeMinImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize) -> computeMinImageSampleSize
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageScale
com.nostra13.universalimageloader.utils.ImageSizeUtils$1 -> com.nostra13.universalimageloader.utils.ImageSizeUtils$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType -> $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType
com.nostra13.universalimageloader.utils.IoUtils -> com.nostra13.universalimageloader.utils.IoUtils:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int DEFAULT_IMAGE_TOTAL_SIZE -> DEFAULT_IMAGE_TOTAL_SIZE
    int CONTINUE_LOADING_PERCENTAGE -> CONTINUE_LOADING_PERCENTAGE
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> copyStream
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int) -> copyStream
    boolean shouldStopLoading(com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int,int) -> shouldStopLoading
    void readAndCloseStream(java.io.InputStream) -> readAndCloseStream
    void closeSilently(java.io.Closeable) -> closeSilently
com.nostra13.universalimageloader.utils.IoUtils$CopyListener -> com.nostra13.universalimageloader.utils.IoUtils$CopyListener:
    boolean onBytesCopied(int,int) -> onBytesCopied
com.nostra13.universalimageloader.utils.L -> com.nostra13.universalimageloader.utils.L:
    java.lang.String LOG_FORMAT -> LOG_FORMAT
    boolean writeDebugLogs -> writeDebugLogs
    boolean writeLogs -> writeLogs
    void enableLogging() -> enableLogging
    void disableLogging() -> disableLogging
    void writeDebugLogs(boolean) -> writeDebugLogs
    void writeLogs(boolean) -> writeLogs
    void d(java.lang.String,java.lang.Object[]) -> d
    void i(java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
com.nostra13.universalimageloader.utils.MemoryCacheUtils -> com.nostra13.universalimageloader.utils.MemoryCacheUtils:
    java.lang.String URI_AND_SIZE_SEPARATOR -> URI_AND_SIZE_SEPARATOR
    java.lang.String WIDTH_AND_HEIGHT_SEPARATOR -> WIDTH_AND_HEIGHT_SEPARATOR
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> generateKey
    java.util.Comparator createFuzzyKeyComparator() -> createFuzzyKeyComparator
    java.util.List findCachedBitmapsForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCache) -> findCachedBitmapsForImageUri
    java.util.List findCacheKeysForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCache) -> findCacheKeysForImageUri
    void removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCache) -> removeFromCache
com.nostra13.universalimageloader.utils.MemoryCacheUtils$1 -> com.nostra13.universalimageloader.utils.MemoryCacheUtils$1:
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.utils.StorageUtils -> com.nostra13.universalimageloader.utils.StorageUtils:
    java.lang.String EXTERNAL_STORAGE_PERMISSION -> EXTERNAL_STORAGE_PERMISSION
    java.lang.String INDIVIDUAL_DIR_NAME -> INDIVIDUAL_DIR_NAME
    java.io.File getCacheDirectory(android.content.Context) -> getCacheDirectory
    java.io.File getCacheDirectory(android.content.Context,boolean) -> getCacheDirectory
    java.io.File getIndividualCacheDirectory(android.content.Context) -> getIndividualCacheDirectory
    java.io.File getOwnCacheDirectory(android.content.Context,java.lang.String) -> getOwnCacheDirectory
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    boolean hasExternalStoragePermission(android.content.Context) -> hasExternalStoragePermission
com.sina.sso.RemoteSSO -> com.sina.sso.RemoteSSO:
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getActivityName() -> getActivityName
com.sina.sso.RemoteSSO$Stub -> com.sina.sso.RemoteSSO$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_getPackageName -> TRANSACTION_getPackageName
    int TRANSACTION_getActivityName -> TRANSACTION_getActivityName
    com.sina.sso.RemoteSSO asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.sina.sso.RemoteSSO$Stub$Proxy -> com.sina.sso.RemoteSSO$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getActivityName() -> getActivityName
com.sina.weibo.sdk.api.ImageObject -> com.sina.weibo.sdk.api.ImageObject:
    int DATA_SIZE -> DATA_SIZE
    android.os.Parcelable$Creator CREATOR -> CREATOR
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    void setImageObject(android.graphics.Bitmap) -> setImageObject
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
com.sina.weibo.sdk.api.ImageObject$1 -> com.sina.weibo.sdk.api.ImageObject$1:
    com.sina.weibo.sdk.api.ImageObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.ImageObject[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sina.weibo.sdk.api.TextObject -> com.sina.weibo.sdk.api.TextObject:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String text -> text
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
com.sina.weibo.sdk.api.TextObject$1 -> com.sina.weibo.sdk.api.TextObject$1:
    com.sina.weibo.sdk.api.TextObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.TextObject[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sina.weibo.sdk.api.WebpageObject -> com.sina.weibo.sdk.api.WebpageObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String actionUrl -> actionUrl
    java.lang.String schema -> schema
    java.lang.String identify -> identify
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    java.lang.String defaultText -> defaultText
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    int describeContents() -> describeContents
com.sina.weibo.sdk.api.WebpageObject$1 -> com.sina.weibo.sdk.api.WebpageObject$1:
    com.sina.weibo.sdk.api.WebpageObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.WebpageObject[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.squareup.wire.BuilderAdapter -> com.squareup.wire.BuilderAdapter:
    int SUFFIX_LENGTH -> SUFFIX_LENGTH
    java.util.Comparator ORDER_BY_FIELD_NAME -> ORDER_BY_FIELD_NAME
    java.util.List requiredFields -> requiredFields
    void checkRequiredFields(com.squareup.wire.Message$Builder) -> checkRequiredFields
com.squareup.wire.BuilderAdapter$1 -> com.squareup.wire.BuilderAdapter$1:
    int compare(java.lang.reflect.Field,java.lang.reflect.Field) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.squareup.wire.EnumAdapter -> com.squareup.wire.EnumAdapter:
    java.util.Comparator COMPARATOR -> COMPARATOR
    java.lang.Class type -> type
    int[] values -> values
    com.squareup.wire.ProtoEnum[] constants -> constants
    boolean isDense -> isDense
    int toInt(com.squareup.wire.ProtoEnum) -> toInt
    com.squareup.wire.ProtoEnum fromInt(int) -> fromInt
com.squareup.wire.EnumAdapter$1 -> com.squareup.wire.EnumAdapter$1:
    int compare(com.squareup.wire.ProtoEnum,com.squareup.wire.ProtoEnum) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.squareup.wire.ExtendableMessage -> com.squareup.wire.ExtendableMessage:
    long serialVersionUID -> serialVersionUID
    com.squareup.wire.ExtensionMap extensionMap -> extensionMap
    void setBuilder(com.squareup.wire.ExtendableMessage$ExtendableBuilder) -> setBuilder
    java.util.List getExtensions() -> getExtensions
    java.lang.Object getExtension(com.squareup.wire.Extension) -> getExtension
    boolean extensionsEqual(com.squareup.wire.ExtendableMessage) -> extensionsEqual
    int extensionsHashCode() -> extensionsHashCode
    java.lang.String extensionsToString() -> extensionsToString
com.squareup.wire.ExtendableMessage$ExtendableBuilder -> com.squareup.wire.ExtendableMessage$ExtendableBuilder:
    com.squareup.wire.ExtensionMap extensionMap -> extensionMap
    java.lang.Object getExtension(com.squareup.wire.Extension) -> getExtension
    com.squareup.wire.ExtendableMessage$ExtendableBuilder setExtension(com.squareup.wire.Extension,java.lang.Object) -> setExtension
com.squareup.wire.Extension -> com.squareup.wire.Extension:
    java.lang.Class extendedType -> extendedType
    java.lang.Class messageType -> messageType
    java.lang.Class enumType -> enumType
    java.lang.String name -> name
    int tag -> tag
    com.squareup.wire.Message$Datatype datatype -> datatype
    com.squareup.wire.Message$Label label -> label
    com.squareup.wire.Extension$Builder int32Extending(java.lang.Class) -> int32Extending
    com.squareup.wire.Extension$Builder sint32Extending(java.lang.Class) -> sint32Extending
    com.squareup.wire.Extension$Builder uint32Extending(java.lang.Class) -> uint32Extending
    com.squareup.wire.Extension$Builder fixed32Extending(java.lang.Class) -> fixed32Extending
    com.squareup.wire.Extension$Builder sfixed32Extending(java.lang.Class) -> sfixed32Extending
    com.squareup.wire.Extension$Builder int64Extending(java.lang.Class) -> int64Extending
    com.squareup.wire.Extension$Builder sint64Extending(java.lang.Class) -> sint64Extending
    com.squareup.wire.Extension$Builder uint64Extending(java.lang.Class) -> uint64Extending
    com.squareup.wire.Extension$Builder fixed64Extending(java.lang.Class) -> fixed64Extending
    com.squareup.wire.Extension$Builder sfixed64Extending(java.lang.Class) -> sfixed64Extending
    com.squareup.wire.Extension$Builder boolExtending(java.lang.Class) -> boolExtending
    com.squareup.wire.Extension$Builder stringExtending(java.lang.Class) -> stringExtending
    com.squareup.wire.Extension$Builder bytesExtending(java.lang.Class) -> bytesExtending
    com.squareup.wire.Extension$Builder floatExtending(java.lang.Class) -> floatExtending
    com.squareup.wire.Extension$Builder doubleExtending(java.lang.Class) -> doubleExtending
    com.squareup.wire.Extension$Builder enumExtending(java.lang.Class,java.lang.Class) -> enumExtending
    com.squareup.wire.Extension$Builder messageExtending(java.lang.Class,java.lang.Class) -> messageExtending
    int compareTo(com.squareup.wire.Extension) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Class getExtendedType() -> getExtendedType
    java.lang.Class getMessageType() -> getMessageType
    java.lang.Class getEnumType() -> getEnumType
    java.lang.String getName() -> getName
    int getTag() -> getTag
    com.squareup.wire.Message$Datatype getDatatype() -> getDatatype
    com.squareup.wire.Message$Label getLabel() -> getLabel
    int compareTo(java.lang.Object) -> compareTo
com.squareup.wire.Extension$1 -> com.squareup.wire.Extension$1:
com.squareup.wire.Extension$Builder -> com.squareup.wire.Extension$Builder:
    java.lang.Class extendedType -> extendedType
    java.lang.Class messageType -> messageType
    java.lang.Class enumType -> enumType
    com.squareup.wire.Message$Datatype datatype -> datatype
    java.lang.String name -> name
    int tag -> tag
    com.squareup.wire.Message$Label label -> label
    com.squareup.wire.Extension$Builder setName(java.lang.String) -> setName
    com.squareup.wire.Extension$Builder setTag(int) -> setTag
    com.squareup.wire.Extension buildOptional() -> buildOptional
    com.squareup.wire.Extension buildRequired() -> buildRequired
    com.squareup.wire.Extension buildRepeated() -> buildRepeated
    com.squareup.wire.Extension buildPacked() -> buildPacked
    void validate() -> validate
com.squareup.wire.ExtensionMap -> com.squareup.wire.ExtensionMap:
    int INITIAL_SIZE -> INITIAL_SIZE
    java.lang.Object[] data -> data
    int size -> size
    int size() -> size
    com.squareup.wire.Extension getExtension(int) -> getExtension
    java.lang.Object getExtensionValue(int) -> getExtensionValue
    java.util.List getExtensions() -> getExtensions
    java.lang.Object get(com.squareup.wire.Extension) -> get
    void put(com.squareup.wire.Extension,java.lang.Object) -> put
    void insert(com.squareup.wire.Extension,java.lang.Object,int) -> insert
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.squareup.wire.ExtensionRegistry -> com.squareup.wire.ExtensionRegistry:
    java.util.Map extensionsByTag -> extensionsByTag
    java.util.Map extensionsByName -> extensionsByName
    void add(com.squareup.wire.Extension) -> add
    com.squareup.wire.Extension getExtension(java.lang.Class,int) -> getExtension
    com.squareup.wire.Extension getExtension(java.lang.Class,java.lang.String) -> getExtension
com.squareup.wire.Message -> com.squareup.wire.Message:
    long serialVersionUID -> serialVersionUID
    com.squareup.wire.Wire WIRE -> WIRE
    com.squareup.wire.UnknownFieldMap unknownFields -> unknownFields
    boolean haveCachedSerializedSize -> haveCachedSerializedSize
    int cachedSerializedSize -> cachedSerializedSize
    int hashCode -> hashCode
    void setBuilder(com.squareup.wire.Message$Builder) -> setBuilder
    java.util.Collection unknownFields() -> unknownFields
    java.util.List copyOf(java.util.List) -> copyOf
    java.util.List immutableCopyOf(java.util.List) -> immutableCopyOf
    int intFromEnum(java.lang.Enum) -> intFromEnum
    java.lang.Enum enumFromInt(java.lang.Class,int) -> enumFromInt
    byte[] toByteArray() -> toByteArray
    void writeTo(byte[]) -> writeTo
    void writeTo(byte[],int,int) -> writeTo
    void write(com.squareup.wire.WireOutput) -> write
    void writeUnknownFieldMap(com.squareup.wire.WireOutput) -> writeUnknownFieldMap
    int getSerializedSize() -> getSerializedSize
    int getUnknownFieldsSerializedSize() -> getUnknownFieldsSerializedSize
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean equals(java.util.List,java.util.List) -> equals
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    com.squareup.wire.UnknownFieldMap access$000(com.squareup.wire.Message) -> access$000
    com.squareup.wire.Wire access$100() -> access$100
com.squareup.wire.Message$1 -> com.squareup.wire.Message$1:
    int[] $SwitchMap$com$squareup$wire$Message$Datatype -> $SwitchMap$com$squareup$wire$Message$Datatype
com.squareup.wire.Message$Builder -> com.squareup.wire.Message$Builder:
    com.squareup.wire.UnknownFieldMap unknownFieldMap -> unknownFieldMap
    void addVarint(int,long) -> addVarint
    void addFixed32(int,int) -> addFixed32
    void addFixed64(int,long) -> addFixed64
    void addLengthDelimited(int,okio.ByteString) -> addLengthDelimited
    com.squareup.wire.UnknownFieldMap ensureUnknownFieldMap() -> ensureUnknownFieldMap
    void checkRequiredFields() -> checkRequiredFields
    java.util.List checkForNulls(java.util.List) -> checkForNulls
    com.squareup.wire.Message build() -> build
com.squareup.wire.Message$Datatype -> com.squareup.wire.Message$Datatype:
    com.squareup.wire.Message$Datatype INT32 -> INT32
    com.squareup.wire.Message$Datatype INT64 -> INT64
    com.squareup.wire.Message$Datatype UINT32 -> UINT32
    com.squareup.wire.Message$Datatype UINT64 -> UINT64
    com.squareup.wire.Message$Datatype SINT32 -> SINT32
    com.squareup.wire.Message$Datatype SINT64 -> SINT64
    com.squareup.wire.Message$Datatype BOOL -> BOOL
    com.squareup.wire.Message$Datatype ENUM -> ENUM
    com.squareup.wire.Message$Datatype STRING -> STRING
    com.squareup.wire.Message$Datatype BYTES -> BYTES
    com.squareup.wire.Message$Datatype MESSAGE -> MESSAGE
    com.squareup.wire.Message$Datatype FIXED32 -> FIXED32
    com.squareup.wire.Message$Datatype SFIXED32 -> SFIXED32
    com.squareup.wire.Message$Datatype FIXED64 -> FIXED64
    com.squareup.wire.Message$Datatype SFIXED64 -> SFIXED64
    com.squareup.wire.Message$Datatype FLOAT -> FLOAT
    com.squareup.wire.Message$Datatype DOUBLE -> DOUBLE
    java.util.Comparator ORDER_BY_NAME -> ORDER_BY_NAME
    java.util.Map TYPES_BY_NAME -> TYPES_BY_NAME
    int value -> value
    com.squareup.wire.Message$Datatype[] $VALUES -> $VALUES
    com.squareup.wire.Message$Datatype[] values() -> values
    com.squareup.wire.Message$Datatype valueOf(java.lang.String) -> valueOf
    int value() -> value
    com.squareup.wire.WireType wireType() -> wireType
    com.squareup.wire.Message$Datatype of(java.lang.String) -> of
com.squareup.wire.Message$Datatype$1 -> com.squareup.wire.Message$Datatype$1:
    int compare(com.squareup.wire.Message$Datatype,com.squareup.wire.Message$Datatype) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.squareup.wire.Message$Label -> com.squareup.wire.Message$Label:
    com.squareup.wire.Message$Label REQUIRED -> REQUIRED
    com.squareup.wire.Message$Label OPTIONAL -> OPTIONAL
    com.squareup.wire.Message$Label REPEATED -> REPEATED
    com.squareup.wire.Message$Label PACKED -> PACKED
    java.util.Comparator ORDER_BY_NAME -> ORDER_BY_NAME
    int value -> value
    com.squareup.wire.Message$Label[] $VALUES -> $VALUES
    com.squareup.wire.Message$Label[] values() -> values
    com.squareup.wire.Message$Label valueOf(java.lang.String) -> valueOf
    int value() -> value
    boolean isRepeated() -> isRepeated
    boolean isPacked() -> isPacked
com.squareup.wire.Message$Label$1 -> com.squareup.wire.Message$Label$1:
    int compare(com.squareup.wire.Message$Label,com.squareup.wire.Message$Label) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.squareup.wire.MessageAdapter -> com.squareup.wire.MessageAdapter:
    java.lang.String FULL_BLOCK -> FULL_BLOCK
    java.lang.String REDACTED -> REDACTED
    com.squareup.wire.Wire wire -> wire
    java.lang.Class messageType -> messageType
    java.lang.Class builderType -> builderType
    java.util.Map tagMap -> tagMap
    com.squareup.wire.TagMap fieldInfoMap -> fieldInfoMap
    com.squareup.wire.Message$Builder newBuilder() -> newBuilder
    java.util.Collection getFields() -> getFields
    com.squareup.wire.MessageAdapter$FieldInfo getField(java.lang.String) -> getField
    java.lang.Object getFieldValue(com.squareup.wire.Message,com.squareup.wire.MessageAdapter$FieldInfo) -> getFieldValue
    void setBuilderField(com.squareup.wire.Message$Builder,int,java.lang.Object) -> setBuilderField
    java.lang.Class getBuilderType(java.lang.Class) -> getBuilderType
    java.lang.reflect.Field getBuilderField(java.lang.String) -> getBuilderField
    java.lang.Class getMessageType(java.lang.reflect.Field) -> getMessageType
    java.lang.Class getEnumType(java.lang.reflect.Field) -> getEnumType
    int getSerializedSize(com.squareup.wire.Message) -> getSerializedSize
    int getExtensionsSerializedSize(com.squareup.wire.ExtensionMap) -> getExtensionsSerializedSize
    int getRepeatedSize(java.util.List,int,com.squareup.wire.Message$Datatype) -> getRepeatedSize
    int getPackedSize(java.util.List,int,com.squareup.wire.Message$Datatype) -> getPackedSize
    void write(com.squareup.wire.Message,com.squareup.wire.WireOutput) -> write
    void writeExtensions(com.squareup.wire.WireOutput,com.squareup.wire.ExtensionMap) -> writeExtensions
    void writeRepeated(com.squareup.wire.WireOutput,java.util.List,int,com.squareup.wire.Message$Datatype) -> writeRepeated
    void writePacked(com.squareup.wire.WireOutput,java.util.List,int,com.squareup.wire.Message$Datatype) -> writePacked
    byte[] toByteArray(com.squareup.wire.Message) -> toByteArray
    java.lang.String toString(com.squareup.wire.Message) -> toString
    int getSerializedSize(int,java.lang.Object,com.squareup.wire.Message$Datatype) -> getSerializedSize
    int getSerializedSizeNoTag(java.lang.Object,com.squareup.wire.Message$Datatype) -> getSerializedSizeNoTag
    int utf8Length(java.lang.String) -> utf8Length
    int getEnumSize(com.squareup.wire.ProtoEnum) -> getEnumSize
    int getMessageSize(com.squareup.wire.Message) -> getMessageSize
    void writeValue(com.squareup.wire.WireOutput,int,java.lang.Object,com.squareup.wire.Message$Datatype) -> writeValue
    void writeValueNoTag(com.squareup.wire.WireOutput,java.lang.Object,com.squareup.wire.Message$Datatype) -> writeValueNoTag
    void writeMessage(com.squareup.wire.Message,com.squareup.wire.WireOutput) -> writeMessage
    void writeEnum(com.squareup.wire.ProtoEnum,com.squareup.wire.WireOutput) -> writeEnum
    com.squareup.wire.Message read(com.squareup.wire.WireInput) -> read
    java.lang.Object readValue(com.squareup.wire.WireInput,int,com.squareup.wire.Message$Datatype) -> readValue
    com.squareup.wire.Message readMessage(com.squareup.wire.WireInput,int) -> readMessage
    com.squareup.wire.MessageAdapter getMessageAdapter(int) -> getMessageAdapter
    com.squareup.wire.EnumAdapter getEnumAdapter(int) -> getEnumAdapter
    java.lang.Class getMessageClass(int) -> getMessageClass
    void readUnknownField(com.squareup.wire.Message$Builder,com.squareup.wire.WireInput,int,com.squareup.wire.WireType) -> readUnknownField
    com.squareup.wire.Extension getExtension(int) -> getExtension
    com.squareup.wire.Extension getExtension(java.lang.String) -> getExtension
    void setExtension(com.squareup.wire.ExtendableMessage$ExtendableBuilder,com.squareup.wire.Extension,java.lang.Object) -> setExtension
    java.lang.Class getEnumClass(int) -> getEnumClass
com.squareup.wire.MessageAdapter$1 -> com.squareup.wire.MessageAdapter$1:
    int[] $SwitchMap$com$squareup$wire$Message$Datatype -> $SwitchMap$com$squareup$wire$Message$Datatype
    int[] $SwitchMap$com$squareup$wire$WireType -> $SwitchMap$com$squareup$wire$WireType
com.squareup.wire.MessageAdapter$FieldInfo -> com.squareup.wire.MessageAdapter$FieldInfo:
    int tag -> tag
    java.lang.String name -> name
    com.squareup.wire.Message$Datatype datatype -> datatype
    com.squareup.wire.Message$Label label -> label
    java.lang.Class enumType -> enumType
    java.lang.Class messageType -> messageType
    boolean redacted -> redacted
    com.squareup.wire.MessageAdapter messageAdapter -> messageAdapter
    com.squareup.wire.EnumAdapter enumAdapter -> enumAdapter
    java.lang.reflect.Field messageField -> messageField
    java.lang.reflect.Field builderField -> builderField
    java.lang.reflect.Field access$000(com.squareup.wire.MessageAdapter$FieldInfo) -> access$000
    java.lang.reflect.Field access$100(com.squareup.wire.MessageAdapter$FieldInfo) -> access$100
com.squareup.wire.MessageAdapter$ImmutableList -> com.squareup.wire.MessageAdapter$ImmutableList:
    java.util.List list -> list
    java.lang.Object clone() -> clone
    int size() -> size
    java.lang.Object get(int) -> get
    java.util.List access$400(com.squareup.wire.MessageAdapter$ImmutableList) -> access$400
com.squareup.wire.MessageAdapter$Storage -> com.squareup.wire.MessageAdapter$Storage:
    java.util.Map map -> map
    void add(int,java.lang.Object) -> add
    java.util.Set getTags() -> getTags
    java.util.List get(int) -> get
com.squareup.wire.MessageSerializedForm -> com.squareup.wire.MessageSerializedForm:
    long serialVersionUID -> serialVersionUID
    byte[] bytes -> bytes
    java.lang.Class messageClass -> messageClass
    java.lang.Object readResolve() -> readResolve
com.squareup.wire.Preconditions -> com.squareup.wire.Preconditions:
    void checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    void checkArgument(boolean,java.lang.String) -> checkArgument
com.squareup.wire.ProtoEnum -> com.squareup.wire.ProtoEnum:
    int getValue() -> getValue
com.squareup.wire.ProtoField -> com.squareup.wire.ProtoField:
    int tag() -> tag
    com.squareup.wire.Message$Datatype type() -> type
    com.squareup.wire.Message$Label label() -> label
    java.lang.Class messageType() -> messageType
    java.lang.Class enumType() -> enumType
    boolean deprecated() -> deprecated
    boolean redacted() -> redacted
com.squareup.wire.Redactor -> com.squareup.wire.Redactor:
    com.squareup.wire.Redactor NOOP_REDACTOR -> NOOP_REDACTOR
    java.util.Map redactors -> redactors
    java.lang.reflect.Constructor builderConstructor -> builderConstructor
    java.util.List redactedFields -> redactedFields
    java.util.List messageFields -> messageFields
    java.util.List messageRedactors -> messageRedactors
    com.squareup.wire.Redactor get(java.lang.Class) -> get
    com.squareup.wire.Message redact(com.squareup.wire.Message) -> redact
com.squareup.wire.Redactor$1 -> com.squareup.wire.Redactor$1:
    com.squareup.wire.Message redact(com.squareup.wire.Message) -> redact
com.squareup.wire.Redactor$FutureRedactor -> com.squareup.wire.Redactor$FutureRedactor:
    com.squareup.wire.Redactor delegate -> delegate
    void setDelegate(com.squareup.wire.Redactor) -> setDelegate
    com.squareup.wire.Message redact(com.squareup.wire.Message) -> redact
com.squareup.wire.TagMap -> com.squareup.wire.TagMap:
    int SIZE_THRESHOLD -> SIZE_THRESHOLD
    float RATIO_THRESHOLD -> RATIO_THRESHOLD
    java.util.Comparator COMPARATOR -> COMPARATOR
    java.util.List values -> values
    com.squareup.wire.TagMap of(java.util.Map) -> of
    boolean isCompact(int,int) -> isCompact
    int maxTag(java.util.Map) -> maxTag
    java.util.List sortedValues(java.util.Map) -> sortedValues
    java.util.Collection values() -> values
    java.lang.Object get(int) -> get
    boolean containsKey(int) -> containsKey
com.squareup.wire.TagMap$1 -> com.squareup.wire.TagMap$1:
    int compare(java.util.Map$Entry,java.util.Map$Entry) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.squareup.wire.TagMap$Compact -> com.squareup.wire.TagMap$Compact:
    java.lang.Object[] elementsByTag -> elementsByTag
    int maxTag -> maxTag
    com.squareup.wire.TagMap$Compact compactTagMapOf(java.util.Map,int) -> compactTagMapOf
    java.lang.Object get(int) -> get
    boolean containsKey(int) -> containsKey
com.squareup.wire.TagMap$Sparse -> com.squareup.wire.TagMap$Sparse:
    java.util.Map map -> map
    com.squareup.wire.TagMap$Sparse sparseTagMapOf(java.util.Map) -> sparseTagMapOf
    java.lang.Object get(int) -> get
    boolean containsKey(int) -> containsKey
com.squareup.wire.UnknownFieldMap -> com.squareup.wire.UnknownFieldMap:
    java.util.Map fieldMap -> fieldMap
    void addVarint(int,java.lang.Long) -> addVarint
    void addFixed32(int,java.lang.Integer) -> addFixed32
    void addFixed64(int,java.lang.Long) -> addFixed64
    void addLengthDelimited(int,okio.ByteString) -> addLengthDelimited
    java.util.Map ensureFieldMap() -> ensureFieldMap
    void addElement(java.util.Map,int,java.lang.Object,com.squareup.wire.WireType) -> addElement
    int getSerializedSize() -> getSerializedSize
    void write(com.squareup.wire.WireOutput) -> write
com.squareup.wire.UnknownFieldMap$1 -> com.squareup.wire.UnknownFieldMap$1:
    int[] $SwitchMap$com$squareup$wire$WireType -> $SwitchMap$com$squareup$wire$WireType
com.squareup.wire.UnknownFieldMap$FieldValue -> com.squareup.wire.UnknownFieldMap$FieldValue:
    int tag -> tag
    com.squareup.wire.WireType wireType -> wireType
    com.squareup.wire.UnknownFieldMap$VarintFieldValue varint(int,java.lang.Long) -> varint
    com.squareup.wire.UnknownFieldMap$Fixed32FieldValue fixed32(int,java.lang.Integer) -> fixed32
    com.squareup.wire.UnknownFieldMap$Fixed64FieldValue fixed64(int,java.lang.Long) -> fixed64
    com.squareup.wire.UnknownFieldMap$LengthDelimitedFieldValue lengthDelimited(int,okio.ByteString) -> lengthDelimited
    int getSerializedSize() -> getSerializedSize
    void write(int,com.squareup.wire.WireOutput) -> write
    int getTag() -> getTag
    com.squareup.wire.WireType getWireType() -> getWireType
    java.lang.Integer getAsInteger() -> getAsInteger
    java.lang.Long getAsLong() -> getAsLong
    okio.ByteString getAsBytes() -> getAsBytes
com.squareup.wire.UnknownFieldMap$Fixed32FieldValue -> com.squareup.wire.UnknownFieldMap$Fixed32FieldValue:
    java.lang.Integer value -> value
    int getSerializedSize() -> getSerializedSize
    void write(int,com.squareup.wire.WireOutput) -> write
    java.lang.Integer getAsInteger() -> getAsInteger
com.squareup.wire.UnknownFieldMap$Fixed64FieldValue -> com.squareup.wire.UnknownFieldMap$Fixed64FieldValue:
    java.lang.Long value -> value
    int getSerializedSize() -> getSerializedSize
    void write(int,com.squareup.wire.WireOutput) -> write
    java.lang.Long getAsLong() -> getAsLong
com.squareup.wire.UnknownFieldMap$LengthDelimitedFieldValue -> com.squareup.wire.UnknownFieldMap$LengthDelimitedFieldValue:
    okio.ByteString value -> value
    int getSerializedSize() -> getSerializedSize
    void write(int,com.squareup.wire.WireOutput) -> write
    okio.ByteString getAsBytes() -> getAsBytes
com.squareup.wire.UnknownFieldMap$UnknownFieldType -> com.squareup.wire.UnknownFieldMap$UnknownFieldType:
    com.squareup.wire.UnknownFieldMap$UnknownFieldType VARINT -> VARINT
    com.squareup.wire.UnknownFieldMap$UnknownFieldType FIXED32 -> FIXED32
    com.squareup.wire.UnknownFieldMap$UnknownFieldType FIXED64 -> FIXED64
    com.squareup.wire.UnknownFieldMap$UnknownFieldType LENGTH_DELIMITED -> LENGTH_DELIMITED
    com.squareup.wire.UnknownFieldMap$UnknownFieldType[] $VALUES -> $VALUES
    com.squareup.wire.UnknownFieldMap$UnknownFieldType[] values() -> values
    com.squareup.wire.UnknownFieldMap$UnknownFieldType valueOf(java.lang.String) -> valueOf
    com.squareup.wire.UnknownFieldMap$UnknownFieldType of(java.lang.String) -> of
com.squareup.wire.UnknownFieldMap$VarintFieldValue -> com.squareup.wire.UnknownFieldMap$VarintFieldValue:
    java.lang.Long value -> value
    int getSerializedSize() -> getSerializedSize
    void write(int,com.squareup.wire.WireOutput) -> write
    java.lang.Long getAsLong() -> getAsLong
com.squareup.wire.Wire -> com.squareup.wire.Wire:
    java.util.Map messageAdapters -> messageAdapters
    java.util.Map builderAdapters -> builderAdapters
    java.util.Map enumAdapters -> enumAdapters
    com.squareup.wire.ExtensionRegistry registry -> registry
    com.squareup.wire.MessageAdapter messageAdapter(java.lang.Class) -> messageAdapter
    com.squareup.wire.BuilderAdapter builderAdapter(java.lang.Class) -> builderAdapter
    com.squareup.wire.EnumAdapter enumAdapter(java.lang.Class) -> enumAdapter
    com.squareup.wire.Message parseFrom(byte[],java.lang.Class) -> parseFrom
    com.squareup.wire.Message parseFrom(byte[],int,int,java.lang.Class) -> parseFrom
    com.squareup.wire.Message parseFrom(java.io.InputStream,java.lang.Class) -> parseFrom
    com.squareup.wire.Message parseFrom(okio.Source,java.lang.Class) -> parseFrom
    com.squareup.wire.Message parseFrom(com.squareup.wire.WireInput,java.lang.Class) -> parseFrom
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
com.squareup.wire.WireInput -> com.squareup.wire.WireInput:
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.lang.String ENCOUNTERED_A_NEGATIVE_SIZE -> ENCOUNTERED_A_NEGATIVE_SIZE
    java.lang.String INPUT_ENDED_UNEXPECTEDLY -> INPUT_ENDED_UNEXPECTEDLY
    java.lang.String PROTOCOL_MESSAGE_CONTAINED_AN_INVALID_TAG_ZERO -> PROTOCOL_MESSAGE_CONTAINED_AN_INVALID_TAG_ZERO
    java.lang.String PROTOCOL_MESSAGE_END_GROUP_TAG_DID_NOT_MATCH_EXPECTED_TAG -> PROTOCOL_MESSAGE_END_GROUP_TAG_DID_NOT_MATCH_EXPECTED_TAG
    java.lang.String ENCOUNTERED_A_MALFORMED_VARINT -> ENCOUNTERED_A_MALFORMED_VARINT
    okio.BufferedSource source -> source
    int pos -> pos
    int currentLimit -> currentLimit
    int RECURSION_LIMIT -> RECURSION_LIMIT
    int recursionDepth -> recursionDepth
    int lastTag -> lastTag
    com.squareup.wire.WireInput newInstance(byte[]) -> newInstance
    com.squareup.wire.WireInput newInstance(byte[],int,int) -> newInstance
    com.squareup.wire.WireInput newInstance(java.io.InputStream) -> newInstance
    com.squareup.wire.WireInput newInstance(okio.Source) -> newInstance
    int readTag() -> readTag
    void checkLastTagWas(int) -> checkLastTagWas
    java.lang.String readString() -> readString
    okio.ByteString readBytes() -> readBytes
    okio.ByteString readBytes(int) -> readBytes
    int readVarint32() -> readVarint32
    long readVarint64() -> readVarint64
    int readFixed32() -> readFixed32
    long readFixed64() -> readFixed64
    int decodeZigZag32(int) -> decodeZigZag32
    long decodeZigZag64(long) -> decodeZigZag64
    int pushLimit(int) -> pushLimit
    void popLimit(int) -> popLimit
    boolean isAtEnd() -> isAtEnd
    long getPosition() -> getPosition
    void skipGroup() -> skipGroup
    boolean skipField(int) -> skipField
    void skip(long) -> skip
com.squareup.wire.WireInput$1 -> com.squareup.wire.WireInput$1:
    int[] $SwitchMap$com$squareup$wire$WireType -> $SwitchMap$com$squareup$wire$WireType
com.squareup.wire.WireOutput -> com.squareup.wire.WireOutput:
    byte[] buffer -> buffer
    int limit -> limit
    int position -> position
    int int32Size(int) -> int32Size
    int int64Size(long) -> int64Size
    int tagSize(int,com.squareup.wire.WireType) -> tagSize
    int messageSize(int,int) -> messageSize
    int writeTag(int,com.squareup.wire.WireType,byte[],int) -> writeTag
    int writeVarint(long,byte[],int) -> writeVarint
    int messageHeaderSize(int,int) -> messageHeaderSize
    int writeMessageHeader(int,byte[],int,int) -> writeMessageHeader
    int makeTag(int,com.squareup.wire.WireType) -> makeTag
    com.squareup.wire.WireOutput newInstance(byte[]) -> newInstance
    com.squareup.wire.WireOutput newInstance(byte[],int,int) -> newInstance
    int varintTagSize(int) -> varintTagSize
    int varint32Size(int) -> varint32Size
    int varint64Size(long) -> varint64Size
    void writeRawByte(byte) -> writeRawByte
    void writeRawByte(int) -> writeRawByte
    void writeRawBytes(byte[]) -> writeRawBytes
    void writeRawBytes(byte[],int,int) -> writeRawBytes
    void writeTag(int,com.squareup.wire.WireType) -> writeTag
    void writeSignedVarint32(int) -> writeSignedVarint32
    void writeVarint32(int) -> writeVarint32
    void writeVarint64(long) -> writeVarint64
    void writeFixed32(int) -> writeFixed32
    void writeFixed64(long) -> writeFixed64
    int zigZag32(int) -> zigZag32
    long zigZag64(long) -> zigZag64
com.squareup.wire.WireType -> com.squareup.wire.WireType:
    com.squareup.wire.WireType VARINT -> VARINT
    com.squareup.wire.WireType FIXED64 -> FIXED64
    com.squareup.wire.WireType LENGTH_DELIMITED -> LENGTH_DELIMITED
    com.squareup.wire.WireType START_GROUP -> START_GROUP
    com.squareup.wire.WireType END_GROUP -> END_GROUP
    com.squareup.wire.WireType FIXED32 -> FIXED32
    int TAG_TYPE_MASK -> TAG_TYPE_MASK
    int FIXED_32_SIZE -> FIXED_32_SIZE
    int FIXED_64_SIZE -> FIXED_64_SIZE
    int TAG_TYPE_BITS -> TAG_TYPE_BITS
    int value -> value
    com.squareup.wire.WireType[] $VALUES -> $VALUES
    com.squareup.wire.WireType[] values() -> values
    com.squareup.wire.WireType valueOf(java.lang.String) -> valueOf
    com.squareup.wire.WireType valueOf(int) -> valueOf
    int value() -> value
com.umeng.analytics.AnalyticsConfig -> com.umeng.analytics.AnalyticsConfig:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String mWrapperType -> mWrapperType
    java.lang.String mWrapperVersion -> mWrapperVersion
    int mVerticalType -> mVerticalType
    java.lang.String GPU_VENDER -> GPU_VENDER
    java.lang.String GPU_RENDERER -> GPU_RENDERER
    boolean sEncrypt -> sEncrypt
    int sLatentWindow -> sLatentWindow
    double[] c -> c
    boolean ACTIVITY_DURATION_OPEN -> ACTIVITY_DURATION_OPEN
    boolean COMPRESS_DATA -> COMPRESS_DATA
    boolean ENABLE_MEMORY_BUFFER -> ENABLE_MEMORY_BUFFER
    boolean CATCH_EXCEPTION -> CATCH_EXCEPTION
    long kContinueSessionMillis -> kContinueSessionMillis
    void enableEncrypt(boolean) -> enableEncrypt
    void setAppkey(android.content.Context,java.lang.String) -> setAppkey
    void setChannel(java.lang.String) -> setChannel
    java.lang.String getAppkey(android.content.Context) -> getAppkey
    java.lang.String getChannel(android.content.Context) -> getChannel
    java.lang.String getSDKVersion() -> getSDKVersion
    double[] getLocation() -> getLocation
    void setLocation(double,double) -> setLocation
    void setLatencyWindow(long) -> setLatencyWindow
com.umeng.analytics.Gender -> com.umeng.analytics.Gender:
    com.umeng.analytics.Gender Male -> Male
    com.umeng.analytics.Gender Female -> Female
    com.umeng.analytics.Gender Unknown -> Unknown
    int value -> value
    com.umeng.analytics.Gender[] a -> a
    com.umeng.analytics.Gender[] values() -> values
    com.umeng.analytics.Gender valueOf(java.lang.String) -> valueOf
    int value() -> value
    com.umeng.analytics.Gender getGender(int) -> getGender
    u.aly.ay transGender(com.umeng.analytics.Gender) -> transGender
com.umeng.analytics.Gender$1 -> com.umeng.analytics.Gender$1:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$2 -> com.umeng.analytics.Gender$2:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$3 -> com.umeng.analytics.Gender$3:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$4 -> com.umeng.analytics.Gender$4:
    int[] a -> a
com.umeng.analytics.MobclickAgent -> com.umeng.analytics.MobclickAgent:
    java.lang.String a -> a
    com.umeng.analytics.d b -> b
    void setAutoLocation(boolean) -> setAutoLocation
    void setCatchUncaughtExceptions(boolean) -> setCatchUncaughtExceptions
    void setWrapper(java.lang.String,java.lang.String) -> setWrapper
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setEnableEventBuffer(boolean) -> setEnableEventBuffer
    void setCheckDevice(boolean) -> setCheckDevice
    void setOnlineConfigureListener(java.lang.Object) -> setOnlineConfigureListener
    com.umeng.analytics.d getAgent() -> getAgent
    void setOpenGLContext(javax.microedition.khronos.opengles.GL10) -> setOpenGLContext
    void openActivityDurationTrack(boolean) -> openActivityDurationTrack
    void onPageStart(java.lang.String) -> onPageStart
    void onPageEnd(java.lang.String) -> onPageEnd
    void setDebugMode(boolean) -> setDebugMode
    void onPause(android.content.Context) -> onPause
    void onResume(android.content.Context) -> onResume
    void onResume(android.content.Context,java.lang.String,java.lang.String) -> onResume
    void reportError(android.content.Context,java.lang.String) -> reportError
    void reportError(android.content.Context,java.lang.Throwable) -> reportError
    void flush(android.content.Context) -> flush
    void onEvent(android.content.Context,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.util.Map) -> onEvent
    void onEventDuration(android.content.Context,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.util.Map,long) -> onEventDuration
    void onEventValue(android.content.Context,java.lang.String,java.util.Map,int) -> onEventValue
    void onEventBegin(android.content.Context,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String) -> onEventEnd
    void onEventBegin(android.content.Context,java.lang.String,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void onKVEventBegin(android.content.Context,java.lang.String,java.util.Map,java.lang.String) -> onKVEventBegin
    void onKVEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onKVEventEnd
    void onSocialEvent(android.content.Context,java.lang.String,com.umeng.analytics.social.UMPlatformData[]) -> onSocialEvent
    void onSocialEvent(android.content.Context,com.umeng.analytics.social.UMPlatformData[]) -> onSocialEvent
    java.lang.String getConfigParams(android.content.Context,java.lang.String) -> getConfigParams
    void updateOnlineConfig(android.content.Context,java.lang.String,java.lang.String) -> updateOnlineConfig
    void updateOnlineConfig(android.content.Context) -> updateOnlineConfig
    void setUserID(android.content.Context,java.lang.String,java.lang.String,com.umeng.analytics.Gender,int) -> setUserID
    void onKillProcess(android.content.Context) -> onKillProcess
    void onProfileSignIn(java.lang.String) -> onProfileSignIn
    void onProfileSignIn(java.lang.String,java.lang.String) -> onProfileSignIn
    void onProfileSignOff() -> onProfileSignOff
com.umeng.analytics.MobclickAgentJSInterface -> com.umeng.analytics.MobclickAgentJSInterface:
    android.content.Context a -> a
    android.content.Context a(com.umeng.analytics.MobclickAgentJSInterface) -> a
com.umeng.analytics.MobclickAgentJSInterface$a -> com.umeng.analytics.MobclickAgentJSInterface$a:
    android.webkit.WebChromeClient a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    com.umeng.analytics.MobclickAgentJSInterface b -> b
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message) -> onCreateWindow
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap) -> onReceivedIcon
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onRequestFocus(android.webkit.WebView) -> onRequestFocus
com.umeng.analytics.ReportPolicy -> com.umeng.analytics.ReportPolicy:
    int REALTIME -> REALTIME
    int BATCH_AT_LAUNCH -> BATCH_AT_LAUNCH
    int a -> a
    int b -> b
    int DAILY -> DAILY
    int WIFIONLY -> WIFIONLY
    int BATCH_BY_INTERVAL -> BATCH_BY_INTERVAL
    int SMART_POLICY -> SMART_POLICY
    boolean a(int) -> a
com.umeng.analytics.ReportPolicy$a -> com.umeng.analytics.ReportPolicy$a:
    long a -> a
    u.aly.ab b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$b -> com.umeng.analytics.ReportPolicy$b:
    u.aly.am a -> a
    u.aly.ab b -> b
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$c -> com.umeng.analytics.ReportPolicy$c:
    long a -> a
    long b -> b
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$d -> com.umeng.analytics.ReportPolicy$d:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$e -> com.umeng.analytics.ReportPolicy$e:
    long a -> a
    long b -> b
    long c -> c
    u.aly.ab d -> d
    boolean a(boolean) -> a
    void a(long) -> a
    long b() -> b
    boolean a(int) -> a
com.umeng.analytics.ReportPolicy$f -> com.umeng.analytics.ReportPolicy$f:
    int a -> a
    u.aly.t b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$g -> com.umeng.analytics.ReportPolicy$g:
    long a -> a
    u.aly.ab b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$h -> com.umeng.analytics.ReportPolicy$h:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$i -> com.umeng.analytics.ReportPolicy$i:
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$j -> com.umeng.analytics.ReportPolicy$j:
    android.content.Context a -> a
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$k -> com.umeng.analytics.ReportPolicy$k:
    long a -> a
    u.aly.ab b -> b
    boolean a(boolean) -> a
com.umeng.analytics.a -> com.umeng.analytics.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    java.lang.String[] g -> g
    long h -> h
    long i -> i
    boolean j -> j
    int k -> k
    int l -> l
    int m -> m
com.umeng.analytics.b -> com.umeng.analytics.b:
    byte[] a -> a
    byte[] a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] b(byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    byte[] b(byte[],byte[]) -> b
    int a(int,java.lang.String) -> a
com.umeng.analytics.c -> com.umeng.analytics.c:
    void a() -> a
    void b() -> b
com.umeng.analytics.d -> com.umeng.analytics.d:
    android.content.Context a -> a
    com.umeng.analytics.c b -> b
    u.aly.o c -> c
    u.aly.ae d -> d
    u.aly.aa e -> e
    u.aly.p f -> f
    u.aly.m g -> g
    boolean h -> h
    void e(android.content.Context) -> e
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(com.umeng.analytics.c) -> a
    void a(int) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    u.aly.aa a() -> a
    void a(android.content.Context,java.lang.String,java.util.HashMap) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.Throwable) -> a
    void f(android.content.Context) -> f
    void g(android.content.Context) -> g
    void c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String,java.lang.String,long,int) -> a
    void a(android.content.Context,java.lang.String,java.util.Map,long) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,java.util.HashMap,java.lang.String) -> a
    void c(android.content.Context,java.lang.String,java.lang.String) -> c
    void d(android.content.Context) -> d
    void a(java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b() -> b
    void a(com.umeng.analytics.d,android.content.Context) -> a
    void b(com.umeng.analytics.d,android.content.Context) -> b
    u.aly.p a(com.umeng.analytics.d) -> a
    android.content.Context b(com.umeng.analytics.d) -> b
com.umeng.analytics.d$1 -> com.umeng.analytics.d$1:
    android.content.Context a -> a
    com.umeng.analytics.d b -> b
    void a() -> a
com.umeng.analytics.d$2 -> com.umeng.analytics.d$2:
    android.content.Context a -> a
    com.umeng.analytics.d b -> b
    void a() -> a
com.umeng.analytics.d$3 -> com.umeng.analytics.d$3:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.d c -> c
    void a() -> a
com.umeng.analytics.d$4 -> com.umeng.analytics.d$4:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.d c -> c
    void a() -> a
com.umeng.analytics.d$5 -> com.umeng.analytics.d$5:
    java.lang.String a -> a
    java.util.HashMap b -> b
    java.lang.String c -> c
    com.umeng.analytics.d d -> d
    void a() -> a
com.umeng.analytics.d$6 -> com.umeng.analytics.d$6:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.d c -> c
    void a() -> a
com.umeng.analytics.d$7 -> com.umeng.analytics.d$7:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.d c -> c
    void a() -> a
com.umeng.analytics.d$8 -> com.umeng.analytics.d$8:
    com.umeng.analytics.d a -> a
    void a() -> a
com.umeng.analytics.e -> com.umeng.analytics.e:
    java.lang.String[] a -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String[] a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.umeng.analytics.f -> com.umeng.analytics.f:
    java.util.List a -> a
    java.util.concurrent.ExecutorService b -> b
    long c -> c
    java.util.concurrent.ScheduledExecutorService d -> d
    void a(java.lang.Runnable) -> a
    void a() -> a
    void b(java.lang.Runnable) -> b
    void a(java.lang.Runnable,long) -> a
    void c(java.lang.Runnable) -> c
com.umeng.analytics.g -> com.umeng.analytics.g:
    void run() -> run
    void a() -> a
com.umeng.analytics.h -> com.umeng.analytics.h:
    com.umeng.analytics.h a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    com.umeng.analytics.h$a d -> d
    long e -> e
    long f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    com.umeng.analytics.h a(android.content.Context) -> a
    boolean a(java.io.File) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String[] a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    byte[] e() -> e
    void a(byte[]) -> a
    void f() -> f
    void b(byte[]) -> b
    boolean g() -> g
    com.umeng.analytics.h$a h() -> h
    android.content.SharedPreferences l() -> l
    android.content.SharedPreferences i() -> i
    android.content.SharedPreferences j() -> j
    android.content.SharedPreferences k() -> k
    java.lang.String m() -> m
    java.lang.String n() -> n
com.umeng.analytics.h$a -> com.umeng.analytics.h$a:
    int a -> a
    java.io.File b -> b
    java.io.FilenameFilter c -> c
    boolean a() -> a
    void a(com.umeng.analytics.h$b) -> a
    void a(byte[]) -> a
    void b() -> b
    int c() -> c
com.umeng.analytics.h$a$1 -> com.umeng.analytics.h$a$1:
    com.umeng.analytics.h$a a -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.umeng.analytics.h$b -> com.umeng.analytics.h$b:
    void a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
com.umeng.analytics.social.UMPlatformData -> com.umeng.analytics.social.UMPlatformData:
    com.umeng.analytics.social.UMPlatformData$UMedia a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.umeng.analytics.social.UMPlatformData$GENDER e -> e
    java.lang.String getWeiboId() -> getWeiboId
    void setWeiboId(java.lang.String) -> setWeiboId
    com.umeng.analytics.social.UMPlatformData$UMedia getMeida() -> getMeida
    java.lang.String getUsid() -> getUsid
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.umeng.analytics.social.UMPlatformData$GENDER getGender() -> getGender
    void setGender(com.umeng.analytics.social.UMPlatformData$GENDER) -> setGender
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$1 -> com.umeng.analytics.social.UMPlatformData$1:
com.umeng.analytics.social.UMPlatformData$GENDER -> com.umeng.analytics.social.UMPlatformData$GENDER:
    com.umeng.analytics.social.UMPlatformData$GENDER MALE -> MALE
    com.umeng.analytics.social.UMPlatformData$GENDER FEMALE -> FEMALE
    int value -> value
    com.umeng.analytics.social.UMPlatformData$GENDER[] a -> a
    com.umeng.analytics.social.UMPlatformData$GENDER[] values() -> values
    com.umeng.analytics.social.UMPlatformData$GENDER valueOf(java.lang.String) -> valueOf
com.umeng.analytics.social.UMPlatformData$GENDER$1 -> com.umeng.analytics.social.UMPlatformData$GENDER$1:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$GENDER$2 -> com.umeng.analytics.social.UMPlatformData$GENDER$2:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia -> com.umeng.analytics.social.UMPlatformData$UMedia:
    com.umeng.analytics.social.UMPlatformData$UMedia SINA_WEIBO -> SINA_WEIBO
    com.umeng.analytics.social.UMPlatformData$UMedia TENCENT_WEIBO -> TENCENT_WEIBO
    com.umeng.analytics.social.UMPlatformData$UMedia TENCENT_QZONE -> TENCENT_QZONE
    com.umeng.analytics.social.UMPlatformData$UMedia TENCENT_QQ -> TENCENT_QQ
    com.umeng.analytics.social.UMPlatformData$UMedia WEIXIN_FRIENDS -> WEIXIN_FRIENDS
    com.umeng.analytics.social.UMPlatformData$UMedia WEIXIN_CIRCLE -> WEIXIN_CIRCLE
    com.umeng.analytics.social.UMPlatformData$UMedia RENREN -> RENREN
    com.umeng.analytics.social.UMPlatformData$UMedia DOUBAN -> DOUBAN
    com.umeng.analytics.social.UMPlatformData$UMedia[] a -> a
    com.umeng.analytics.social.UMPlatformData$UMedia[] values() -> values
    com.umeng.analytics.social.UMPlatformData$UMedia valueOf(java.lang.String) -> valueOf
com.umeng.analytics.social.UMPlatformData$UMedia$1 -> com.umeng.analytics.social.UMPlatformData$UMedia$1:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$2 -> com.umeng.analytics.social.UMPlatformData$UMedia$2:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$3 -> com.umeng.analytics.social.UMPlatformData$UMedia$3:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$4 -> com.umeng.analytics.social.UMPlatformData$UMedia$4:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$5 -> com.umeng.analytics.social.UMPlatformData$UMedia$5:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$6 -> com.umeng.analytics.social.UMPlatformData$UMedia$6:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$7 -> com.umeng.analytics.social.UMPlatformData$UMedia$7:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$8 -> com.umeng.analytics.social.UMPlatformData$UMedia$8:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMSocialService -> com.umeng.analytics.social.UMSocialService:
    void a(android.content.Context,com.umeng.analytics.social.UMSocialService$b,java.lang.String,com.umeng.analytics.social.UMPlatformData[]) -> a
    void share(android.content.Context,java.lang.String,com.umeng.analytics.social.UMPlatformData[]) -> share
    void share(android.content.Context,com.umeng.analytics.social.UMPlatformData[]) -> share
com.umeng.analytics.social.UMSocialService$a -> com.umeng.analytics.social.UMSocialService$a:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.social.UMSocialService$b c -> c
    com.umeng.analytics.social.UMPlatformData[] d -> d
    void onPreExecute() -> onPreExecute
    com.umeng.analytics.social.d a(java.lang.Void[]) -> a
    void a(com.umeng.analytics.social.d) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.analytics.social.UMSocialService$b -> com.umeng.analytics.social.UMSocialService$b:
    void a() -> a
    void a(com.umeng.analytics.social.d,com.umeng.analytics.social.UMPlatformData[]) -> a
com.umeng.analytics.social.a -> com.umeng.analytics.social.a:
    long b -> b
    int a -> a
    java.lang.String c -> c
    int a() -> a
    java.lang.String getMessage() -> getMessage
com.umeng.analytics.social.b -> com.umeng.analytics.social.b:
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Exception) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> e
com.umeng.analytics.social.c -> com.umeng.analytics.social.c:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
com.umeng.analytics.social.d -> com.umeng.analytics.social.d:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.Exception d -> d
    java.lang.Exception a() -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    java.lang.String toString() -> toString
com.umeng.analytics.social.e -> com.umeng.analytics.social.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    int t -> t
    int u -> u
    boolean v -> v
com.umeng.analytics.social.f -> com.umeng.analytics.social.f:
    java.util.Map a -> a
    java.lang.String[] a(android.content.Context,java.lang.String,com.umeng.analytics.social.UMPlatformData[]) -> a
    java.lang.String a(java.util.List) -> a
    java.util.List a(com.umeng.analytics.social.UMPlatformData[]) -> a
    java.lang.String b(com.umeng.analytics.social.UMPlatformData[]) -> b
    java.util.Map c(android.content.Context) -> c
    java.lang.String a(android.content.Context) -> a
    java.util.Map b(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String d(android.content.Context) -> d
com.umeng.update.UmengDialogButtonListener -> com.umeng.update.UmengDialogButtonListener:
    void onClick(int) -> onClick
com.umeng.update.UmengDownloadListener -> com.umeng.update.UmengDownloadListener:
    void OnDownloadStart() -> OnDownloadStart
    void OnDownloadUpdate(int) -> OnDownloadUpdate
    void OnDownloadEnd(int,java.lang.String) -> OnDownloadEnd
com.umeng.update.UmengUpdateAgent -> com.umeng.update.UmengUpdateAgent:
    com.umeng.update.UmengUpdateListener a -> a
    com.umeng.update.UmengDialogButtonListener b -> b
    com.umeng.update.UmengDownloadListener c -> c
    android.content.Context d -> d
    com.umeng.update.q e -> e
    android.os.Handler f -> f
    boolean g -> g
    java.lang.String h -> h
    void setDefault() -> setDefault
    boolean c() -> c
    void setUpdateFromPushMessage(boolean) -> setUpdateFromPushMessage
    boolean getUpdateFromPushMessage() -> getUpdateFromPushMessage
    void setUpdateCheckConfig(boolean) -> setUpdateCheckConfig
    void setUpdateOnlyWifi(boolean) -> setUpdateOnlyWifi
    void setUpdateAutoPopup(boolean) -> setUpdateAutoPopup
    void setSlotId(java.lang.String) -> setSlotId
    void setUpdateUIStyle(int) -> setUpdateUIStyle
    void setDeltaUpdate(boolean) -> setDeltaUpdate
    void setAppkey(java.lang.String) -> setAppkey
    void setChannel(java.lang.String) -> setChannel
    void setRichNotification(boolean) -> setRichNotification
    void setEncryptModel(boolean) -> setEncryptModel
    void setUpdateListener(com.umeng.update.UmengUpdateListener) -> setUpdateListener
    void setDialogListener(com.umeng.update.UmengDialogButtonListener) -> setDialogListener
    void setDownloadListener(com.umeng.update.UmengDownloadListener) -> setDownloadListener
    void b(int,com.umeng.update.UpdateResponse) -> b
    void silentUpdate(android.content.Context) -> silentUpdate
    void forceUpdate(android.content.Context) -> forceUpdate
    void update(android.content.Context) -> update
    void update(android.content.Context,java.lang.String,java.lang.String) -> update
    void b(android.content.Context) -> b
    void b(android.content.Context,com.umeng.update.UpdateResponse,int) -> b
    void showUpdateDialog(android.content.Context,com.umeng.update.UpdateResponse) -> showUpdateDialog
    void showUpdateNotification(android.content.Context,com.umeng.update.UpdateResponse) -> showUpdateNotification
    java.io.File downloadedFile(android.content.Context,com.umeng.update.UpdateResponse) -> downloadedFile
    boolean isIgnore(android.content.Context,com.umeng.update.UpdateResponse) -> isIgnore
    void ignoreUpdate(android.content.Context,com.umeng.update.UpdateResponse) -> ignoreUpdate
    void a(int,android.content.Context,com.umeng.update.UpdateResponse,java.io.File) -> a
    void a(android.content.Context,com.umeng.update.UpdateResponse,java.io.File) -> a
    void startInstall(android.content.Context,java.io.File) -> startInstall
    void startDownload(android.content.Context,com.umeng.update.UpdateResponse) -> startDownload
    boolean c(android.content.Context) -> c
    void b(android.content.Context,android.os.Message) -> b
    android.content.Context a() -> a
    void a(android.content.Context,com.umeng.update.UpdateResponse,int) -> a
    void a(android.content.Context,android.os.Message) -> a
    android.content.Context a(android.content.Context) -> a
    com.umeng.update.UmengUpdateListener b() -> b
    void a(int,com.umeng.update.UpdateResponse) -> a
com.umeng.update.UmengUpdateAgent$1 -> com.umeng.update.UmengUpdateAgent$1:
    android.content.Context a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.UmengUpdateAgent$2 -> com.umeng.update.UmengUpdateAgent$2:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$3 -> com.umeng.update.UmengUpdateAgent$3:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$4 -> com.umeng.update.UmengUpdateAgent$4:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$5 -> com.umeng.update.UmengUpdateAgent$5:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$6 -> com.umeng.update.UmengUpdateAgent$6:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$7 -> com.umeng.update.UmengUpdateAgent$7:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$a -> com.umeng.update.UmengUpdateAgent$a:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateListener -> com.umeng.update.UmengUpdateListener:
    void onUpdateReturned(int,com.umeng.update.UpdateResponse) -> onUpdateReturned
com.umeng.update.UpdateConfig -> com.umeng.update.UpdateConfig:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    boolean o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    boolean t -> t
    boolean u -> u
    boolean v -> v
    int w -> w
    void setAppkey(java.lang.String) -> setAppkey
    void setChannel(java.lang.String) -> setChannel
    void setDebug(boolean) -> setDebug
    java.lang.String getAppkey(android.content.Context) -> getAppkey
    java.lang.String getChannel(android.content.Context) -> getChannel
    void saveIgnoreMd5(android.content.Context,java.lang.String) -> saveIgnoreMd5
    java.lang.String getIgnoreMd5(android.content.Context) -> getIgnoreMd5
    boolean isUpdateOnlyWifi() -> isUpdateOnlyWifi
    void setUpdateOnlyWifi(boolean) -> setUpdateOnlyWifi
    boolean isUpdateAutoPopup() -> isUpdateAutoPopup
    void setUpdateAutoPopup(boolean) -> setUpdateAutoPopup
    boolean isUpdateForce() -> isUpdateForce
    void setUpdateForce(boolean) -> setUpdateForce
    boolean isDeltaUpdate() -> isDeltaUpdate
    void setDeltaUpdate(boolean) -> setDeltaUpdate
    boolean isSilentDownload() -> isSilentDownload
    void setSilentDownload(boolean) -> setSilentDownload
    int getStyle() -> getStyle
    void setStyle(int) -> setStyle
    boolean isUpdateCheck() -> isUpdateCheck
    void setUpdateCheck(boolean) -> setUpdateCheck
    boolean isRichNotification() -> isRichNotification
    void setRichNotification(boolean) -> setRichNotification
    boolean isEncryptModel() -> isEncryptModel
    void setEncryptModel(boolean) -> setEncryptModel
    java.lang.String getSlotId() -> getSlotId
    void setSlotId(java.lang.String) -> setSlotId
com.umeng.update.UpdateDialogActivity -> com.umeng.update.UpdateDialogActivity:
    int a -> a
    com.umeng.update.UpdateResponse b -> b
    boolean c -> c
    java.io.File d -> d
    android.view.ViewGroup e -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.umeng.update.UpdateDialogActivity$1 -> com.umeng.update.UpdateDialogActivity$1:
    int a -> a
    int b -> b
    com.umeng.update.UpdateDialogActivity c -> c
    void onClick(android.view.View) -> onClick
com.umeng.update.UpdateDialogActivity$2 -> com.umeng.update.UpdateDialogActivity$2:
    com.umeng.update.UpdateDialogActivity a -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.umeng.update.UpdateResponse -> com.umeng.update.UpdateResponse:
    long a -> a
    boolean hasUpdate -> hasUpdate
    boolean isAvailbale -> isAvailbale
    java.lang.String updateLog -> updateLog
    java.lang.String version -> version
    java.lang.String path -> path
    java.lang.String origin -> origin
    java.lang.String proto_ver -> proto_ver
    java.lang.String new_md5 -> new_md5
    java.lang.String size -> size
    java.lang.String target_size -> target_size
    boolean delta -> delta
    java.lang.String patch_md5 -> patch_md5
    boolean display_ads -> display_ads
    void a(org.json.JSONObject) -> a
    java.lang.String a(android.content.Context,boolean) -> a
com.umeng.update.UpdateStatus -> com.umeng.update.UpdateStatus:
    int Yes -> Yes
    int No -> No
    int NoneWifi -> NoneWifi
    int Timeout -> Timeout
    int IsUpdate -> IsUpdate
    int Unavailable -> Unavailable
    int Update -> Update
    int NotNow -> NotNow
    int Ignore -> Ignore
    int STYLE_DIALOG -> STYLE_DIALOG
    int STYLE_NOTIFICATION -> STYLE_NOTIFICATION
    int DOWNLOAD_COMPLETE_FAIL -> DOWNLOAD_COMPLETE_FAIL
    int DOWNLOAD_COMPLETE_SUCCESS -> DOWNLOAD_COMPLETE_SUCCESS
    int DOWNLOAD_NEED_RESTART -> DOWNLOAD_NEED_RESTART
com.umeng.update.a -> com.umeng.update.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    boolean a(java.lang.String,android.content.Context) -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String[] a(javax.microedition.khronos.opengles.GL10) -> a
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String[] j(android.content.Context) -> j
    boolean k(android.content.Context) -> k
    boolean l(android.content.Context) -> l
    boolean b() -> b
    int m(android.content.Context) -> m
    java.lang.String[] n(android.content.Context) -> n
    java.util.Locale y(android.content.Context) -> y
    java.lang.String o(android.content.Context) -> o
    java.lang.String p(android.content.Context) -> p
    java.lang.String q(android.content.Context) -> q
    int[] r(android.content.Context) -> r
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String s(android.content.Context) -> s
    java.lang.String a(java.util.Date) -> a
    java.lang.String c() -> c
    java.util.Date a(java.lang.String) -> a
    int a(java.util.Date,java.util.Date) -> a
    java.lang.String t(android.content.Context) -> t
    java.lang.String u(android.content.Context) -> u
    java.lang.String v(android.content.Context) -> v
    java.lang.String a(byte[]) -> a
    java.lang.String w(android.content.Context) -> w
    boolean x(android.content.Context) -> x
com.umeng.update.b -> com.umeng.update.b:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Exception) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> e
com.umeng.update.c -> com.umeng.update.c:
    java.lang.String a -> a
    com.umeng.update.c b -> b
    android.content.res.Resources c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    com.umeng.update.c a(android.content.Context) -> a
    int a(java.lang.String) -> a
    int b(java.lang.String) -> b
    int c(java.lang.String) -> c
    int d(java.lang.String) -> d
    int e(java.lang.String) -> e
    int f(java.lang.String) -> f
    int g(java.lang.String) -> g
    int a(java.lang.String,java.lang.String) -> a
com.umeng.update.d -> com.umeng.update.d:
    java.lang.String a -> a
    com.umeng.update.f$a a(com.umeng.update.e) -> a
    void a(com.umeng.update.e,com.umeng.update.d$a) -> a
com.umeng.update.d$a -> com.umeng.update.d$a:
    void a() -> a
    void a(com.umeng.update.f$a) -> a
com.umeng.update.d$b -> com.umeng.update.d$b:
    com.umeng.update.e b -> b
    com.umeng.update.d$a c -> c
    com.umeng.update.d a -> a
    void onPreExecute() -> onPreExecute
    void a(com.umeng.update.f$a) -> a
    com.umeng.update.f$a a(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.update.e -> com.umeng.update.e:
com.umeng.update.f -> com.umeng.update.f:
    com.umeng.update.f$a a -> a
com.umeng.update.f$a -> com.umeng.update.f$a:
    com.umeng.update.f$a a -> a
    com.umeng.update.f$a b -> b
    com.umeng.update.f$a[] c -> c
    com.umeng.update.f$a[] values() -> values
    com.umeng.update.f$a valueOf(java.lang.String) -> valueOf
com.umeng.update.g -> com.umeng.update.g:
    java.lang.String a -> a
    java.util.Map b -> b
    com.umeng.update.i a(com.umeng.update.h,java.lang.Class) -> a
    byte[] a(com.umeng.update.h) -> a
    org.json.JSONObject a(java.lang.String,org.json.JSONObject) -> a
    byte[] a(java.lang.String,byte[]) -> a
    boolean a() -> a
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject a(java.lang.String) -> a
    org.apache.http.params.HttpParams b() -> b
    com.umeng.update.g a(java.util.Map) -> a
    void b(java.lang.String) -> b
com.umeng.update.h -> com.umeng.update.h:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    org.json.JSONObject a() -> a
    byte[] b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    void a(java.lang.String) -> a
    java.lang.String e() -> e
com.umeng.update.i -> com.umeng.update.i:
com.umeng.update.j -> com.umeng.update.j:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
com.umeng.update.k -> com.umeng.update.k:
    int a(android.content.Context) -> a
com.umeng.update.l -> com.umeng.update.l:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    int n(android.content.Context) -> n
com.umeng.update.m -> com.umeng.update.m:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[]) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    byte[] b(byte[]) -> b
com.umeng.update.n -> com.umeng.update.n:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.io.File) -> a
    java.lang.String a(android.content.Context,long) -> a
    java.lang.String c(java.lang.String) -> c
    void a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    boolean d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    java.lang.String a() -> a
    java.lang.String a(java.util.Date) -> a
    java.lang.String a(java.io.InputStream) -> a
    byte[] b(java.io.InputStream) -> b
    void a(java.io.File,byte[]) -> a
    void a(java.io.File,java.lang.String) -> a
    void c(java.io.InputStream) -> c
    void a(java.io.OutputStream) -> a
    boolean a(org.apache.http.Header,java.lang.String) -> a
com.umeng.update.net.DownloadingService -> com.umeng.update.net.DownloadingService:
    java.lang.String t -> t
    android.app.NotificationManager u -> u
    com.umeng.update.net.c v -> v
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    long w -> w
    long x -> x
    long y -> y
    int o -> o
    java.lang.String p -> p
    int z -> z
    android.content.Context A -> A
    android.os.Handler B -> B
    com.umeng.update.net.DownloadingService$a q -> q
    boolean r -> r
    long C -> C
    long D -> D
    java.util.Map E -> E
    android.util.SparseArray F -> F
    android.os.Messenger s -> s
    com.umeng.update.net.e G -> G
    boolean H -> H
    java.lang.Boolean I -> I
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onCreate() -> onCreate
    void d() -> d
    void a(com.umeng.update.net.a$a) -> a
    void a(java.lang.String) -> a
    void onDestroy() -> onDestroy
    void e() -> e
    java.lang.String a() -> a
    com.umeng.update.net.c a(com.umeng.update.net.DownloadingService) -> a
    android.util.SparseArray b() -> b
    android.content.Context b(com.umeng.update.net.DownloadingService) -> b
    java.util.Map c() -> c
    void a(com.umeng.update.net.DownloadingService,com.umeng.update.net.a$a) -> a
    android.app.NotificationManager a(com.umeng.update.net.DownloadingService,android.app.NotificationManager) -> a
    android.app.NotificationManager c(com.umeng.update.net.DownloadingService) -> c
    android.os.Handler d(com.umeng.update.net.DownloadingService) -> d
    void a(com.umeng.update.net.DownloadingService,java.lang.String) -> a
    java.lang.Boolean a(java.lang.Boolean) -> a
com.umeng.update.net.DownloadingService$1 -> com.umeng.update.net.DownloadingService$1:
    com.umeng.update.net.DownloadingService a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.net.DownloadingService$2 -> com.umeng.update.net.DownloadingService$2:
    android.util.SparseArray a -> a
    com.umeng.update.net.DownloadingService b -> b
    void a(int) -> a
    void a(int,int) -> a
    void a(int,java.lang.String) -> a
    void a(int,java.lang.Exception) -> a
com.umeng.update.net.DownloadingService$3 -> com.umeng.update.net.DownloadingService$3:
    java.lang.String a -> a
    com.umeng.update.net.DownloadingService b -> b
    void run() -> run
com.umeng.update.net.DownloadingService$4 -> com.umeng.update.net.DownloadingService$4:
    com.umeng.update.net.DownloadingService a -> a
    void run() -> run
com.umeng.update.net.DownloadingService$a -> com.umeng.update.net.DownloadingService$a:
    void a(int) -> a
    void a(int,int) -> a
    void a(int,java.lang.String) -> a
    void a(int,java.lang.Exception) -> a
com.umeng.update.net.DownloadingService$b -> com.umeng.update.net.DownloadingService$b:
    android.content.Context b -> b
    boolean c -> c
    java.io.File d -> d
    int e -> e
    long f -> f
    long g -> g
    int h -> h
    int i -> i
    com.umeng.update.net.DownloadingService$a j -> j
    com.umeng.update.net.a$a k -> k
    com.umeng.update.net.DownloadingService a -> a
    void run() -> run
    void a(int) -> a
    void a(boolean) -> a
    void a() -> a
    void b(int) -> b
    java.net.HttpURLConnection a(java.net.URL,java.io.File) -> a
    java.lang.String a(com.umeng.update.net.a$a) -> a
    void b() -> b
    void a(java.io.File,java.lang.String) -> a
    void a(java.lang.Exception) -> a
    android.content.Context a(com.umeng.update.net.DownloadingService$b) -> a
com.umeng.update.net.DownloadingService$b$1 -> com.umeng.update.net.DownloadingService$b$1:
    com.umeng.update.net.DownloadingService$b a -> a
    void run() -> run
com.umeng.update.net.DownloadingService$c -> com.umeng.update.net.DownloadingService$c:
    com.umeng.update.net.DownloadingService a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.net.a -> com.umeng.update.net.a:
    java.lang.String b -> b
    android.content.Context c -> c
    com.umeng.update.net.d d -> d
    android.os.Messenger e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String[] k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    android.os.Messenger a -> a
    android.content.ServiceConnection o -> o
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String[]) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void a() -> a
    java.lang.String b() -> b
    com.umeng.update.net.d a(com.umeng.update.net.a) -> a
    android.content.ServiceConnection b(com.umeng.update.net.a) -> b
    android.content.Context c(com.umeng.update.net.a) -> c
    android.os.Messenger a(com.umeng.update.net.a,android.os.Messenger) -> a
    java.lang.String d(com.umeng.update.net.a) -> d
    java.lang.String e(com.umeng.update.net.a) -> e
    java.lang.String f(com.umeng.update.net.a) -> f
    java.lang.String g(com.umeng.update.net.a) -> g
    java.lang.String h(com.umeng.update.net.a) -> h
    java.lang.String[] i(com.umeng.update.net.a) -> i
    boolean j(com.umeng.update.net.a) -> j
    boolean k(com.umeng.update.net.a) -> k
    boolean l(com.umeng.update.net.a) -> l
    android.os.Messenger m(com.umeng.update.net.a) -> m
com.umeng.update.net.a$1 -> com.umeng.update.net.a$1:
    com.umeng.update.net.a a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.umeng.update.net.a$a -> com.umeng.update.net.a$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    android.os.Bundle a() -> a
    com.umeng.update.net.a$a a(android.os.Bundle) -> a
com.umeng.update.net.a$b -> com.umeng.update.net.a$b:
    com.umeng.update.net.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.net.b -> com.umeng.update.net.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    android.content.Context i -> i
    java.lang.String j -> j
    com.umeng.update.net.b$a k -> k
    com.umeng.update.net.b a(android.content.Context) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    int b(java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String) -> c
    java.util.Date d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    java.util.List a(java.lang.String) -> a
    void a(int) -> a
    void finalize() -> finalize
    java.lang.String a() -> a
com.umeng.update.net.b$1 -> com.umeng.update.net.b$1:
com.umeng.update.net.b$a -> com.umeng.update.net.b$a:
    int b -> b
    java.lang.String c -> c
    com.umeng.update.net.b a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.umeng.update.net.b$b -> com.umeng.update.net.b$b:
    com.umeng.update.net.b a -> a
com.umeng.update.net.c -> com.umeng.update.net.c:
    java.lang.String e -> e
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    android.util.SparseArray f -> f
    java.util.Map g -> g
    com.umeng.update.net.e h -> h
    int a(com.umeng.update.net.a$a) -> a
    com.umeng.update.net.c$a a(android.content.Context,com.umeng.update.net.a$a,int,int) -> a
    void a(android.content.Context,com.umeng.update.net.c$a,int,int) -> a
    boolean a(android.content.Context) -> a
    boolean a(com.umeng.update.net.a$a,boolean,android.os.Messenger) -> a
    int b(com.umeng.update.net.a$a) -> b
    void a(android.content.Context,int) -> a
    void b(android.content.Context,int) -> b
    void a(com.umeng.update.net.a$a,long,long,long) -> a
    void a(java.util.Map,boolean,java.lang.String[]) -> a
    boolean a(com.umeng.update.net.DownloadingService,android.content.Intent) -> a
    java.lang.String a() -> a
    java.util.Map a(com.umeng.update.net.c) -> a
com.umeng.update.net.c$1 -> com.umeng.update.net.c$1:
    java.lang.String[] a -> a
    boolean b -> b
    java.util.Map c -> c
    com.umeng.update.net.c d -> d
    void run() -> run
com.umeng.update.net.c$a -> com.umeng.update.net.c$a:
    com.umeng.update.net.c$a a(android.widget.RemoteViews) -> a
    com.umeng.update.net.c$a a(java.lang.CharSequence) -> a
    com.umeng.update.net.c$a b(java.lang.CharSequence) -> b
    com.umeng.update.net.c$a a(int,int,boolean) -> a
    com.umeng.update.net.c$a a() -> a
    com.umeng.update.net.c$a a(android.app.PendingIntent,android.app.PendingIntent) -> a
    com.umeng.update.net.c$a b() -> b
    com.umeng.update.net.c$a c() -> c
    android.app.Notification d() -> d
    void a(int,java.lang.String,android.app.PendingIntent) -> a
com.umeng.update.net.c$b -> com.umeng.update.net.c$b:
    com.umeng.update.net.DownloadingService$b a -> a
    com.umeng.update.net.c$a b -> b
    int c -> c
    int d -> d
    com.umeng.update.net.a$a e -> e
    long[] f -> f
    void a(android.util.SparseArray) -> a
    void b(android.util.SparseArray) -> b
com.umeng.update.net.c$c -> com.umeng.update.net.c$c:
    int a -> a
    java.lang.String b -> b
    com.umeng.update.net.a$a d -> d
    android.content.Context e -> e
    android.app.NotificationManager f -> f
    com.umeng.update.net.c c -> c
    void onPreExecute() -> onPreExecute
    java.lang.Integer a(java.lang.String[]) -> a
    void a(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.update.net.d -> com.umeng.update.net.d:
    void d() -> d
    void a(int) -> a
    void a(int,int,java.lang.String) -> a
    void b(int) -> b
com.umeng.update.net.e -> com.umeng.update.net.e:
    java.lang.String a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    void a(int) -> a
    java.util.List a() -> a
    boolean b() -> b
    void b(int) -> b
com.umeng.update.net.f -> com.umeng.update.net.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a(int,java.lang.String) -> a
    int a(com.umeng.update.net.a$a) -> a
    android.app.PendingIntent a(android.content.Context,java.lang.String) -> a
    android.app.PendingIntent b(android.content.Context,java.lang.String) -> b
com.umeng.update.net.g -> com.umeng.update.net.g:
    java.lang.String a -> a
    com.umeng.update.f$a a(com.umeng.update.e) -> a
    void a(com.umeng.update.e,com.umeng.update.net.g$a) -> a
com.umeng.update.net.g$a -> com.umeng.update.net.g$a:
    void a() -> a
    void a(com.umeng.update.f$a) -> a
com.umeng.update.net.g$b -> com.umeng.update.net.g$b:
    com.umeng.update.e b -> b
    com.umeng.update.net.g$a c -> c
    com.umeng.update.net.g a -> a
    void onPreExecute() -> onPreExecute
    void a(com.umeng.update.f$a) -> a
    com.umeng.update.f$a a(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.update.net.h -> com.umeng.update.net.h:
com.umeng.update.net.i -> com.umeng.update.net.i:
    com.umeng.update.net.i$a a -> a
com.umeng.update.net.i$a -> com.umeng.update.net.i$a:
    com.umeng.update.net.i$a a -> a
    com.umeng.update.net.i$a b -> b
    com.umeng.update.net.i$a[] c -> c
    com.umeng.update.net.i$a[] values() -> values
    com.umeng.update.net.i$a valueOf(java.lang.String) -> valueOf
com.umeng.update.net.j -> com.umeng.update.net.j:
    java.lang.String b -> b
    boolean a -> a
    long c -> c
    long d -> d
    long e -> e
    java.util.Map f -> f
    java.lang.Thread g -> g
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.io.File a(java.lang.String,android.content.Context,boolean[]) -> a
    boolean a(java.lang.String,int,int,int) -> a
    boolean a(java.lang.String,int) -> a
    void a(java.io.File,long,long) -> a
    long a(java.io.File) -> a
    void b(java.io.File,long) -> b
    java.io.File b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean) -> a
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean,com.umeng.update.net.j$a) -> a
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean,com.umeng.update.net.j$a,android.view.animation.Animation) -> a
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean,com.umeng.update.net.j$a,android.view.animation.Animation,boolean) -> a
    boolean a(android.widget.ImageView,java.lang.String) -> a
    void b(android.content.Context,android.widget.ImageView,android.graphics.drawable.Drawable,boolean,com.umeng.update.net.j$a,android.view.animation.Animation,boolean,java.lang.String) -> b
    android.graphics.drawable.Drawable c(java.lang.String) -> c
    android.graphics.Bitmap a(android.graphics.Bitmap) -> a
    void a(java.io.File,long) -> a
    java.lang.Thread a(java.lang.Thread) -> a
    void a(android.content.Context,android.widget.ImageView,android.graphics.drawable.Drawable,boolean,com.umeng.update.net.j$a,android.view.animation.Animation,boolean,java.lang.String) -> a
    android.graphics.drawable.Drawable a(java.lang.String) -> a
    java.lang.String a() -> a
com.umeng.update.net.j$1 -> com.umeng.update.net.j$1:
    java.io.File a -> a
    long b -> b
    void run() -> run
com.umeng.update.net.j$a -> com.umeng.update.net.j$a:
    void a(com.umeng.update.net.j$b) -> a
    void a(com.umeng.update.f$a) -> a
com.umeng.update.net.j$b -> com.umeng.update.net.j$b:
    com.umeng.update.net.j$b a -> a
    com.umeng.update.net.j$b b -> b
    com.umeng.update.net.j$b[] c -> c
    com.umeng.update.net.j$b[] values() -> values
    com.umeng.update.net.j$b valueOf(java.lang.String) -> valueOf
com.umeng.update.net.j$c -> com.umeng.update.net.j$c:
    android.content.Context a -> a
    java.lang.String b -> b
    android.widget.ImageView c -> c
    com.umeng.update.net.j$b d -> d
    boolean e -> e
    com.umeng.update.net.j$a f -> f
    android.view.animation.Animation g -> g
    boolean h -> h
    java.io.File i -> i
    void onPreExecute() -> onPreExecute
    void a(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable a(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.update.o -> com.umeng.update.o:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
com.umeng.update.p -> com.umeng.update.p:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String[] d -> d
    java.lang.String e -> e
    boolean a() -> a
    com.umeng.update.UpdateResponse b() -> b
    com.umeng.update.protobuffer.UpdateRequestNew a(byte[]) -> a
com.umeng.update.protobuffer.UpdateRequestNew -> com.umeng.update.protobuffer.UpdateRequestNew:
    long a -> a
    java.lang.String DEFAULT_VERSION -> DEFAULT_VERSION
    java.lang.String DEFAULT_SIGNATURE -> DEFAULT_SIGNATURE
    java.lang.Integer DEFAULT_SERIALNO -> DEFAULT_SERIALNO
    java.lang.Integer DEFAULT_TIMESTAMP -> DEFAULT_TIMESTAMP
    java.lang.String DEFAULT_CHECKSUM -> DEFAULT_CHECKSUM
    java.lang.String DEFAULT_SALT -> DEFAULT_SALT
    com.umeng.update.protobuffer.UpdateRequestNew$entityEncodingFormat DEFAULT_ENCRYPTION -> DEFAULT_ENCRYPTION
    okio.ByteString DEFAULT_ENTITY -> DEFAULT_ENTITY
    java.lang.String version -> version
    java.lang.String signature -> signature
    java.lang.Integer serialNo -> serialNo
    java.lang.Integer timestamp -> timestamp
    java.lang.String checksum -> checksum
    java.lang.String salt -> salt
    com.umeng.update.protobuffer.UpdateRequestNew$entityEncodingFormat encryption -> encryption
    okio.ByteString entity -> entity
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.umeng.update.protobuffer.UpdateRequestNew$1 -> com.umeng.update.protobuffer.UpdateRequestNew$1:
com.umeng.update.protobuffer.UpdateRequestNew$Builder -> com.umeng.update.protobuffer.UpdateRequestNew$Builder:
    java.lang.String version -> version
    java.lang.String signature -> signature
    java.lang.Integer serialNo -> serialNo
    java.lang.Integer timestamp -> timestamp
    java.lang.String checksum -> checksum
    java.lang.String salt -> salt
    com.umeng.update.protobuffer.UpdateRequestNew$entityEncodingFormat encryption -> encryption
    okio.ByteString entity -> entity
    com.umeng.update.protobuffer.UpdateRequestNew$Builder version(java.lang.String) -> version
    com.umeng.update.protobuffer.UpdateRequestNew$Builder signature(java.lang.String) -> signature
    com.umeng.update.protobuffer.UpdateRequestNew$Builder serialNo(java.lang.Integer) -> serialNo
    com.umeng.update.protobuffer.UpdateRequestNew$Builder timestamp(java.lang.Integer) -> timestamp
    com.umeng.update.protobuffer.UpdateRequestNew$Builder checksum(java.lang.String) -> checksum
    com.umeng.update.protobuffer.UpdateRequestNew$Builder salt(java.lang.String) -> salt
    com.umeng.update.protobuffer.UpdateRequestNew$Builder encryption(com.umeng.update.protobuffer.UpdateRequestNew$entityEncodingFormat) -> encryption
    com.umeng.update.protobuffer.UpdateRequestNew$Builder entity(okio.ByteString) -> entity
    com.umeng.update.protobuffer.UpdateRequestNew build() -> build
    com.squareup.wire.Message build() -> build
com.umeng.update.protobuffer.UpdateRequestNew$entityEncodingFormat -> com.umeng.update.protobuffer.UpdateRequestNew$entityEncodingFormat:
    com.umeng.update.protobuffer.UpdateRequestNew$entityEncodingFormat JSON -> JSON
    com.umeng.update.protobuffer.UpdateRequestNew$entityEncodingFormat JSON_AES -> JSON_AES
    com.umeng.update.protobuffer.UpdateRequestNew$entityEncodingFormat JSON_RSA -> JSON_RSA
    int a -> a
    com.umeng.update.protobuffer.UpdateRequestNew$entityEncodingFormat[] b -> b
    com.umeng.update.protobuffer.UpdateRequestNew$entityEncodingFormat[] values() -> values
    com.umeng.update.protobuffer.UpdateRequestNew$entityEncodingFormat valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
com.umeng.update.q -> com.umeng.update.q:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.update.UmengDownloadListener c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    android.content.Context h -> h
    java.lang.String i -> i
    com.umeng.update.net.a j -> j
    boolean k -> k
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.umeng.update.UmengDownloadListener) -> a
    boolean a() -> a
    void b() -> b
    void c() -> c
    void a(com.umeng.update.net.a) -> a
    void d() -> d
    void a(int) -> a
    void a(int,int,java.lang.String) -> a
    void b(int) -> b
    void a(android.content.Context,com.umeng.update.UpdateResponse,boolean,java.io.File) -> a
    com.umeng.update.q$a b(android.content.Context,com.umeng.update.UpdateResponse,boolean,java.io.File) -> b
com.umeng.update.q$a -> com.umeng.update.q$a:
    java.lang.String e -> e
    java.lang.String f -> f
    com.umeng.update.q a -> a
    com.umeng.update.q$a a(java.lang.CharSequence) -> a
    com.umeng.update.q$a b(java.lang.CharSequence) -> b
    com.umeng.update.q$a c(java.lang.CharSequence) -> c
    android.app.Notification a() -> a
com.umeng.update.r -> com.umeng.update.r:
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    org.json.JSONObject i -> i
    byte[] j -> j
    int k -> k
    org.json.JSONObject a(android.content.Context) -> a
    org.json.JSONObject a() -> a
    byte[] b() -> b
    java.lang.String c() -> c
    byte[] a(org.json.JSONObject,android.content.Context) -> a
    int f() -> f
com.umeng.update.r$a -> com.umeng.update.r$a:
    com.umeng.update.r$a a -> a
    com.umeng.update.r$a b -> b
    com.umeng.update.r$a c -> c
    int d -> d
    com.umeng.update.r$a[] e -> e
    com.umeng.update.r$a[] values() -> values
    com.umeng.update.r$a valueOf(java.lang.String) -> valueOf
    int a() -> a
com.umeng.update.util.DeltaUpdate -> com.umeng.update.util.DeltaUpdate:
    boolean a -> a
    java.lang.String b -> b
    boolean a() -> a
    int a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    int bspatch(java.lang.String,java.lang.String,java.lang.String) -> bspatch
com.umeng.update.util.a -> com.umeng.update.util.a:
    byte[] a(java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    byte[] c(java.lang.String) -> c
    byte[] d(java.lang.String) -> d
    byte[] e(java.lang.String) -> e
    byte[] f(java.lang.String) -> f
    byte[] a(java.lang.String,java.lang.String) -> a
    java.lang.IllegalStateException a(java.lang.String,java.io.UnsupportedEncodingException) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String b(byte[]) -> b
    java.lang.String c(byte[]) -> c
    java.lang.String d(byte[]) -> d
    java.lang.String e(byte[]) -> e
    java.lang.String f(byte[]) -> f
com.umeng.update.util.b -> com.umeng.update.util.b:
    byte[] a -> a
    byte[] b -> b
    java.lang.String a(java.lang.String[]) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
com.umeng.update.util.c -> com.umeng.update.util.c:
    int m -> m
    int n -> n
    int o -> o
    byte[] a -> a
    byte[] p -> p
    byte[] q -> q
    byte[] r -> r
    int s -> s
    byte[] t -> t
    byte[] u -> u
    byte[] v -> v
    int w -> w
    int x -> x
    int y -> y
    boolean a() -> a
    void a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    boolean a(byte) -> a
    boolean a(java.lang.String) -> a
    boolean a(byte[]) -> a
    boolean b(byte[]) -> b
    byte[] c(byte[]) -> c
    java.lang.String d(byte[]) -> d
    byte[] e(byte[]) -> e
    java.lang.String f(byte[]) -> f
    byte[] g(byte[]) -> g
    byte[] a(byte[],boolean) -> a
    byte[] a(byte[],boolean,boolean) -> a
    byte[] a(byte[],boolean,boolean,int) -> a
    byte[] b(java.lang.String) -> b
    byte[] h(byte[]) -> h
    java.math.BigInteger i(byte[]) -> i
    byte[] a(java.math.BigInteger) -> a
    byte[] b(java.math.BigInteger) -> b
    boolean b(byte) -> b
com.umeng.update.util.d -> com.umeng.update.util.d:
    int b -> b
    int c -> c
    int a -> a
    int m -> m
    int d -> d
    byte e -> e
    byte f -> f
    int n -> n
    int o -> o
    int g -> g
    int p -> p
    byte[] h -> h
    int i -> i
    int q -> q
    boolean j -> j
    int k -> k
    int l -> l
    boolean b() -> b
    int c() -> c
    int d() -> d
    void a() -> a
    void a(int) -> a
    int c(byte[],int,int) -> c
    boolean c(byte) -> c
    void e() -> e
    java.lang.Object a(java.lang.Object) -> a
    java.lang.String j(byte[]) -> j
    java.lang.Object b(java.lang.Object) -> b
    byte[] c(java.lang.String) -> c
    byte[] k(byte[]) -> k
    byte[] l(byte[]) -> l
    java.lang.String m(byte[]) -> m
    void a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    boolean b(byte) -> b
    boolean b(byte[],boolean) -> b
    boolean d(java.lang.String) -> d
    boolean n(byte[]) -> n
    long o(byte[]) -> o
com.umeng.update.util.e -> com.umeng.update.util.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
com.umeng.update.util.f -> com.umeng.update.util.f:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
com.umeng.update.util.g -> com.umeng.update.util.g:
    android.content.Context b -> b
    android.app.Notification c -> c
    android.app.Notification$Builder d -> d
    void e() -> e
    com.umeng.update.util.g b(android.widget.RemoteViews) -> b
    com.umeng.update.util.g a(android.app.PendingIntent) -> a
    com.umeng.update.util.g a(boolean) -> a
    com.umeng.update.util.g b(boolean) -> b
    com.umeng.update.util.g a(int) -> a
    com.umeng.update.util.g d(java.lang.CharSequence) -> d
    com.umeng.update.util.g a(long) -> a
com.umeng.update.util.h -> com.umeng.update.util.h:
    float a -> a
    void a(android.content.Context) -> a
    int a(float) -> a
    int b(float) -> b
    int c(float) -> c
    int d(float) -> d
com.viewpagerindicator.CirclePageIndicator -> com.viewpagerindicator.CirclePageIndicator:
    int INVALID_POINTER -> INVALID_POINTER
    float mRadius -> mRadius
    android.graphics.Paint mPaintPageFill -> mPaintPageFill
    android.graphics.Paint mPaintStroke -> mPaintStroke
    android.graphics.Paint mPaintFill -> mPaintFill
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mCurrentPage -> mCurrentPage
    int mSnapPage -> mSnapPage
    float mPageOffset -> mPageOffset
    int mScrollState -> mScrollState
    int mOrientation -> mOrientation
    boolean mCentered -> mCentered
    boolean mSnap -> mSnap
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    void setCentered(boolean) -> setCentered
    boolean isCentered() -> isCentered
    void setPageColor(int) -> setPageColor
    int getPageColor() -> getPageColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setSnap(boolean) -> setSnap
    boolean isSnap() -> isSnap
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureLong(int) -> measureLong
    int measureShort(int) -> measureShort
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.viewpagerindicator.CirclePageIndicator$SavedState -> com.viewpagerindicator.CirclePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.CirclePageIndicator$SavedState$1 -> com.viewpagerindicator.CirclePageIndicator$SavedState$1:
    com.viewpagerindicator.CirclePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.viewpagerindicator.CirclePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.IconPageIndicator -> com.viewpagerindicator.IconPageIndicator:
    com.viewpagerindicator.IcsLinearLayout mIconsLayout -> mIconsLayout
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    java.lang.Runnable mIconSelector -> mIconSelector
    int mSelectedIndex -> mSelectedIndex
    void animateToIcon(int) -> animateToIcon
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void access$0(com.viewpagerindicator.IconPageIndicator,java.lang.Runnable) -> access$0
com.viewpagerindicator.IconPageIndicator$1 -> com.viewpagerindicator.IconPageIndicator$1:
    com.viewpagerindicator.IconPageIndicator this$0 -> this$0
    android.view.View val$iconView -> val$iconView
    void run() -> run
com.viewpagerindicator.IconPagerAdapter -> com.viewpagerindicator.IconPagerAdapter:
    int getIconResId(int) -> getIconResId
    int getCount() -> getCount
com.viewpagerindicator.IcsLinearLayout -> com.viewpagerindicator.IcsLinearLayout:
    int[] LL -> LL
    int LL_DIVIDER -> LL_DIVIDER
    int LL_SHOW_DIVIDER -> LL_SHOW_DIVIDER
    int LL_DIVIDER_PADDING -> LL_DIVIDER_PADDING
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mDividerWidth -> mDividerWidth
    int mDividerHeight -> mDividerHeight
    int mShowDividers -> mShowDividers
    int mDividerPadding -> mDividerPadding
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
com.viewpagerindicator.LinePageIndicator -> com.viewpagerindicator.LinePageIndicator:
    int INVALID_POINTER -> INVALID_POINTER
    android.graphics.Paint mPaintUnselected -> mPaintUnselected
    android.graphics.Paint mPaintSelected -> mPaintSelected
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mCurrentPage -> mCurrentPage
    boolean mCentered -> mCentered
    float mLineWidth -> mLineWidth
    float mGapWidth -> mGapWidth
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    void setCentered(boolean) -> setCentered
    boolean isCentered() -> isCentered
    void setUnselectedColor(int) -> setUnselectedColor
    int getUnselectedColor() -> getUnselectedColor
    void setSelectedColor(int) -> setSelectedColor
    int getSelectedColor() -> getSelectedColor
    void setLineWidth(float) -> setLineWidth
    float getLineWidth() -> getLineWidth
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setGapWidth(float) -> setGapWidth
    float getGapWidth() -> getGapWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> measureWidth
    int measureHeight(int) -> measureHeight
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.viewpagerindicator.LinePageIndicator$SavedState -> com.viewpagerindicator.LinePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.LinePageIndicator$SavedState$1 -> com.viewpagerindicator.LinePageIndicator$SavedState$1:
    com.viewpagerindicator.LinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.viewpagerindicator.LinePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.PageIndicator -> com.viewpagerindicator.PageIndicator:
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void notifyDataSetChanged() -> notifyDataSetChanged
com.viewpagerindicator.R -> com.viewpagerindicator.R:
com.viewpagerindicator.R$attr -> com.viewpagerindicator.R$attr:
    int centered -> centered
    int clipPadding -> clipPadding
    int fadeDelay -> fadeDelay
    int fadeLength -> fadeLength
    int fades -> fades
    int fillColor -> fillColor
    int footerColor -> footerColor
    int footerIndicatorHeight -> footerIndicatorHeight
    int footerIndicatorStyle -> footerIndicatorStyle
    int footerIndicatorUnderlinePadding -> footerIndicatorUnderlinePadding
    int footerLineHeight -> footerLineHeight
    int footerPadding -> footerPadding
    int gapWidth -> gapWidth
    int linePosition -> linePosition
    int lineWidth -> lineWidth
    int pageColor -> pageColor
    int radius -> radius
    int selectedBold -> selectedBold
    int selectedColor -> selectedColor
    int snap -> snap
    int strokeColor -> strokeColor
    int strokeWidth -> strokeWidth
    int titlePadding -> titlePadding
    int topPadding -> topPadding
    int unselectedColor -> unselectedColor
    int vpiCirclePageIndicatorStyle -> vpiCirclePageIndicatorStyle
    int vpiIconPageIndicatorStyle -> vpiIconPageIndicatorStyle
    int vpiLinePageIndicatorStyle -> vpiLinePageIndicatorStyle
    int vpiTabPageIndicatorStyle -> vpiTabPageIndicatorStyle
    int vpiTitlePageIndicatorStyle -> vpiTitlePageIndicatorStyle
    int vpiUnderlinePageIndicatorStyle -> vpiUnderlinePageIndicatorStyle
com.viewpagerindicator.R$bool -> com.viewpagerindicator.R$bool:
    int default_circle_indicator_centered -> default_circle_indicator_centered
    int default_circle_indicator_snap -> default_circle_indicator_snap
    int default_line_indicator_centered -> default_line_indicator_centered
    int default_title_indicator_selected_bold -> default_title_indicator_selected_bold
    int default_underline_indicator_fades -> default_underline_indicator_fades
com.viewpagerindicator.R$color -> com.viewpagerindicator.R$color:
    int default_circle_indicator_fill_color -> default_circle_indicator_fill_color
    int default_circle_indicator_page_color -> default_circle_indicator_page_color
    int default_circle_indicator_stroke_color -> default_circle_indicator_stroke_color
    int default_line_indicator_selected_color -> default_line_indicator_selected_color
    int default_line_indicator_unselected_color -> default_line_indicator_unselected_color
    int default_title_indicator_footer_color -> default_title_indicator_footer_color
    int default_title_indicator_selected_color -> default_title_indicator_selected_color
    int default_title_indicator_text_color -> default_title_indicator_text_color
    int default_underline_indicator_selected_color -> default_underline_indicator_selected_color
    int tabview_textcolor -> tabview_textcolor
    int vpi__background_holo_dark -> vpi__background_holo_dark
    int vpi__background_holo_light -> vpi__background_holo_light
    int vpi__bright_foreground_disabled_holo_dark -> vpi__bright_foreground_disabled_holo_dark
    int vpi__bright_foreground_disabled_holo_light -> vpi__bright_foreground_disabled_holo_light
    int vpi__bright_foreground_holo_dark -> vpi__bright_foreground_holo_dark
    int vpi__bright_foreground_holo_light -> vpi__bright_foreground_holo_light
    int vpi__bright_foreground_inverse_holo_dark -> vpi__bright_foreground_inverse_holo_dark
    int vpi__bright_foreground_inverse_holo_light -> vpi__bright_foreground_inverse_holo_light
    int vpi__dark_theme -> vpi__dark_theme
    int vpi__light_theme -> vpi__light_theme
com.viewpagerindicator.R$dimen -> com.viewpagerindicator.R$dimen:
    int default_circle_indicator_radius -> default_circle_indicator_radius
    int default_circle_indicator_stroke_width -> default_circle_indicator_stroke_width
    int default_line_indicator_gap_width -> default_line_indicator_gap_width
    int default_line_indicator_line_width -> default_line_indicator_line_width
    int default_line_indicator_stroke_width -> default_line_indicator_stroke_width
    int default_title_indicator_clip_padding -> default_title_indicator_clip_padding
    int default_title_indicator_footer_indicator_height -> default_title_indicator_footer_indicator_height
    int default_title_indicator_footer_indicator_underline_padding -> default_title_indicator_footer_indicator_underline_padding
    int default_title_indicator_footer_line_height -> default_title_indicator_footer_line_height
    int default_title_indicator_footer_padding -> default_title_indicator_footer_padding
    int default_title_indicator_text_size -> default_title_indicator_text_size
    int default_title_indicator_title_padding -> default_title_indicator_title_padding
    int default_title_indicator_top_padding -> default_title_indicator_top_padding
com.viewpagerindicator.R$drawable -> com.viewpagerindicator.R$drawable:
    int tabline -> tabline
    int tabview_bottom -> tabview_bottom
    int vpi__tab_indicator -> vpi__tab_indicator
    int vpi__tab_selected_focused_holo -> vpi__tab_selected_focused_holo
    int vpi__tab_selected_holo -> vpi__tab_selected_holo
    int vpi__tab_selected_pressed_holo -> vpi__tab_selected_pressed_holo
    int vpi__tab_unselected_focused_holo -> vpi__tab_unselected_focused_holo
    int vpi__tab_unselected_holo -> vpi__tab_unselected_holo
    int vpi__tab_unselected_pressed_holo -> vpi__tab_unselected_pressed_holo
com.viewpagerindicator.R$id -> com.viewpagerindicator.R$id:
    int bottom -> bottom
    int none -> none
    int top -> top
    int triangle -> triangle
    int underline -> underline
com.viewpagerindicator.R$integer -> com.viewpagerindicator.R$integer:
    int default_circle_indicator_orientation -> default_circle_indicator_orientation
    int default_title_indicator_footer_indicator_style -> default_title_indicator_footer_indicator_style
    int default_title_indicator_line_position -> default_title_indicator_line_position
    int default_underline_indicator_fade_delay -> default_underline_indicator_fade_delay
    int default_underline_indicator_fade_length -> default_underline_indicator_fade_length
com.viewpagerindicator.R$style -> com.viewpagerindicator.R$style:
    int TextAppearance_TabPageIndicator -> TextAppearance_TabPageIndicator
    int Theme_PageIndicatorDefaults -> Theme_PageIndicatorDefaults
    int Widget -> Widget
    int Widget_IconPageIndicator -> Widget_IconPageIndicator
    int Widget_TabPageIndicator -> Widget_TabPageIndicator
com.viewpagerindicator.R$styleable -> com.viewpagerindicator.R$styleable:
    int[] CirclePageIndicator -> CirclePageIndicator
    int CirclePageIndicator_android_background -> CirclePageIndicator_android_background
    int CirclePageIndicator_android_orientation -> CirclePageIndicator_android_orientation
    int CirclePageIndicator_centered -> CirclePageIndicator_centered
    int CirclePageIndicator_fillColor -> CirclePageIndicator_fillColor
    int CirclePageIndicator_pageColor -> CirclePageIndicator_pageColor
    int CirclePageIndicator_radius -> CirclePageIndicator_radius
    int CirclePageIndicator_snap -> CirclePageIndicator_snap
    int CirclePageIndicator_strokeColor -> CirclePageIndicator_strokeColor
    int CirclePageIndicator_strokeWidth -> CirclePageIndicator_strokeWidth
    int[] LinePageIndicator -> LinePageIndicator
    int LinePageIndicator_android_background -> LinePageIndicator_android_background
    int LinePageIndicator_centered -> LinePageIndicator_centered
    int LinePageIndicator_gapWidth -> LinePageIndicator_gapWidth
    int LinePageIndicator_lineWidth -> LinePageIndicator_lineWidth
    int LinePageIndicator_selectedColor -> LinePageIndicator_selectedColor
    int LinePageIndicator_strokeWidth -> LinePageIndicator_strokeWidth
    int LinePageIndicator_unselectedColor -> LinePageIndicator_unselectedColor
    int[] TitlePageIndicator -> TitlePageIndicator
    int TitlePageIndicator_android_background -> TitlePageIndicator_android_background
    int TitlePageIndicator_android_textColor -> TitlePageIndicator_android_textColor
    int TitlePageIndicator_android_textSize -> TitlePageIndicator_android_textSize
    int TitlePageIndicator_clipPadding -> TitlePageIndicator_clipPadding
    int TitlePageIndicator_footerColor -> TitlePageIndicator_footerColor
    int TitlePageIndicator_footerIndicatorHeight -> TitlePageIndicator_footerIndicatorHeight
    int TitlePageIndicator_footerIndicatorStyle -> TitlePageIndicator_footerIndicatorStyle
    int TitlePageIndicator_footerIndicatorUnderlinePadding -> TitlePageIndicator_footerIndicatorUnderlinePadding
    int TitlePageIndicator_footerLineHeight -> TitlePageIndicator_footerLineHeight
    int TitlePageIndicator_footerPadding -> TitlePageIndicator_footerPadding
    int TitlePageIndicator_linePosition -> TitlePageIndicator_linePosition
    int TitlePageIndicator_selectedBold -> TitlePageIndicator_selectedBold
    int TitlePageIndicator_selectedColor -> TitlePageIndicator_selectedColor
    int TitlePageIndicator_titlePadding -> TitlePageIndicator_titlePadding
    int TitlePageIndicator_topPadding -> TitlePageIndicator_topPadding
    int[] UnderlinePageIndicator -> UnderlinePageIndicator
    int UnderlinePageIndicator_android_background -> UnderlinePageIndicator_android_background
    int UnderlinePageIndicator_fadeDelay -> UnderlinePageIndicator_fadeDelay
    int UnderlinePageIndicator_fadeLength -> UnderlinePageIndicator_fadeLength
    int UnderlinePageIndicator_fades -> UnderlinePageIndicator_fades
    int UnderlinePageIndicator_selectedColor -> UnderlinePageIndicator_selectedColor
    int[] ViewPagerIndicator -> ViewPagerIndicator
    int ViewPagerIndicator_vpiCirclePageIndicatorStyle -> ViewPagerIndicator_vpiCirclePageIndicatorStyle
    int ViewPagerIndicator_vpiIconPageIndicatorStyle -> ViewPagerIndicator_vpiIconPageIndicatorStyle
    int ViewPagerIndicator_vpiLinePageIndicatorStyle -> ViewPagerIndicator_vpiLinePageIndicatorStyle
    int ViewPagerIndicator_vpiTabPageIndicatorStyle -> ViewPagerIndicator_vpiTabPageIndicatorStyle
    int ViewPagerIndicator_vpiTitlePageIndicatorStyle -> ViewPagerIndicator_vpiTitlePageIndicatorStyle
    int ViewPagerIndicator_vpiUnderlinePageIndicatorStyle -> ViewPagerIndicator_vpiUnderlinePageIndicatorStyle
com.viewpagerindicator.TabPageIndicator -> com.viewpagerindicator.TabPageIndicator:
    int screenWidth -> screenWidth
    java.lang.CharSequence EMPTY_TITLE -> EMPTY_TITLE
    java.lang.Runnable mTabSelector -> mTabSelector
    android.view.View$OnClickListener mTabClickListener -> mTabClickListener
    com.viewpagerindicator.IcsLinearLayout mTabLayout -> mTabLayout
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mMaxTabWidth -> mMaxTabWidth
    int mSelectedTabIndex -> mSelectedTabIndex
    com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener mTabReselectedListener -> mTabReselectedListener
    void setOnTabReselectedListener(com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener) -> setOnTabReselectedListener
    void onMeasure(int,int) -> onMeasure
    void animateToTab(int) -> animateToTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addTab(int,java.lang.CharSequence,int) -> addTab
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    int dip2px(android.content.Context,float) -> dip2px
    android.support.v4.view.ViewPager access$0(com.viewpagerindicator.TabPageIndicator) -> access$0
    com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener access$1(com.viewpagerindicator.TabPageIndicator) -> access$1
    int access$2(com.viewpagerindicator.TabPageIndicator) -> access$2
    void access$3(com.viewpagerindicator.TabPageIndicator,java.lang.Runnable) -> access$3
com.viewpagerindicator.TabPageIndicator$1 -> com.viewpagerindicator.TabPageIndicator$1:
    com.viewpagerindicator.TabPageIndicator this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.viewpagerindicator.TabPageIndicator$2 -> com.viewpagerindicator.TabPageIndicator$2:
    com.viewpagerindicator.TabPageIndicator this$0 -> this$0
    android.view.View val$tabView -> val$tabView
    void run() -> run
com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener -> com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener:
    void onTabReselected(int) -> onTabReselected
com.viewpagerindicator.TabPageIndicator$TabView -> com.viewpagerindicator.TabPageIndicator$TabView:
    int mIndex -> mIndex
    int topIconResId -> topIconResId
    com.viewpagerindicator.TabPageIndicator this$0 -> this$0
    int getTopIconResId() -> getTopIconResId
    void setTopIconResId(int) -> setTopIconResId
    void onMeasure(int,int) -> onMeasure
    int getIndex() -> getIndex
    void access$0(com.viewpagerindicator.TabPageIndicator$TabView,int) -> access$0
com.viewpagerindicator.TitlePageIndicator -> com.viewpagerindicator.TitlePageIndicator:
    float SELECTION_FADE_PERCENTAGE -> SELECTION_FADE_PERCENTAGE
    float BOLD_FADE_PERCENTAGE -> BOLD_FADE_PERCENTAGE
    java.lang.String EMPTY_TITLE -> EMPTY_TITLE
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mCurrentPage -> mCurrentPage
    float mPageOffset -> mPageOffset
    int mScrollState -> mScrollState
    android.graphics.Paint mPaintText -> mPaintText
    boolean mBoldText -> mBoldText
    int mColorText -> mColorText
    int mColorSelected -> mColorSelected
    android.graphics.Path mPath -> mPath
    android.graphics.Rect mBounds -> mBounds
    android.graphics.Paint mPaintFooterLine -> mPaintFooterLine
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle mFooterIndicatorStyle -> mFooterIndicatorStyle
    com.viewpagerindicator.TitlePageIndicator$LinePosition mLinePosition -> mLinePosition
    android.graphics.Paint mPaintFooterIndicator -> mPaintFooterIndicator
    float mFooterIndicatorHeight -> mFooterIndicatorHeight
    float mFooterIndicatorUnderlinePadding -> mFooterIndicatorUnderlinePadding
    float mFooterPadding -> mFooterPadding
    float mTitlePadding -> mTitlePadding
    float mTopPadding -> mTopPadding
    float mClipPadding -> mClipPadding
    float mFooterLineHeight -> mFooterLineHeight
    int INVALID_POINTER -> INVALID_POINTER
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener mCenterItemClickListener -> mCenterItemClickListener
    int[] $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle -> $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle
    int getFooterColor() -> getFooterColor
    void setFooterColor(int) -> setFooterColor
    float getFooterLineHeight() -> getFooterLineHeight
    void setFooterLineHeight(float) -> setFooterLineHeight
    float getFooterIndicatorHeight() -> getFooterIndicatorHeight
    void setFooterIndicatorHeight(float) -> setFooterIndicatorHeight
    float getFooterIndicatorPadding() -> getFooterIndicatorPadding
    void setFooterIndicatorPadding(float) -> setFooterIndicatorPadding
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle getFooterIndicatorStyle() -> getFooterIndicatorStyle
    void setFooterIndicatorStyle(com.viewpagerindicator.TitlePageIndicator$IndicatorStyle) -> setFooterIndicatorStyle
    com.viewpagerindicator.TitlePageIndicator$LinePosition getLinePosition() -> getLinePosition
    void setLinePosition(com.viewpagerindicator.TitlePageIndicator$LinePosition) -> setLinePosition
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    boolean isSelectedBold() -> isSelectedBold
    void setSelectedBold(boolean) -> setSelectedBold
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    float getTitlePadding() -> getTitlePadding
    void setTitlePadding(float) -> setTitlePadding
    float getTopPadding() -> getTopPadding
    void setTopPadding(float) -> setTopPadding
    float getClipPadding() -> getClipPadding
    void setClipPadding(float) -> setClipPadding
    void setTypeface(android.graphics.Typeface) -> setTypeface
    android.graphics.Typeface getTypeface() -> getTypeface
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void clipViewOnTheRight(android.graphics.Rect,float,int) -> clipViewOnTheRight
    void clipViewOnTheLeft(android.graphics.Rect,float,int) -> clipViewOnTheLeft
    java.util.ArrayList calculateAllBounds(android.graphics.Paint) -> calculateAllBounds
    android.graphics.Rect calcBounds(int,android.graphics.Paint) -> calcBounds
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setOnCenterItemClickListener(com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener) -> setOnCenterItemClickListener
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    java.lang.CharSequence getTitle(int) -> getTitle
    int[] $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle() -> $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle
com.viewpagerindicator.TitlePageIndicator$IndicatorStyle -> com.viewpagerindicator.TitlePageIndicator$IndicatorStyle:
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle None -> None
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle Triangle -> Triangle
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle Underline -> Underline
    int value -> value
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] ENUM$VALUES -> ENUM$VALUES
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle fromValue(int) -> fromValue
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] values() -> values
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle valueOf(java.lang.String) -> valueOf
com.viewpagerindicator.TitlePageIndicator$LinePosition -> com.viewpagerindicator.TitlePageIndicator$LinePosition:
    com.viewpagerindicator.TitlePageIndicator$LinePosition Bottom -> Bottom
    com.viewpagerindicator.TitlePageIndicator$LinePosition Top -> Top
    int value -> value
    com.viewpagerindicator.TitlePageIndicator$LinePosition[] ENUM$VALUES -> ENUM$VALUES
    com.viewpagerindicator.TitlePageIndicator$LinePosition fromValue(int) -> fromValue
    com.viewpagerindicator.TitlePageIndicator$LinePosition[] values() -> values
    com.viewpagerindicator.TitlePageIndicator$LinePosition valueOf(java.lang.String) -> valueOf
com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener -> com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener:
    void onCenterItemClick(int) -> onCenterItemClick
com.viewpagerindicator.TitlePageIndicator$SavedState -> com.viewpagerindicator.TitlePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.TitlePageIndicator$SavedState$1 -> com.viewpagerindicator.TitlePageIndicator$SavedState$1:
    com.viewpagerindicator.TitlePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.viewpagerindicator.TitlePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.UnderlinePageIndicator -> com.viewpagerindicator.UnderlinePageIndicator:
    int INVALID_POINTER -> INVALID_POINTER
    int FADE_FRAME_MS -> FADE_FRAME_MS
    android.graphics.Paint mPaint -> mPaint
    boolean mFades -> mFades
    int mFadeDelay -> mFadeDelay
    int mFadeLength -> mFadeLength
    int mFadeBy -> mFadeBy
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mScrollState -> mScrollState
    int mCurrentPage -> mCurrentPage
    float mPositionOffset -> mPositionOffset
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    java.lang.Runnable mFadeRunnable -> mFadeRunnable
    boolean getFades() -> getFades
    void setFades(boolean) -> setFades
    int getFadeDelay() -> getFadeDelay
    void setFadeDelay(int) -> setFadeDelay
    int getFadeLength() -> getFadeLength
    void setFadeLength(int) -> setFadeLength
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean access$0(com.viewpagerindicator.UnderlinePageIndicator) -> access$0
    android.graphics.Paint access$1(com.viewpagerindicator.UnderlinePageIndicator) -> access$1
    int access$2(com.viewpagerindicator.UnderlinePageIndicator) -> access$2
    java.lang.Runnable access$3(com.viewpagerindicator.UnderlinePageIndicator) -> access$3
com.viewpagerindicator.UnderlinePageIndicator$1 -> com.viewpagerindicator.UnderlinePageIndicator$1:
    com.viewpagerindicator.UnderlinePageIndicator this$0 -> this$0
    void run() -> run
com.viewpagerindicator.UnderlinePageIndicator$2 -> com.viewpagerindicator.UnderlinePageIndicator$2:
    com.viewpagerindicator.UnderlinePageIndicator this$0 -> this$0
    void run() -> run
com.viewpagerindicator.UnderlinePageIndicator$SavedState -> com.viewpagerindicator.UnderlinePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.UnderlinePageIndicator$SavedState$1 -> com.viewpagerindicator.UnderlinePageIndicator$SavedState$1:
    com.viewpagerindicator.UnderlinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.viewpagerindicator.UnderlinePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
okio.AsyncTimeout -> okio.AsyncTimeout:
    okio.AsyncTimeout head -> head
    boolean inQueue -> inQueue
    okio.AsyncTimeout next -> next
    long timeoutAt -> timeoutAt
    void enter() -> enter
    void scheduleTimeout(okio.AsyncTimeout,long) -> scheduleTimeout
    boolean exit() -> exit
    void exit(boolean) -> exit
    boolean cancelScheduledTimeout(okio.AsyncTimeout) -> cancelScheduledTimeout
    long remainingNanos(long) -> remainingNanos
    void timedOut() -> timedOut
    okio.AsyncTimeout awaitTimeout() -> awaitTimeout
okio.AsyncTimeout$Watchdog -> okio.AsyncTimeout$Watchdog:
    void run() -> run
okio.Base64 -> okio.Base64:
    byte[] MAP -> MAP
    byte[] decode(java.lang.String) -> decode
    java.lang.String encode(byte[]) -> encode
okio.Buffer -> okio.Buffer:
    okio.Segment head -> head
    long size -> size
    long size() -> size
    okio.Buffer buffer() -> buffer
    java.io.OutputStream outputStream() -> outputStream
    okio.Buffer emitCompleteSegments() -> emitCompleteSegments
    boolean exhausted() -> exhausted
    void require(long) -> require
    java.io.InputStream inputStream() -> inputStream
    okio.Buffer copyTo(java.io.OutputStream) -> copyTo
    okio.Buffer copyTo(java.io.OutputStream,long,long) -> copyTo
    okio.Buffer writeTo(java.io.OutputStream) -> writeTo
    okio.Buffer writeTo(java.io.OutputStream,long) -> writeTo
    okio.Buffer readFrom(java.io.InputStream) -> readFrom
    okio.Buffer readFrom(java.io.InputStream,long) -> readFrom
    void readFrom(java.io.InputStream,long,boolean) -> readFrom
    long completeSegmentByteCount() -> completeSegmentByteCount
    byte readByte() -> readByte
    byte getByte(long) -> getByte
    short readShort() -> readShort
    int readInt() -> readInt
    long readLong() -> readLong
    short readShortLe() -> readShortLe
    int readIntLe() -> readIntLe
    long readLongLe() -> readLongLe
    okio.ByteString readByteString(long) -> readByteString
    void readFully(okio.Buffer,long) -> readFully
    long readAll(okio.Sink) -> readAll
    java.lang.String readUtf8() -> readUtf8
    java.lang.String readUtf8(long) -> readUtf8
    java.lang.String readString(java.nio.charset.Charset) -> readString
    java.lang.String readString(long,java.nio.charset.Charset) -> readString
    java.lang.String readUtf8Line() -> readUtf8Line
    java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    java.lang.String readUtf8Line(long) -> readUtf8Line
    byte[] readByteArray(long) -> readByteArray
    int read(byte[],int,int) -> read
    void clear() -> clear
    void skip(long) -> skip
    okio.Buffer write(okio.ByteString) -> write
    okio.Buffer writeUtf8(java.lang.String) -> writeUtf8
    okio.Buffer writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    okio.Buffer write(byte[]) -> write
    okio.Buffer write(byte[],int,int) -> write
    long writeAll(okio.Source) -> writeAll
    okio.Buffer writeByte(int) -> writeByte
    okio.Buffer writeShort(int) -> writeShort
    okio.Buffer writeShortLe(int) -> writeShortLe
    okio.Buffer writeInt(int) -> writeInt
    okio.Buffer writeIntLe(int) -> writeIntLe
    okio.Buffer writeLong(long) -> writeLong
    okio.Buffer writeLongLe(long) -> writeLongLe
    okio.Segment writableSegment(int) -> writableSegment
    void write(okio.Buffer,long) -> write
    long read(okio.Buffer,long) -> read
    long indexOf(byte) -> indexOf
    long indexOf(byte,long) -> indexOf
    void flush() -> flush
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.util.List segmentSizes() -> segmentSizes
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    okio.Buffer clone() -> clone
    java.lang.Object clone() -> clone
    okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    okio.BufferedSink writeLongLe(long) -> writeLongLe
    okio.BufferedSink writeLong(long) -> writeLong
    okio.BufferedSink writeIntLe(int) -> writeIntLe
    okio.BufferedSink writeInt(int) -> writeInt
    okio.BufferedSink writeShortLe(int) -> writeShortLe
    okio.BufferedSink writeShort(int) -> writeShort
    okio.BufferedSink writeByte(int) -> writeByte
    okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    okio.BufferedSink write(byte[],int,int) -> write
    okio.BufferedSink write(byte[]) -> write
    okio.BufferedSink write(okio.ByteString) -> write
okio.Buffer$1 -> okio.Buffer$1:
    okio.Buffer this$0 -> this$0
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    java.lang.String toString() -> toString
okio.Buffer$2 -> okio.Buffer$2:
    okio.Buffer this$0 -> this$0
    int read() -> read
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
    java.lang.String toString() -> toString
okio.BufferedSink -> okio.BufferedSink:
    okio.Buffer buffer() -> buffer
    okio.BufferedSink write(okio.ByteString) -> write
    okio.BufferedSink write(byte[]) -> write
    okio.BufferedSink write(byte[],int,int) -> write
    long writeAll(okio.Source) -> writeAll
    okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    okio.BufferedSink writeByte(int) -> writeByte
    okio.BufferedSink writeShort(int) -> writeShort
    okio.BufferedSink writeShortLe(int) -> writeShortLe
    okio.BufferedSink writeInt(int) -> writeInt
    okio.BufferedSink writeIntLe(int) -> writeIntLe
    okio.BufferedSink writeLong(long) -> writeLong
    okio.BufferedSink writeLongLe(long) -> writeLongLe
    okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    java.io.OutputStream outputStream() -> outputStream
okio.BufferedSource -> okio.BufferedSource:
    okio.Buffer buffer() -> buffer
    boolean exhausted() -> exhausted
    void require(long) -> require
    byte readByte() -> readByte
    short readShort() -> readShort
    short readShortLe() -> readShortLe
    int readInt() -> readInt
    int readIntLe() -> readIntLe
    long readLong() -> readLong
    long readLongLe() -> readLongLe
    void skip(long) -> skip
    okio.ByteString readByteString(long) -> readByteString
    byte[] readByteArray(long) -> readByteArray
    void readFully(okio.Buffer,long) -> readFully
    long readAll(okio.Sink) -> readAll
    java.lang.String readUtf8() -> readUtf8
    java.lang.String readUtf8(long) -> readUtf8
    java.lang.String readUtf8Line() -> readUtf8Line
    java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    java.lang.String readString(java.nio.charset.Charset) -> readString
    java.lang.String readString(long,java.nio.charset.Charset) -> readString
    long indexOf(byte) -> indexOf
    java.io.InputStream inputStream() -> inputStream
okio.ByteString -> okio.ByteString:
    char[] HEX_DIGITS -> HEX_DIGITS
    long serialVersionUID -> serialVersionUID
    okio.ByteString EMPTY -> EMPTY
    byte[] data -> data
    int hashCode -> hashCode
    java.lang.String utf8 -> utf8
    okio.ByteString of(byte[]) -> of
    okio.ByteString of(byte[],int,int) -> of
    okio.ByteString encodeUtf8(java.lang.String) -> encodeUtf8
    java.lang.String utf8() -> utf8
    java.lang.String base64() -> base64
    okio.ByteString decodeBase64(java.lang.String) -> decodeBase64
    java.lang.String hex() -> hex
    okio.ByteString decodeHex(java.lang.String) -> decodeHex
    int decodeHexDigit(char) -> decodeHexDigit
    okio.ByteString read(java.io.InputStream,int) -> read
    okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    okio.ByteString toAsciiUppercase() -> toAsciiUppercase
    byte getByte(int) -> getByte
    int size() -> size
    byte[] toByteArray() -> toByteArray
    void write(java.io.OutputStream) -> write
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
okio.DeflaterSink -> okio.DeflaterSink:
    okio.BufferedSink sink -> sink
    java.util.zip.Deflater deflater -> deflater
    boolean closed -> closed
    void write(okio.Buffer,long) -> write
    void deflate(boolean) -> deflate
    void flush() -> flush
    void finishDeflate() -> finishDeflate
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
okio.GzipSink -> okio.GzipSink:
    okio.BufferedSink sink -> sink
    java.util.zip.Deflater deflater -> deflater
    okio.DeflaterSink deflaterSink -> deflaterSink
    boolean closed -> closed
    java.util.zip.CRC32 crc -> crc
    void write(okio.Buffer,long) -> write
    void flush() -> flush
    okio.Timeout timeout() -> timeout
    void close() -> close
    void writeHeader() -> writeHeader
    void writeFooter() -> writeFooter
    void updateCrc(okio.Buffer,long) -> updateCrc
okio.GzipSource -> okio.GzipSource:
    byte FHCRC -> FHCRC
    byte FEXTRA -> FEXTRA
    byte FNAME -> FNAME
    byte FCOMMENT -> FCOMMENT
    byte SECTION_HEADER -> SECTION_HEADER
    byte SECTION_BODY -> SECTION_BODY
    byte SECTION_TRAILER -> SECTION_TRAILER
    byte SECTION_DONE -> SECTION_DONE
    int section -> section
    okio.BufferedSource source -> source
    java.util.zip.Inflater inflater -> inflater
    okio.InflaterSource inflaterSource -> inflaterSource
    java.util.zip.CRC32 crc -> crc
    long read(okio.Buffer,long) -> read
    void consumeHeader() -> consumeHeader
    void consumeTrailer() -> consumeTrailer
    okio.Timeout timeout() -> timeout
    void close() -> close
    void updateCrc(okio.Buffer,long,long) -> updateCrc
    void checkEqual(java.lang.String,int,int) -> checkEqual
okio.InflaterSource -> okio.InflaterSource:
    okio.BufferedSource source -> source
    java.util.zip.Inflater inflater -> inflater
    int bufferBytesHeldByInflater -> bufferBytesHeldByInflater
    boolean closed -> closed
    long read(okio.Buffer,long) -> read
    boolean refill() -> refill
    void releaseInflatedBytes() -> releaseInflatedBytes
    okio.Timeout timeout() -> timeout
    void close() -> close
okio.Okio -> okio.Okio:
    java.util.logging.Logger logger -> logger
    okio.BufferedSource buffer(okio.Source) -> buffer
    okio.BufferedSink buffer(okio.Sink) -> buffer
    okio.Sink sink(java.io.OutputStream) -> sink
    okio.Sink sink(java.io.OutputStream,okio.Timeout) -> sink
    okio.Sink sink(java.net.Socket) -> sink
    okio.Source source(java.io.InputStream) -> source
    okio.Source source(java.io.InputStream,okio.Timeout) -> source
    okio.Source source(java.net.Socket) -> source
    okio.AsyncTimeout timeout(java.net.Socket) -> timeout
    java.util.logging.Logger access$000() -> access$000
okio.Okio$1 -> okio.Okio$1:
    okio.Timeout val$timeout -> val$timeout
    java.io.OutputStream val$out -> val$out
    void write(okio.Buffer,long) -> write
    void flush() -> flush
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
okio.Okio$2 -> okio.Okio$2:
    okio.AsyncTimeout val$timeout -> val$timeout
    okio.Sink val$sink -> val$sink
    java.net.Socket val$socket -> val$socket
    void write(okio.Buffer,long) -> write
    void flush() -> flush
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
okio.Okio$3 -> okio.Okio$3:
    okio.Timeout val$timeout -> val$timeout
    java.io.InputStream val$in -> val$in
    long read(okio.Buffer,long) -> read
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
okio.Okio$4 -> okio.Okio$4:
    okio.AsyncTimeout val$timeout -> val$timeout
    okio.Source val$source -> val$source
    java.net.Socket val$socket -> val$socket
    long read(okio.Buffer,long) -> read
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
okio.Okio$5 -> okio.Okio$5:
    java.net.Socket val$socket -> val$socket
    void timedOut() -> timedOut
okio.RealBufferedSink -> okio.RealBufferedSink:
    okio.Buffer buffer -> buffer
    okio.Sink sink -> sink
    boolean closed -> closed
    okio.Buffer buffer() -> buffer
    void write(okio.Buffer,long) -> write
    okio.BufferedSink write(okio.ByteString) -> write
    okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    okio.BufferedSink write(byte[]) -> write
    okio.BufferedSink write(byte[],int,int) -> write
    long writeAll(okio.Source) -> writeAll
    okio.BufferedSink writeByte(int) -> writeByte
    okio.BufferedSink writeShort(int) -> writeShort
    okio.BufferedSink writeShortLe(int) -> writeShortLe
    okio.BufferedSink writeInt(int) -> writeInt
    okio.BufferedSink writeIntLe(int) -> writeIntLe
    okio.BufferedSink writeLong(long) -> writeLong
    okio.BufferedSink writeLongLe(long) -> writeLongLe
    okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    java.io.OutputStream outputStream() -> outputStream
    void flush() -> flush
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
    boolean access$000(okio.RealBufferedSink) -> access$000
okio.RealBufferedSink$1 -> okio.RealBufferedSink$1:
    okio.RealBufferedSink this$0 -> this$0
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    java.lang.String toString() -> toString
okio.RealBufferedSource -> okio.RealBufferedSource:
    okio.Buffer buffer -> buffer
    okio.Source source -> source
    boolean closed -> closed
    okio.Buffer buffer() -> buffer
    long read(okio.Buffer,long) -> read
    boolean exhausted() -> exhausted
    void require(long) -> require
    byte readByte() -> readByte
    okio.ByteString readByteString(long) -> readByteString
    byte[] readByteArray(long) -> readByteArray
    void readFully(okio.Buffer,long) -> readFully
    long readAll(okio.Sink) -> readAll
    java.lang.String readUtf8() -> readUtf8
    java.lang.String readUtf8(long) -> readUtf8
    java.lang.String readString(java.nio.charset.Charset) -> readString
    java.lang.String readString(long,java.nio.charset.Charset) -> readString
    java.lang.String readUtf8Line() -> readUtf8Line
    java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    short readShort() -> readShort
    short readShortLe() -> readShortLe
    int readInt() -> readInt
    int readIntLe() -> readIntLe
    long readLong() -> readLong
    long readLongLe() -> readLongLe
    void skip(long) -> skip
    long indexOf(byte) -> indexOf
    java.io.InputStream inputStream() -> inputStream
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
    boolean access$000(okio.RealBufferedSource) -> access$000
okio.RealBufferedSource$1 -> okio.RealBufferedSource$1:
    okio.RealBufferedSource this$0 -> this$0
    int read() -> read
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
    java.lang.String toString() -> toString
okio.Segment -> okio.Segment:
    int SIZE -> SIZE
    byte[] data -> data
    int pos -> pos
    int limit -> limit
    okio.Segment next -> next
    okio.Segment prev -> prev
    okio.Segment pop() -> pop
    okio.Segment push(okio.Segment) -> push
    okio.Segment split(int) -> split
    void compact() -> compact
    void writeTo(okio.Segment,int) -> writeTo
okio.SegmentPool -> okio.SegmentPool:
    okio.SegmentPool INSTANCE -> INSTANCE
    long MAX_SIZE -> MAX_SIZE
    okio.Segment next -> next
    long byteCount -> byteCount
    okio.Segment take() -> take
    void recycle(okio.Segment) -> recycle
okio.Sink -> okio.Sink:
    void write(okio.Buffer,long) -> write
    void flush() -> flush
    okio.Timeout timeout() -> timeout
    void close() -> close
okio.Source -> okio.Source:
    long read(okio.Buffer,long) -> read
    okio.Timeout timeout() -> timeout
    void close() -> close
okio.Timeout -> okio.Timeout:
    okio.Timeout NONE -> NONE
    long deadlineStart -> deadlineStart
    long deadlineDurationNanos -> deadlineDurationNanos
    long timeoutNanos -> timeoutNanos
    okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    long getTimeoutNanos() -> getTimeoutNanos
    okio.Timeout deadline(long,java.util.concurrent.TimeUnit) -> deadline
    okio.Timeout clear() -> clear
    void throwIfReached() -> throwIfReached
okio.Timeout$1 -> okio.Timeout$1:
    okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    okio.Timeout deadline(long,java.util.concurrent.TimeUnit) -> deadline
    void throwIfReached() -> throwIfReached
okio.Util -> okio.Util:
    java.nio.charset.Charset UTF_8 -> UTF_8
    void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    short reverseBytesShort(short) -> reverseBytesShort
    int reverseBytesInt(int) -> reverseBytesInt
    long reverseBytesLong(long) -> reverseBytesLong
    void sneakyRethrow(java.lang.Throwable) -> sneakyRethrow
    void sneakyThrow2(java.lang.Throwable) -> sneakyThrow2
u.aly.a -> u.aly.a:
    int a -> a
    int b -> b
    java.lang.String c -> c
    java.util.List d -> d
    u.aly.ba e -> e
    boolean a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    boolean g() -> g
    u.aly.ba d() -> d
    void a(u.aly.ba) -> a
    java.util.List e() -> e
    void a(java.util.List) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String f() -> f
    void a(u.aly.bb) -> a
u.aly.aa -> u.aly.aa:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    u.aly.ak a(android.content.Context) -> a
    void a(android.content.SharedPreferences) -> a
    java.lang.String b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    boolean b(android.content.SharedPreferences) -> b
    java.lang.String a(android.content.Context,android.content.SharedPreferences) -> a
    boolean e(android.content.Context) -> e
    void f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
u.aly.ab -> u.aly.ab:
    int d -> d
    int a -> a
    int b -> b
    int e -> e
    long c -> c
    long f -> f
    long g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    android.content.Context n -> n
    void b(android.content.Context) -> b
    int e() -> e
    boolean f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void k() -> k
    void l() -> l
    boolean m() -> m
    long n() -> n
    long o() -> o
    u.aly.as a(android.content.Context) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
u.aly.ac -> u.aly.ac:
    java.lang.String a -> a
    long b -> b
u.aly.ad -> u.aly.ad:
    java.lang.String a -> a
    java.lang.String b -> b
    u.aly.bo a(android.content.Context) -> a
    long[] b(android.content.Context) -> b
u.aly.ae -> u.aly.ae:
    java.lang.String a -> a
    java.util.Map b -> b
    java.util.ArrayList c -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void a(android.content.Context) -> a
    java.util.List a(android.content.SharedPreferences) -> a
u.aly.af -> u.aly.af:
    long e -> e
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.Map d -> d
    java.lang.String a() -> a
u.aly.ag -> u.aly.ag:
    java.util.HashMap b(java.util.Map) -> b
    u.aly.af a(java.lang.String,java.lang.String,java.util.Map) -> a
    java.lang.String b(java.lang.String,java.lang.String,java.util.Map) -> b
    void a(u.aly.bp,java.lang.String) -> a
u.aly.ah -> u.aly.ah:
    u.aly.ah a(boolean) -> a
    java.lang.String a(java.lang.Throwable) -> a
    void a(u.aly.bp,java.lang.String) -> a
u.aly.ai -> u.aly.ai:
    java.util.HashMap b(java.util.Map) -> b
    void a(u.aly.bp,java.lang.String) -> a
u.aly.aj -> u.aly.aj:
    void a(org.json.JSONArray) -> a
u.aly.ak -> u.aly.ak:
    void a(u.aly.bp,java.lang.String) -> a
u.aly.al -> u.aly.al:
    boolean a -> a
    int b -> b
    int c -> c
    int d -> d
    float e -> e
    float f -> f
    android.content.Context g -> g
    u.aly.al h -> h
    u.aly.al a(android.content.Context) -> a
    float b(java.lang.String,int) -> b
    void a(java.lang.String,int) -> a
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    java.util.Map e() -> e
    void a(u.aly.g$a) -> a
    java.lang.String toString() -> toString
u.aly.am -> u.aly.am:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
    long f -> f
    long g -> g
    int h -> h
    long i -> i
    u.aly.am j -> j
    u.aly.am a(android.content.Context) -> a
    u.aly.bp a(android.content.Context,u.aly.bp) -> a
    u.aly.bn b(android.content.Context) -> b
    long a() -> a
    long b() -> b
    void a(int) -> a
    boolean c() -> c
    void a(u.aly.g$a) -> a
u.aly.an -> u.aly.an:
    long a -> a
    long b -> b
    int c -> c
    int d -> d
    com.umeng.analytics.h e -> e
    u.aly.ab f -> f
    long g -> g
    int h -> h
    long i -> i
    long j -> j
    android.content.Context k -> k
    u.aly.an l -> l
    u.aly.an a(android.content.Context,u.aly.ab) -> a
    boolean a() -> a
    long b() -> b
    long c() -> c
    void a(u.aly.g$a) -> a
u.aly.ao -> u.aly.ao:
    u.aly.ao a -> a
    u.aly.ao b -> b
    u.aly.ao c -> c
    u.aly.ao d -> d
    int e -> e
    u.aly.ao[] f -> f
    u.aly.ao[] values() -> values
    u.aly.ao valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.ao a(int) -> a
u.aly.ap -> u.aly.ap:
    u.aly.dd c -> c
    u.aly.ct d -> d
    java.util.Map e -> e
    long a -> a
    int f -> f
    byte g -> g
    java.util.Map b -> b
    u.aly.ap a() -> a
    void b() -> b
    long c() -> c
    u.aly.ap a(long) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    u.aly.ap$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void f() -> f
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd h() -> h
    u.aly.ct i() -> i
u.aly.ap$1 -> u.aly.ap$1:
u.aly.ap$a -> u.aly.ap$a:
    void a(u.aly.cy,u.aly.ap) -> a
    void b(u.aly.cy,u.aly.ap) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ap$b -> u.aly.ap$b:
    u.aly.ap$a a() -> a
    u.aly.dg b() -> b
u.aly.ap$c -> u.aly.ap$c:
    void a(u.aly.cy,u.aly.ap) -> a
    void b(u.aly.cy,u.aly.ap) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ap$d -> u.aly.ap$d:
    u.aly.ap$c a() -> a
    u.aly.dg b() -> b
u.aly.ap$e -> u.aly.ap$e:
    u.aly.ap$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.ap$e[] e -> e
    u.aly.ap$e[] values() -> values
    u.aly.ap$e valueOf(java.lang.String) -> valueOf
    u.aly.ap$e a(int) -> a
    u.aly.ap$e b(int) -> b
    u.aly.ap$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.aq -> u.aly.aq:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    u.aly.aq a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.aq a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.aq b(java.lang.String) -> b
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.aq$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> j
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd k() -> k
    u.aly.ct l() -> l
    u.aly.ct m() -> m
u.aly.aq$1 -> u.aly.aq$1:
u.aly.aq$a -> u.aly.aq$a:
    void a(u.aly.cy,u.aly.aq) -> a
    void b(u.aly.cy,u.aly.aq) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aq$b -> u.aly.aq$b:
    u.aly.aq$a a() -> a
    u.aly.dg b() -> b
u.aly.aq$c -> u.aly.aq$c:
    void a(u.aly.cy,u.aly.aq) -> a
    void b(u.aly.cy,u.aly.aq) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aq$d -> u.aly.aq$d:
    u.aly.aq$c a() -> a
    u.aly.dg b() -> b
u.aly.aq$e -> u.aly.aq$e:
    u.aly.aq$e a -> a
    u.aly.aq$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.aq$e[] f -> f
    u.aly.aq$e[] values() -> values
    u.aly.aq$e valueOf(java.lang.String) -> valueOf
    u.aly.aq$e a(int) -> a
    u.aly.aq$e b(int) -> b
    u.aly.aq$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.ar -> u.aly.ar:
    u.aly.dd m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    u.aly.ct w -> w
    u.aly.ct x -> x
    java.util.Map y -> y
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    u.aly.bm e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    java.lang.String k -> k
    int z -> z
    int A -> A
    byte B -> B
    u.aly.ar$e[] C -> C
    java.util.Map l -> l
    u.aly.ar a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.ar a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.ar b(java.lang.String) -> b
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    int j() -> j
    u.aly.ar a(int) -> a
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    java.lang.String m() -> m
    u.aly.ar c(java.lang.String) -> c
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    u.aly.bm p() -> p
    u.aly.ar a(u.aly.bm) -> a
    void q() -> q
    boolean r() -> r
    void e(boolean) -> e
    java.lang.String s() -> s
    u.aly.ar d(java.lang.String) -> d
    void t() -> t
    boolean u() -> u
    void f(boolean) -> f
    java.lang.String v() -> v
    u.aly.ar e(java.lang.String) -> e
    void w() -> w
    boolean x() -> x
    void g(boolean) -> g
    java.lang.String y() -> y
    u.aly.ar f(java.lang.String) -> f
    void z() -> z
    boolean A() -> A
    void h(boolean) -> h
    java.lang.String B() -> B
    u.aly.ar g(java.lang.String) -> g
    void C() -> C
    boolean D() -> D
    void i(boolean) -> i
    int E() -> E
    u.aly.ar c(int) -> c
    void F() -> F
    boolean G() -> G
    void j(boolean) -> j
    java.lang.String H() -> H
    u.aly.ar h(java.lang.String) -> h
    void I() -> I
    boolean J() -> J
    void k(boolean) -> k
    u.aly.ar$e d(int) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void K() -> K
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd L() -> L
    u.aly.ct M() -> M
    u.aly.ct N() -> N
    u.aly.ct O() -> O
    u.aly.ct P() -> P
    u.aly.ct Q() -> Q
    u.aly.ct R() -> R
    u.aly.ct S() -> S
    u.aly.ct T() -> T
    u.aly.ct U() -> U
    u.aly.ct V() -> V
    u.aly.ct W() -> W
u.aly.ar$1 -> u.aly.ar$1:
u.aly.ar$a -> u.aly.ar$a:
    void a(u.aly.cy,u.aly.ar) -> a
    void b(u.aly.cy,u.aly.ar) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ar$b -> u.aly.ar$b:
    u.aly.ar$a a() -> a
    u.aly.dg b() -> b
u.aly.ar$c -> u.aly.ar$c:
    void a(u.aly.cy,u.aly.ar) -> a
    void b(u.aly.cy,u.aly.ar) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ar$d -> u.aly.ar$d:
    u.aly.ar$c a() -> a
    u.aly.dg b() -> b
u.aly.ar$e -> u.aly.ar$e:
    u.aly.ar$e a -> a
    u.aly.ar$e b -> b
    u.aly.ar$e c -> c
    u.aly.ar$e d -> d
    u.aly.ar$e e -> e
    u.aly.ar$e f -> f
    u.aly.ar$e g -> g
    u.aly.ar$e h -> h
    u.aly.ar$e i -> i
    u.aly.ar$e j -> j
    u.aly.ar$e k -> k
    java.util.Map l -> l
    short m -> m
    java.lang.String n -> n
    u.aly.ar$e[] o -> o
    u.aly.ar$e[] values() -> values
    u.aly.ar$e valueOf(java.lang.String) -> valueOf
    u.aly.ar$e a(int) -> a
    u.aly.ar$e b(int) -> b
    u.aly.ar$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.as -> u.aly.as:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    int a -> a
    int b -> b
    int c -> c
    int j -> j
    int k -> k
    int l -> l
    byte m -> m
    u.aly.as$e[] n -> n
    java.util.Map d -> d
    u.aly.as a() -> a
    void b() -> b
    int c() -> c
    u.aly.as a(int) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    int f() -> f
    u.aly.as c(int) -> c
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    int j() -> j
    u.aly.as d(int) -> d
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    u.aly.as$e e(int) -> e
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> m
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd n() -> n
    u.aly.ct o() -> o
    u.aly.ct p() -> p
    u.aly.ct q() -> q
u.aly.as$1 -> u.aly.as$1:
u.aly.as$a -> u.aly.as$a:
    void a(u.aly.cy,u.aly.as) -> a
    void b(u.aly.cy,u.aly.as) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.as$b -> u.aly.as$b:
    u.aly.as$a a() -> a
    u.aly.dg b() -> b
u.aly.as$c -> u.aly.as$c:
    void a(u.aly.cy,u.aly.as) -> a
    void b(u.aly.cy,u.aly.as) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.as$d -> u.aly.as$d:
    u.aly.as$c a() -> a
    u.aly.dg b() -> b
u.aly.as$e -> u.aly.as$e:
    u.aly.as$e a -> a
    u.aly.as$e b -> b
    u.aly.as$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.as$e[] g -> g
    u.aly.as$e[] values() -> values
    u.aly.as$e valueOf(java.lang.String) -> valueOf
    u.aly.as$e a(int) -> a
    u.aly.as$e b(int) -> b
    u.aly.as$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.at -> u.aly.at:
    u.aly.dd c -> c
    u.aly.ct d -> d
    java.util.Map e -> e
    u.aly.bf a -> a
    u.aly.at$e[] f -> f
    java.util.Map b -> b
    u.aly.at a() -> a
    void b() -> b
    u.aly.bf c() -> c
    u.aly.at a(u.aly.bf) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    u.aly.at$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void f() -> f
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd h() -> h
    u.aly.ct i() -> i
u.aly.at$1 -> u.aly.at$1:
u.aly.at$a -> u.aly.at$a:
    void a(u.aly.cy,u.aly.at) -> a
    void b(u.aly.cy,u.aly.at) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.at$b -> u.aly.at$b:
    u.aly.at$a a() -> a
    u.aly.dg b() -> b
u.aly.at$c -> u.aly.at$c:
    void a(u.aly.cy,u.aly.at) -> a
    void b(u.aly.cy,u.aly.at) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.at$d -> u.aly.at$d:
    u.aly.at$c a() -> a
    u.aly.dg b() -> b
u.aly.at$e -> u.aly.at$e:
    u.aly.at$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.at$e[] e -> e
    u.aly.at$e[] values() -> values
    u.aly.at$e valueOf(java.lang.String) -> valueOf
    u.aly.at$e a(int) -> a
    u.aly.at$e b(int) -> b
    u.aly.at$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.au -> u.aly.au:
    u.aly.dd t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    u.aly.ct w -> w
    u.aly.ct x -> x
    u.aly.ct y -> y
    u.aly.ct z -> z
    u.aly.ct A -> A
    u.aly.ct B -> B
    u.aly.ct C -> C
    u.aly.ct D -> D
    u.aly.ct E -> E
    u.aly.ct F -> F
    u.aly.ct G -> G
    u.aly.ct H -> H
    u.aly.ct I -> I
    u.aly.ct J -> J
    u.aly.ct K -> K
    u.aly.ct L -> L
    java.util.Map M -> M
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    u.aly.bk i -> i
    boolean j -> j
    boolean k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    long n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    int N -> N
    int O -> O
    int P -> P
    byte Q -> Q
    u.aly.au$e[] R -> R
    java.util.Map s -> s
    u.aly.au a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.au a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.au b(java.lang.String) -> b
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    java.lang.String j() -> j
    u.aly.au c(java.lang.String) -> c
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    java.lang.String m() -> m
    u.aly.au d(java.lang.String) -> d
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    java.lang.String p() -> p
    u.aly.au e(java.lang.String) -> e
    void q() -> q
    boolean r() -> r
    void e(boolean) -> e
    java.lang.String s() -> s
    u.aly.au f(java.lang.String) -> f
    void t() -> t
    boolean u() -> u
    void f(boolean) -> f
    java.lang.String v() -> v
    u.aly.au g(java.lang.String) -> g
    void w() -> w
    boolean x() -> x
    void g(boolean) -> g
    java.lang.String y() -> y
    u.aly.au h(java.lang.String) -> h
    void z() -> z
    boolean A() -> A
    void h(boolean) -> h
    u.aly.bk B() -> B
    u.aly.au a(u.aly.bk) -> a
    void C() -> C
    boolean D() -> D
    void i(boolean) -> i
    boolean E() -> E
    u.aly.au j(boolean) -> j
    void F() -> F
    boolean G() -> G
    void k(boolean) -> k
    boolean H() -> H
    u.aly.au l(boolean) -> l
    void I() -> I
    boolean J() -> J
    void m(boolean) -> m
    java.lang.String K() -> K
    u.aly.au i(java.lang.String) -> i
    void L() -> L
    boolean M() -> M
    void n(boolean) -> n
    java.lang.String N() -> N
    u.aly.au j(java.lang.String) -> j
    void O() -> O
    boolean P() -> P
    void o(boolean) -> o
    long Q() -> Q
    u.aly.au a(long) -> a
    void R() -> R
    boolean S() -> S
    void p(boolean) -> p
    java.lang.String T() -> T
    u.aly.au k(java.lang.String) -> k
    void U() -> U
    boolean V() -> V
    void q(boolean) -> q
    java.lang.String W() -> W
    u.aly.au l(java.lang.String) -> l
    void X() -> X
    boolean Y() -> Y
    void r(boolean) -> r
    java.lang.String Z() -> Z
    u.aly.au m(java.lang.String) -> m
    void aa() -> aa
    boolean ab() -> ab
    void s(boolean) -> s
    java.lang.String ac() -> ac
    u.aly.au n(java.lang.String) -> n
    void ad() -> ad
    boolean ae() -> ae
    void t(boolean) -> t
    u.aly.au$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void af() -> af
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd ag() -> ag
    u.aly.ct ah() -> ah
    u.aly.ct ai() -> ai
    u.aly.ct aj() -> aj
    u.aly.ct ak() -> ak
    u.aly.ct al() -> al
    u.aly.ct am() -> am
    u.aly.ct an() -> an
    u.aly.ct ao() -> ao
    u.aly.ct ap() -> ap
    u.aly.ct aq() -> aq
    u.aly.ct ar() -> ar
    u.aly.ct as() -> as
    u.aly.ct at() -> at
    u.aly.ct au() -> au
    u.aly.ct av() -> av
    u.aly.ct aw() -> aw
    u.aly.ct ax() -> ax
    u.aly.ct ay() -> ay
u.aly.au$1 -> u.aly.au$1:
u.aly.au$a -> u.aly.au$a:
    void a(u.aly.cy,u.aly.au) -> a
    void b(u.aly.cy,u.aly.au) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.au$b -> u.aly.au$b:
    u.aly.au$a a() -> a
    u.aly.dg b() -> b
u.aly.au$c -> u.aly.au$c:
    void a(u.aly.cy,u.aly.au) -> a
    void b(u.aly.cy,u.aly.au) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.au$d -> u.aly.au$d:
    u.aly.au$c a() -> a
    u.aly.dg b() -> b
u.aly.au$e -> u.aly.au$e:
    u.aly.au$e a -> a
    u.aly.au$e b -> b
    u.aly.au$e c -> c
    u.aly.au$e d -> d
    u.aly.au$e e -> e
    u.aly.au$e f -> f
    u.aly.au$e g -> g
    u.aly.au$e h -> h
    u.aly.au$e i -> i
    u.aly.au$e j -> j
    u.aly.au$e k -> k
    u.aly.au$e l -> l
    u.aly.au$e m -> m
    u.aly.au$e n -> n
    u.aly.au$e o -> o
    u.aly.au$e p -> p
    u.aly.au$e q -> q
    u.aly.au$e r -> r
    java.util.Map s -> s
    short t -> t
    java.lang.String u -> u
    u.aly.au$e[] v -> v
    u.aly.au$e[] values() -> values
    u.aly.au$e valueOf(java.lang.String) -> valueOf
    u.aly.au$e a(int) -> a
    u.aly.au$e b(int) -> b
    u.aly.au$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.av -> u.aly.av:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    long a -> a
    java.lang.String b -> b
    u.aly.aw c -> c
    int j -> j
    byte k -> k
    u.aly.av$e[] l -> l
    java.util.Map d -> d
    u.aly.av a() -> a
    void b() -> b
    long c() -> c
    u.aly.av a(long) -> a
    void d() -> d
    boolean e() -> e
    void b(boolean) -> b
    java.lang.String f() -> f
    u.aly.av a(java.lang.String) -> a
    void h() -> h
    boolean i() -> i
    void c(boolean) -> c
    u.aly.aw j() -> j
    u.aly.av a(u.aly.aw) -> a
    void k() -> k
    boolean l() -> l
    void d(boolean) -> d
    u.aly.av$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> m
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd n() -> n
    u.aly.ct o() -> o
    u.aly.ct p() -> p
    u.aly.ct q() -> q
u.aly.av$1 -> u.aly.av$1:
u.aly.av$a -> u.aly.av$a:
    void a(u.aly.cy,u.aly.av) -> a
    void b(u.aly.cy,u.aly.av) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.av$b -> u.aly.av$b:
    u.aly.av$a a() -> a
    u.aly.dg b() -> b
u.aly.av$c -> u.aly.av$c:
    void a(u.aly.cy,u.aly.av) -> a
    void b(u.aly.cy,u.aly.av) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.av$d -> u.aly.av$d:
    u.aly.av$c a() -> a
    u.aly.dg b() -> b
u.aly.av$e -> u.aly.av$e:
    u.aly.av$e a -> a
    u.aly.av$e b -> b
    u.aly.av$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.av$e[] g -> g
    u.aly.av$e[] values() -> values
    u.aly.av$e valueOf(java.lang.String) -> valueOf
    u.aly.av$e a(int) -> a
    u.aly.av$e b(int) -> b
    u.aly.av$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.aw -> u.aly.aw:
    u.aly.aw a -> a
    u.aly.aw b -> b
    int c -> c
    u.aly.aw[] d -> d
    u.aly.aw[] values() -> values
    u.aly.aw valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.aw a(int) -> a
u.aly.ax -> u.aly.ax:
    u.aly.dd g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    u.aly.ct k -> k
    u.aly.ct l -> l
    java.util.Map m -> m
    java.lang.String a -> a
    java.util.Map b -> b
    long c -> c
    int d -> d
    long e -> e
    int n -> n
    int o -> o
    int p -> p
    byte q -> q
    u.aly.ax$e[] r -> r
    java.util.Map f -> f
    u.aly.ax a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.ax a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    int f() -> f
    void a(java.lang.String,u.aly.bj) -> a
    java.util.Map h() -> h
    u.aly.ax a(java.util.Map) -> a
    void i() -> i
    boolean j() -> j
    void b(boolean) -> b
    long k() -> k
    u.aly.ax a(long) -> a
    void l() -> l
    boolean m() -> m
    void c(boolean) -> c
    int n() -> n
    u.aly.ax a(int) -> a
    void o() -> o
    boolean p() -> p
    void d(boolean) -> d
    long q() -> q
    u.aly.ax b(long) -> b
    void r() -> r
    boolean s() -> s
    void e(boolean) -> e
    u.aly.ax$e c(int) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void t() -> t
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd u() -> u
    u.aly.ct v() -> v
    u.aly.ct w() -> w
    u.aly.ct x() -> x
    u.aly.ct y() -> y
    u.aly.ct z() -> z
u.aly.ax$1 -> u.aly.ax$1:
u.aly.ax$a -> u.aly.ax$a:
    void a(u.aly.cy,u.aly.ax) -> a
    void b(u.aly.cy,u.aly.ax) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ax$b -> u.aly.ax$b:
    u.aly.ax$a a() -> a
    u.aly.dg b() -> b
u.aly.ax$c -> u.aly.ax$c:
    void a(u.aly.cy,u.aly.ax) -> a
    void b(u.aly.cy,u.aly.ax) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ax$d -> u.aly.ax$d:
    u.aly.ax$c a() -> a
    u.aly.dg b() -> b
u.aly.ax$e -> u.aly.ax$e:
    u.aly.ax$e a -> a
    u.aly.ax$e b -> b
    u.aly.ax$e c -> c
    u.aly.ax$e d -> d
    u.aly.ax$e e -> e
    java.util.Map f -> f
    short g -> g
    java.lang.String h -> h
    u.aly.ax$e[] i -> i
    u.aly.ax$e[] values() -> values
    u.aly.ax$e valueOf(java.lang.String) -> valueOf
    u.aly.ax$e a(int) -> a
    u.aly.ax$e b(int) -> b
    u.aly.ax$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.ay -> u.aly.ay:
    u.aly.ay a -> a
    u.aly.ay b -> b
    u.aly.ay c -> c
    int d -> d
    u.aly.ay[] e -> e
    u.aly.ay[] values() -> values
    u.aly.ay valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.ay a(int) -> a
u.aly.az -> u.aly.az:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    int l -> l
    byte m -> m
    u.aly.az$e[] n -> n
    java.util.Map e -> e
    u.aly.az a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.az a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.az b(java.lang.String) -> b
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    java.lang.String j() -> j
    u.aly.az c(java.lang.String) -> c
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    long m() -> m
    u.aly.az a(long) -> a
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    u.aly.az$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> p
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd q() -> q
    u.aly.ct r() -> r
    u.aly.ct s() -> s
    u.aly.ct t() -> t
    u.aly.ct u() -> u
u.aly.az$1 -> u.aly.az$1:
u.aly.az$a -> u.aly.az$a:
    void a(u.aly.cy,u.aly.az) -> a
    void b(u.aly.cy,u.aly.az) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.az$b -> u.aly.az$b:
    u.aly.az$a a() -> a
    u.aly.dg b() -> b
u.aly.az$c -> u.aly.az$c:
    void a(u.aly.cy,u.aly.az) -> a
    void b(u.aly.cy,u.aly.az) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.az$d -> u.aly.az$d:
    u.aly.az$c a() -> a
    u.aly.dg b() -> b
u.aly.az$e -> u.aly.az$e:
    u.aly.az$e a -> a
    u.aly.az$e b -> b
    u.aly.az$e c -> c
    u.aly.az$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.az$e[] h -> h
    u.aly.az$e[] values() -> values
    u.aly.az$e valueOf(java.lang.String) -> valueOf
    u.aly.az$e a(int) -> a
    u.aly.az$e b(int) -> b
    u.aly.az$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.b -> u.aly.b:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String f() -> f
u.aly.ba -> u.aly.ba:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    int c -> c
    int j -> j
    int k -> k
    byte l -> l
    java.util.Map d -> d
    u.aly.ba a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.ba a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    long f() -> f
    u.aly.ba a(long) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    int j() -> j
    u.aly.ba a(int) -> a
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    u.aly.ba$e c(int) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> m
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd n() -> n
    u.aly.ct o() -> o
    u.aly.ct p() -> p
    u.aly.ct q() -> q
u.aly.ba$1 -> u.aly.ba$1:
u.aly.ba$a -> u.aly.ba$a:
    void a(u.aly.cy,u.aly.ba) -> a
    void b(u.aly.cy,u.aly.ba) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ba$b -> u.aly.ba$b:
    u.aly.ba$a a() -> a
    u.aly.dg b() -> b
u.aly.ba$c -> u.aly.ba$c:
    void a(u.aly.cy,u.aly.ba) -> a
    void b(u.aly.cy,u.aly.ba) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ba$d -> u.aly.ba$d:
    u.aly.ba$c a() -> a
    u.aly.dg b() -> b
u.aly.ba$e -> u.aly.ba$e:
    u.aly.ba$e a -> a
    u.aly.ba$e b -> b
    u.aly.ba$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ba$e[] g -> g
    u.aly.ba$e[] values() -> values
    u.aly.ba$e valueOf(java.lang.String) -> valueOf
    u.aly.ba$e a(int) -> a
    u.aly.ba$e b(int) -> b
    u.aly.ba$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bb -> u.aly.bb:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    java.util.List b -> b
    java.lang.String c -> c
    u.aly.bb$e[] j -> j
    java.util.Map d -> d
    u.aly.bb a() -> a
    void b() -> b
    int c() -> c
    void a(java.lang.String,u.aly.ba) -> a
    java.util.Map d() -> d
    u.aly.bb a(java.util.Map) -> a
    void e() -> e
    boolean f() -> f
    void a(boolean) -> a
    int h() -> h
    java.util.Iterator i() -> i
    void a(u.aly.az) -> a
    java.util.List j() -> j
    u.aly.bb a(java.util.List) -> a
    void k() -> k
    boolean l() -> l
    void b(boolean) -> b
    java.lang.String m() -> m
    u.aly.bb a(java.lang.String) -> a
    void n() -> n
    boolean o() -> o
    void c(boolean) -> c
    u.aly.bb$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> p
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd q() -> q
    u.aly.ct r() -> r
    u.aly.ct s() -> s
    u.aly.ct t() -> t
u.aly.bb$1 -> u.aly.bb$1:
u.aly.bb$a -> u.aly.bb$a:
    void a(u.aly.cy,u.aly.bb) -> a
    void b(u.aly.cy,u.aly.bb) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bb$b -> u.aly.bb$b:
    u.aly.bb$a a() -> a
    u.aly.dg b() -> b
u.aly.bb$c -> u.aly.bb$c:
    void a(u.aly.cy,u.aly.bb) -> a
    void b(u.aly.cy,u.aly.bb) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bb$d -> u.aly.bb$d:
    u.aly.bb$c a() -> a
    u.aly.dg b() -> b
u.aly.bb$e -> u.aly.bb$e:
    u.aly.bb$e a -> a
    u.aly.bb$e b -> b
    u.aly.bb$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bb$e[] g -> g
    u.aly.bb$e[] values() -> values
    u.aly.bb$e valueOf(java.lang.String) -> valueOf
    u.aly.bb$e a(int) -> a
    u.aly.bb$e b(int) -> b
    u.aly.bb$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bc -> u.aly.bc:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    int b -> b
    java.lang.String c -> c
    int j -> j
    byte k -> k
    java.util.Map d -> d
    u.aly.bc a() -> a
    void b() -> b
    int c() -> c
    void a(java.lang.String,u.aly.bd) -> a
    java.util.Map d() -> d
    u.aly.bc a(java.util.Map) -> a
    void e() -> e
    boolean f() -> f
    void a(boolean) -> a
    int h() -> h
    u.aly.bc a(int) -> a
    void i() -> i
    boolean j() -> j
    void b(boolean) -> b
    java.lang.String k() -> k
    u.aly.bc a(java.lang.String) -> a
    void l() -> l
    boolean m() -> m
    void c(boolean) -> c
    u.aly.bc$e c(int) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void n() -> n
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd o() -> o
    u.aly.ct p() -> p
    u.aly.ct q() -> q
    u.aly.ct r() -> r
u.aly.bc$1 -> u.aly.bc$1:
u.aly.bc$a -> u.aly.bc$a:
    void a(u.aly.cy,u.aly.bc) -> a
    void b(u.aly.cy,u.aly.bc) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bc$b -> u.aly.bc$b:
    u.aly.bc$a a() -> a
    u.aly.dg b() -> b
u.aly.bc$c -> u.aly.bc$c:
    void a(u.aly.cy,u.aly.bc) -> a
    void b(u.aly.cy,u.aly.bc) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bc$d -> u.aly.bc$d:
    u.aly.bc$c a() -> a
    u.aly.dg b() -> b
u.aly.bc$e -> u.aly.bc$e:
    u.aly.bc$e a -> a
    u.aly.bc$e b -> b
    u.aly.bc$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bc$e[] g -> g
    u.aly.bc$e[] values() -> values
    u.aly.bc$e valueOf(java.lang.String) -> valueOf
    u.aly.bc$e a(int) -> a
    u.aly.bc$e b(int) -> b
    u.aly.bc$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bd -> u.aly.bd:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    java.lang.String c -> c
    int j -> j
    byte k -> k
    u.aly.bd$e[] l -> l
    java.util.Map d -> d
    u.aly.bd a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.bd a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    long f() -> f
    u.aly.bd a(long) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    java.lang.String j() -> j
    u.aly.bd b(java.lang.String) -> b
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    u.aly.bd$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> m
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd n() -> n
    u.aly.ct o() -> o
    u.aly.ct p() -> p
    u.aly.ct q() -> q
u.aly.bd$1 -> u.aly.bd$1:
u.aly.bd$a -> u.aly.bd$a:
    void a(u.aly.cy,u.aly.bd) -> a
    void b(u.aly.cy,u.aly.bd) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bd$b -> u.aly.bd$b:
    u.aly.bd$a a() -> a
    u.aly.dg b() -> b
u.aly.bd$c -> u.aly.bd$c:
    void a(u.aly.cy,u.aly.bd) -> a
    void b(u.aly.cy,u.aly.bd) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bd$d -> u.aly.bd$d:
    u.aly.bd$c a() -> a
    u.aly.dg b() -> b
u.aly.bd$e -> u.aly.bd$e:
    u.aly.bd$e a -> a
    u.aly.bd$e b -> b
    u.aly.bd$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bd$e[] g -> g
    u.aly.bd$e[] values() -> values
    u.aly.bd$e valueOf(java.lang.String) -> valueOf
    u.aly.bd$e a(int) -> a
    u.aly.bd$e b(int) -> b
    u.aly.bd$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.be -> u.aly.be:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    u.aly.be$e[] l -> l
    java.util.Map e -> e
    u.aly.be a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.be a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    int f() -> f
    java.util.Iterator h() -> h
    void a(u.aly.av) -> a
    java.util.List i() -> i
    u.aly.be a(java.util.List) -> a
    void j() -> j
    boolean k() -> k
    void b(boolean) -> b
    int l() -> l
    java.util.Iterator m() -> m
    void a(u.aly.ax) -> a
    java.util.List n() -> n
    u.aly.be b(java.util.List) -> b
    void o() -> o
    boolean p() -> p
    void c(boolean) -> c
    int q() -> q
    java.util.Iterator r() -> r
    void b(u.aly.ax) -> b
    java.util.List s() -> s
    u.aly.be c(java.util.List) -> c
    void t() -> t
    boolean u() -> u
    void d(boolean) -> d
    u.aly.be$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void v() -> v
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd w() -> w
    u.aly.ct x() -> x
    u.aly.ct y() -> y
    u.aly.ct z() -> z
    u.aly.ct A() -> A
u.aly.be$1 -> u.aly.be$1:
u.aly.be$a -> u.aly.be$a:
    void a(u.aly.cy,u.aly.be) -> a
    void b(u.aly.cy,u.aly.be) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.be$b -> u.aly.be$b:
    u.aly.be$a a() -> a
    u.aly.dg b() -> b
u.aly.be$c -> u.aly.be$c:
    void a(u.aly.cy,u.aly.be) -> a
    void b(u.aly.cy,u.aly.be) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.be$d -> u.aly.be$d:
    u.aly.be$c a() -> a
    u.aly.dg b() -> b
u.aly.be$e -> u.aly.be$e:
    u.aly.be$e a -> a
    u.aly.be$e b -> b
    u.aly.be$e c -> c
    u.aly.be$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.be$e[] h -> h
    u.aly.be$e[] values() -> values
    u.aly.be$e valueOf(java.lang.String) -> valueOf
    u.aly.be$e a(int) -> a
    u.aly.be$e b(int) -> b
    u.aly.be$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bf -> u.aly.bf:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    int a -> a
    long b -> b
    int h -> h
    int i -> i
    byte j -> j
    java.util.Map c -> c
    u.aly.bf a() -> a
    void b() -> b
    int c() -> c
    u.aly.bf a(int) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    long f() -> f
    u.aly.bf a(long) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.bf$e c(int) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> j
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd k() -> k
    u.aly.ct l() -> l
    u.aly.ct m() -> m
u.aly.bf$1 -> u.aly.bf$1:
u.aly.bf$a -> u.aly.bf$a:
    void a(u.aly.cy,u.aly.bf) -> a
    void b(u.aly.cy,u.aly.bf) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bf$b -> u.aly.bf$b:
    u.aly.bf$a a() -> a
    u.aly.dg b() -> b
u.aly.bf$c -> u.aly.bf$c:
    void a(u.aly.cy,u.aly.bf) -> a
    void b(u.aly.cy,u.aly.bf) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bf$d -> u.aly.bf$d:
    u.aly.bf$c a() -> a
    u.aly.dg b() -> b
u.aly.bf$e -> u.aly.bf$e:
    u.aly.bf$e a -> a
    u.aly.bf$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bf$e[] f -> f
    u.aly.bf$e[] values() -> values
    u.aly.bf$e valueOf(java.lang.String) -> valueOf
    u.aly.bf$e a(int) -> a
    u.aly.bf$e b(int) -> b
    u.aly.bf$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bg -> u.aly.bg:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    double a -> a
    double b -> b
    long c -> c
    int j -> j
    int k -> k
    int l -> l
    byte m -> m
    java.util.Map d -> d
    u.aly.bg a() -> a
    void b() -> b
    double c() -> c
    u.aly.bg a(double) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    double f() -> f
    u.aly.bg b(double) -> b
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    long j() -> j
    u.aly.bg a(long) -> a
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    u.aly.bg$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> m
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd n() -> n
    u.aly.ct o() -> o
    u.aly.ct p() -> p
    u.aly.ct q() -> q
u.aly.bg$1 -> u.aly.bg$1:
u.aly.bg$a -> u.aly.bg$a:
    void a(u.aly.cy,u.aly.bg) -> a
    void b(u.aly.cy,u.aly.bg) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bg$b -> u.aly.bg$b:
    u.aly.bg$a a() -> a
    u.aly.dg b() -> b
u.aly.bg$c -> u.aly.bg$c:
    void a(u.aly.cy,u.aly.bg) -> a
    void b(u.aly.cy,u.aly.bg) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bg$d -> u.aly.bg$d:
    u.aly.bg$c a() -> a
    u.aly.dg b() -> b
u.aly.bg$e -> u.aly.bg$e:
    u.aly.bg$e a -> a
    u.aly.bg$e b -> b
    u.aly.bg$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bg$e[] g -> g
    u.aly.bg$e[] values() -> values
    u.aly.bg$e valueOf(java.lang.String) -> valueOf
    u.aly.bg$e a(int) -> a
    u.aly.bg$e b(int) -> b
    u.aly.bg$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bh -> u.aly.bh:
    u.aly.dd l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    java.util.Map w -> w
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    double d -> d
    double e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    u.aly.ao i -> i
    java.lang.String j -> j
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    byte B -> B
    u.aly.bh$e[] C -> C
    java.util.Map k -> k
    u.aly.bh a() -> a
    void b() -> b
    int c() -> c
    u.aly.bh a(int) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.bh a(java.lang.String) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    java.lang.String j() -> j
    u.aly.bh b(java.lang.String) -> b
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    double m() -> m
    u.aly.bh a(double) -> a
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    double p() -> p
    u.aly.bh b(double) -> b
    void q() -> q
    boolean r() -> r
    void e(boolean) -> e
    java.lang.String s() -> s
    u.aly.bh c(java.lang.String) -> c
    void t() -> t
    boolean u() -> u
    void f(boolean) -> f
    int v() -> v
    u.aly.bh c(int) -> c
    void w() -> w
    boolean x() -> x
    void g(boolean) -> g
    java.lang.String y() -> y
    u.aly.bh d(java.lang.String) -> d
    void z() -> z
    boolean A() -> A
    void h(boolean) -> h
    u.aly.ao B() -> B
    u.aly.bh a(u.aly.ao) -> a
    void C() -> C
    boolean D() -> D
    void i(boolean) -> i
    java.lang.String E() -> E
    u.aly.bh e(java.lang.String) -> e
    void F() -> F
    boolean G() -> G
    void j(boolean) -> j
    u.aly.bh$e d(int) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void H() -> H
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd I() -> I
    u.aly.ct J() -> J
    u.aly.ct K() -> K
    u.aly.ct L() -> L
    u.aly.ct M() -> M
    u.aly.ct N() -> N
    u.aly.ct O() -> O
    u.aly.ct P() -> P
    u.aly.ct Q() -> Q
    u.aly.ct R() -> R
    u.aly.ct S() -> S
u.aly.bh$1 -> u.aly.bh$1:
u.aly.bh$a -> u.aly.bh$a:
    void a(u.aly.cy,u.aly.bh) -> a
    void b(u.aly.cy,u.aly.bh) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bh$b -> u.aly.bh$b:
    u.aly.bh$a a() -> a
    u.aly.dg b() -> b
u.aly.bh$c -> u.aly.bh$c:
    void a(u.aly.cy,u.aly.bh) -> a
    void b(u.aly.cy,u.aly.bh) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bh$d -> u.aly.bh$d:
    u.aly.bh$c a() -> a
    u.aly.dg b() -> b
u.aly.bh$e -> u.aly.bh$e:
    u.aly.bh$e a -> a
    u.aly.bh$e b -> b
    u.aly.bh$e c -> c
    u.aly.bh$e d -> d
    u.aly.bh$e e -> e
    u.aly.bh$e f -> f
    u.aly.bh$e g -> g
    u.aly.bh$e h -> h
    u.aly.bh$e i -> i
    u.aly.bh$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.bh$e[] n -> n
    u.aly.bh$e[] values() -> values
    u.aly.bh$e valueOf(java.lang.String) -> valueOf
    u.aly.bh$e a(int) -> a
    u.aly.bh$e b(int) -> b
    u.aly.bh$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bi -> u.aly.bi:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    long b -> b
    int h -> h
    byte i -> i
    java.util.Map c -> c
    u.aly.bi a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.bi a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    long f() -> f
    u.aly.bi a(long) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.bi$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> j
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd k() -> k
    u.aly.ct l() -> l
    u.aly.ct m() -> m
u.aly.bi$1 -> u.aly.bi$1:
u.aly.bi$a -> u.aly.bi$a:
    void a(u.aly.cy,u.aly.bi) -> a
    void b(u.aly.cy,u.aly.bi) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bi$b -> u.aly.bi$b:
    u.aly.bi$a a() -> a
    u.aly.dg b() -> b
u.aly.bi$c -> u.aly.bi$c:
    void a(u.aly.cy,u.aly.bi) -> a
    void b(u.aly.cy,u.aly.bi) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bi$d -> u.aly.bi$d:
    u.aly.bi$c a() -> a
    u.aly.dg b() -> b
u.aly.bi$e -> u.aly.bi$e:
    u.aly.bi$e a -> a
    u.aly.bi$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bi$e[] f -> f
    u.aly.bi$e[] values() -> values
    u.aly.bi$e valueOf(java.lang.String) -> valueOf
    u.aly.bi$e a(int) -> a
    u.aly.bi$e b(int) -> b
    u.aly.bi$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bj -> u.aly.bj:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map a -> a
    u.aly.bj a() -> a
    u.aly.bj a(java.lang.String) -> a
    u.aly.bj a(long) -> a
    void a(u.aly.bj$a,java.lang.Object) -> a
    java.lang.Object a(u.aly.cy,u.aly.ct) -> a
    void c(u.aly.cy) -> c
    java.lang.Object a(u.aly.cy,short) -> a
    void d(u.aly.cy) -> d
    u.aly.ct a(u.aly.bj$a) -> a
    u.aly.dd c() -> c
    u.aly.bj$a a(short) -> a
    u.aly.bj$a a(int) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    long e() -> e
    void b(long) -> b
    boolean f() -> f
    boolean h() -> h
    boolean equals(java.lang.Object) -> equals
    boolean a(u.aly.bj) -> a
    int hashCode() -> hashCode
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.cg b(short) -> b
    u.aly.ct a(u.aly.cg) -> a
    void a(u.aly.cg,java.lang.Object) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
u.aly.bj$1 -> u.aly.bj$1:
    int[] a -> a
u.aly.bj$a -> u.aly.bj$a:
    u.aly.bj$a a -> a
    u.aly.bj$a b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bj$a[] f -> f
    u.aly.bj$a[] values() -> values
    u.aly.bj$a valueOf(java.lang.String) -> valueOf
    u.aly.bj$a a(int) -> a
    u.aly.bj$a b(int) -> b
    u.aly.bj$a a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bk -> u.aly.bk:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    int h -> h
    int i -> i
    byte j -> j
    java.util.Map c -> c
    u.aly.bk a() -> a
    void b() -> b
    int c() -> c
    u.aly.bk a(int) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    int f() -> f
    u.aly.bk c(int) -> c
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.bk$e d(int) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> j
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd k() -> k
    u.aly.ct l() -> l
    u.aly.ct m() -> m
u.aly.bk$1 -> u.aly.bk$1:
u.aly.bk$a -> u.aly.bk$a:
    void a(u.aly.cy,u.aly.bk) -> a
    void b(u.aly.cy,u.aly.bk) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bk$b -> u.aly.bk$b:
    u.aly.bk$a a() -> a
    u.aly.dg b() -> b
u.aly.bk$c -> u.aly.bk$c:
    void a(u.aly.cy,u.aly.bk) -> a
    void b(u.aly.cy,u.aly.bk) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bk$d -> u.aly.bk$d:
    u.aly.bk$c a() -> a
    u.aly.dg b() -> b
u.aly.bk$e -> u.aly.bk$e:
    u.aly.bk$e a -> a
    u.aly.bk$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bk$e[] f -> f
    u.aly.bk$e[] values() -> values
    u.aly.bk$e valueOf(java.lang.String) -> valueOf
    u.aly.bk$e a(int) -> a
    u.aly.bk$e b(int) -> b
    u.aly.bk$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bl -> u.aly.bl:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    int a -> a
    java.lang.String b -> b
    u.aly.bc c -> c
    int j -> j
    byte k -> k
    u.aly.bl$e[] l -> l
    java.util.Map d -> d
    u.aly.bl a() -> a
    void b() -> b
    int c() -> c
    u.aly.bl a(int) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.bl a(java.lang.String) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.bc j() -> j
    u.aly.bl a(u.aly.bc) -> a
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    u.aly.bl$e c(int) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> m
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd n() -> n
    u.aly.ct o() -> o
    u.aly.ct p() -> p
    u.aly.ct q() -> q
u.aly.bl$1 -> u.aly.bl$1:
u.aly.bl$a -> u.aly.bl$a:
    void a(u.aly.cy,u.aly.bl) -> a
    void b(u.aly.cy,u.aly.bl) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bl$b -> u.aly.bl$b:
    u.aly.bl$a a() -> a
    u.aly.dg b() -> b
u.aly.bl$c -> u.aly.bl$c:
    void a(u.aly.cy,u.aly.bl) -> a
    void b(u.aly.cy,u.aly.bl) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bl$d -> u.aly.bl$d:
    u.aly.bl$c a() -> a
    u.aly.dg b() -> b
u.aly.bl$e -> u.aly.bl$e:
    u.aly.bl$e a -> a
    u.aly.bl$e b -> b
    u.aly.bl$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bl$e[] g -> g
    u.aly.bl$e[] values() -> values
    u.aly.bl$e valueOf(java.lang.String) -> valueOf
    u.aly.bl$e a(int) -> a
    u.aly.bl$e b(int) -> b
    u.aly.bl$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bm -> u.aly.bm:
    u.aly.bm a -> a
    u.aly.bm b -> b
    u.aly.bm c -> c
    u.aly.bm d -> d
    int e -> e
    u.aly.bm[] f -> f
    u.aly.bm[] values() -> values
    u.aly.bm valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.bm a(int) -> a
u.aly.bn -> u.aly.bn:
    u.aly.dd i -> i
    u.aly.ct j -> j
    u.aly.ct k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    java.util.Map q -> q
    java.lang.String a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.List e -> e
    java.util.List f -> f
    u.aly.bo g -> g
    int r -> r
    int s -> s
    int t -> t
    byte u -> u
    u.aly.bn$e[] v -> v
    java.util.Map h -> h
    u.aly.bn a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.bn a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    long f() -> f
    u.aly.bn a(long) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    long j() -> j
    u.aly.bn b(long) -> b
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    long m() -> m
    u.aly.bn c(long) -> c
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    int p() -> p
    java.util.Iterator q() -> q
    void a(u.aly.bi) -> a
    java.util.List r() -> r
    u.aly.bn a(java.util.List) -> a
    void s() -> s
    boolean t() -> t
    void e(boolean) -> e
    int u() -> u
    java.util.Iterator v() -> v
    void a(u.aly.bg) -> a
    java.util.List w() -> w
    u.aly.bn b(java.util.List) -> b
    void x() -> x
    boolean y() -> y
    void f(boolean) -> f
    u.aly.bo z() -> z
    u.aly.bn a(u.aly.bo) -> a
    void A() -> A
    boolean B() -> B
    void g(boolean) -> g
    u.aly.bn$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void C() -> C
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd D() -> D
    u.aly.ct E() -> E
    u.aly.ct F() -> F
    u.aly.ct G() -> G
    u.aly.ct H() -> H
    u.aly.ct I() -> I
    u.aly.ct J() -> J
    u.aly.ct K() -> K
u.aly.bn$1 -> u.aly.bn$1:
u.aly.bn$a -> u.aly.bn$a:
    void a(u.aly.cy,u.aly.bn) -> a
    void b(u.aly.cy,u.aly.bn) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bn$b -> u.aly.bn$b:
    u.aly.bn$a a() -> a
    u.aly.dg b() -> b
u.aly.bn$c -> u.aly.bn$c:
    void a(u.aly.cy,u.aly.bn) -> a
    void b(u.aly.cy,u.aly.bn) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bn$d -> u.aly.bn$d:
    u.aly.bn$c a() -> a
    u.aly.dg b() -> b
u.aly.bn$e -> u.aly.bn$e:
    u.aly.bn$e a -> a
    u.aly.bn$e b -> b
    u.aly.bn$e c -> c
    u.aly.bn$e d -> d
    u.aly.bn$e e -> e
    u.aly.bn$e f -> f
    u.aly.bn$e g -> g
    java.util.Map h -> h
    short i -> i
    java.lang.String j -> j
    u.aly.bn$e[] k -> k
    u.aly.bn$e[] values() -> values
    u.aly.bn$e valueOf(java.lang.String) -> valueOf
    u.aly.bn$e a(int) -> a
    u.aly.bn$e b(int) -> b
    u.aly.bn$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bo -> u.aly.bo:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    int h -> h
    int i -> i
    byte j -> j
    java.util.Map c -> c
    u.aly.bo a() -> a
    void b() -> b
    int c() -> c
    u.aly.bo a(int) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    int f() -> f
    u.aly.bo c(int) -> c
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.bo$e d(int) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> j
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd k() -> k
    u.aly.ct l() -> l
    u.aly.ct m() -> m
u.aly.bo$1 -> u.aly.bo$1:
u.aly.bo$a -> u.aly.bo$a:
    void a(u.aly.cy,u.aly.bo) -> a
    void b(u.aly.cy,u.aly.bo) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bo$b -> u.aly.bo$b:
    u.aly.bo$a a() -> a
    u.aly.dg b() -> b
u.aly.bo$c -> u.aly.bo$c:
    void a(u.aly.cy,u.aly.bo) -> a
    void b(u.aly.cy,u.aly.bo) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bo$d -> u.aly.bo$d:
    u.aly.bo$c a() -> a
    u.aly.dg b() -> b
u.aly.bo$e -> u.aly.bo$e:
    u.aly.bo$e a -> a
    u.aly.bo$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bo$e[] f -> f
    u.aly.bo$e[] values() -> values
    u.aly.bo$e valueOf(java.lang.String) -> valueOf
    u.aly.bo$e a(int) -> a
    u.aly.bo$e b(int) -> b
    u.aly.bo$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bp -> u.aly.bp:
    u.aly.dd n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    u.aly.ct w -> w
    u.aly.ct x -> x
    u.aly.ct y -> y
    u.aly.ct z -> z
    java.util.Map A -> A
    u.aly.as a -> a
    u.aly.ar b -> b
    u.aly.au c -> c
    u.aly.bh d -> d
    u.aly.ap e -> e
    java.util.List f -> f
    java.util.List g -> g
    u.aly.bc h -> h
    u.aly.bb i -> i
    u.aly.aq j -> j
    u.aly.at k -> k
    java.util.Map l -> l
    u.aly.bp$e[] B -> B
    java.util.Map m -> m
    u.aly.bp a() -> a
    void b() -> b
    u.aly.as c() -> c
    u.aly.bp a(u.aly.as) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    u.aly.ar f() -> f
    u.aly.bp a(u.aly.ar) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.au j() -> j
    u.aly.bp a(u.aly.au) -> a
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    u.aly.bh m() -> m
    u.aly.bp a(u.aly.bh) -> a
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    u.aly.ap p() -> p
    u.aly.bp a(u.aly.ap) -> a
    void q() -> q
    boolean r() -> r
    void e(boolean) -> e
    int s() -> s
    java.util.Iterator t() -> t
    void a(u.aly.be) -> a
    java.util.List u() -> u
    u.aly.bp a(java.util.List) -> a
    void v() -> v
    boolean w() -> w
    void f(boolean) -> f
    int x() -> x
    java.util.Iterator y() -> y
    void a(u.aly.bn) -> a
    java.util.List z() -> z
    u.aly.bp b(java.util.List) -> b
    void A() -> A
    boolean B() -> B
    void g(boolean) -> g
    u.aly.bc C() -> C
    u.aly.bp a(u.aly.bc) -> a
    void D() -> D
    boolean E() -> E
    void h(boolean) -> h
    u.aly.bb F() -> F
    u.aly.bp a(u.aly.bb) -> a
    void G() -> G
    boolean H() -> H
    void i(boolean) -> i
    u.aly.aq I() -> I
    u.aly.bp a(u.aly.aq) -> a
    void J() -> J
    boolean K() -> K
    void j(boolean) -> j
    u.aly.at L() -> L
    u.aly.bp a(u.aly.at) -> a
    void M() -> M
    boolean N() -> N
    void k(boolean) -> k
    int O() -> O
    void a(java.lang.String,int) -> a
    java.util.Map P() -> P
    u.aly.bp a(java.util.Map) -> a
    void Q() -> Q
    boolean R() -> R
    void l(boolean) -> l
    u.aly.bp$e a(int) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void S() -> S
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd T() -> T
    u.aly.ct U() -> U
    u.aly.ct V() -> V
    u.aly.ct W() -> W
    u.aly.ct X() -> X
    u.aly.ct Y() -> Y
    u.aly.ct Z() -> Z
    u.aly.ct aa() -> aa
    u.aly.ct ab() -> ab
    u.aly.ct ac() -> ac
    u.aly.ct ad() -> ad
    u.aly.ct ae() -> ae
    u.aly.ct af() -> af
u.aly.bp$1 -> u.aly.bp$1:
u.aly.bp$a -> u.aly.bp$a:
    void a(u.aly.cy,u.aly.bp) -> a
    void b(u.aly.cy,u.aly.bp) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bp$b -> u.aly.bp$b:
    u.aly.bp$a a() -> a
    u.aly.dg b() -> b
u.aly.bp$c -> u.aly.bp$c:
    void a(u.aly.cy,u.aly.bp) -> a
    void b(u.aly.cy,u.aly.bp) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bp$d -> u.aly.bp$d:
    u.aly.bp$c a() -> a
    u.aly.dg b() -> b
u.aly.bp$e -> u.aly.bp$e:
    u.aly.bp$e a -> a
    u.aly.bp$e b -> b
    u.aly.bp$e c -> c
    u.aly.bp$e d -> d
    u.aly.bp$e e -> e
    u.aly.bp$e f -> f
    u.aly.bp$e g -> g
    u.aly.bp$e h -> h
    u.aly.bp$e i -> i
    u.aly.bp$e j -> j
    u.aly.bp$e k -> k
    u.aly.bp$e l -> l
    java.util.Map m -> m
    short n -> n
    java.lang.String o -> o
    u.aly.bp$e[] p -> p
    u.aly.bp$e[] values() -> values
    u.aly.bp$e valueOf(java.lang.String) -> valueOf
    u.aly.bp$e a(int) -> a
    u.aly.bp$e b(int) -> b
    u.aly.bp$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bq -> u.aly.bq:
    u.aly.dd l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.nio.ByteBuffer g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    byte B -> B
    u.aly.bq$e[] C -> C
    java.util.Map k -> k
    u.aly.bq a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.bq a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.bq b(java.lang.String) -> b
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    java.lang.String j() -> j
    u.aly.bq c(java.lang.String) -> c
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    int m() -> m
    u.aly.bq a(int) -> a
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    int p() -> p
    u.aly.bq c(int) -> c
    void q() -> q
    boolean r() -> r
    void e(boolean) -> e
    int s() -> s
    u.aly.bq d(int) -> d
    void t() -> t
    boolean u() -> u
    void f(boolean) -> f
    byte[] v() -> v
    java.nio.ByteBuffer w() -> w
    u.aly.bq a(byte[]) -> a
    u.aly.bq a(java.nio.ByteBuffer) -> a
    void x() -> x
    boolean y() -> y
    void g(boolean) -> g
    java.lang.String z() -> z
    u.aly.bq d(java.lang.String) -> d
    void A() -> A
    boolean B() -> B
    void h(boolean) -> h
    java.lang.String C() -> C
    u.aly.bq e(java.lang.String) -> e
    void D() -> D
    boolean E() -> E
    void i(boolean) -> i
    int F() -> F
    u.aly.bq e(int) -> e
    void G() -> G
    boolean H() -> H
    void j(boolean) -> j
    u.aly.bq$e f(int) -> f
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void I() -> I
    void a(java.io.ObjectOutputStream) -> a
    void a(java.io.ObjectInputStream) -> a
    u.aly.bz g() -> g
    u.aly.cg b(int) -> b
    u.aly.dd J() -> J
    u.aly.ct K() -> K
    u.aly.ct L() -> L
    u.aly.ct M() -> M
    u.aly.ct N() -> N
    u.aly.ct O() -> O
    u.aly.ct P() -> P
    u.aly.ct Q() -> Q
    u.aly.ct R() -> R
    u.aly.ct S() -> S
    u.aly.ct T() -> T
u.aly.bq$1 -> u.aly.bq$1:
u.aly.bq$a -> u.aly.bq$a:
    void a(u.aly.cy,u.aly.bq) -> a
    void b(u.aly.cy,u.aly.bq) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bq$b -> u.aly.bq$b:
    u.aly.bq$a a() -> a
    u.aly.dg b() -> b
u.aly.bq$c -> u.aly.bq$c:
    void a(u.aly.cy,u.aly.bq) -> a
    void b(u.aly.cy,u.aly.bq) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bq$d -> u.aly.bq$d:
    u.aly.bq$c a() -> a
    u.aly.dg b() -> b
u.aly.bq$e -> u.aly.bq$e:
    u.aly.bq$e a -> a
    u.aly.bq$e b -> b
    u.aly.bq$e c -> c
    u.aly.bq$e d -> d
    u.aly.bq$e e -> e
    u.aly.bq$e f -> f
    u.aly.bq$e g -> g
    u.aly.bq$e h -> h
    u.aly.bq$e i -> i
    u.aly.bq$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.bq$e[] n -> n
    u.aly.bq$e[] values() -> values
    u.aly.bq$e valueOf(java.lang.String) -> valueOf
    u.aly.bq$e a(int) -> a
    u.aly.bq$e b(int) -> b
    u.aly.bq$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.br -> u.aly.br:
    java.lang.String a(android.content.Context) -> a
    u.aly.br$a b(android.content.Context) -> b
u.aly.br$1 -> u.aly.br$1:
u.aly.br$a -> u.aly.br$a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String b() -> b
    boolean a() -> a
    java.lang.String a(u.aly.br$a) -> a
u.aly.br$b -> u.aly.br$b:
    boolean a -> a
    java.util.concurrent.LinkedBlockingQueue b -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    android.os.IBinder a() -> a
u.aly.br$c -> u.aly.br$c:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    boolean a(boolean) -> a
u.aly.bs -> u.aly.bs:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[]) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    byte[] b(byte[]) -> b
u.aly.bt -> u.aly.bt:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    boolean a(java.lang.String,android.content.Context) -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String[] a(javax.microedition.khronos.opengles.GL10) -> a
    java.lang.String d() -> d
    java.lang.String b(java.lang.String) -> b
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String j(android.content.Context) -> j
    java.lang.String[] k(android.content.Context) -> k
    boolean l(android.content.Context) -> l
    boolean m(android.content.Context) -> m
    boolean b() -> b
    int n(android.content.Context) -> n
    java.lang.String[] o(android.content.Context) -> o
    java.util.Locale A(android.content.Context) -> A
    java.lang.String p(android.content.Context) -> p
    java.lang.String q(android.content.Context) -> q
    java.lang.String B(android.content.Context) -> B
    java.lang.String r(android.content.Context) -> r
    int[] s(android.content.Context) -> s
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String t(android.content.Context) -> t
    java.lang.String a(java.util.Date) -> a
    java.lang.String c() -> c
    java.util.Date a(java.lang.String) -> a
    int a(java.util.Date,java.util.Date) -> a
    java.lang.String u(android.content.Context) -> u
    java.lang.String v(android.content.Context) -> v
    java.lang.String w(android.content.Context) -> w
    java.lang.String a(byte[]) -> a
    java.lang.String x(android.content.Context) -> x
    boolean y(android.content.Context) -> y
    java.lang.String z(android.content.Context) -> z
u.aly.bu -> u.aly.bu:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.io.File) -> a
    java.lang.String a(android.content.Context,long) -> a
    java.lang.String c(java.lang.String) -> c
    void a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    boolean d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    java.lang.String a() -> a
    java.lang.String a(java.util.Date) -> a
    java.lang.String a(java.io.InputStream) -> a
    byte[] b(java.io.InputStream) -> b
    void a(java.io.File,byte[]) -> a
    void a(java.io.File,java.lang.String) -> a
    void c(java.io.InputStream) -> c
    void a(java.io.OutputStream) -> a
u.aly.bv -> u.aly.bv:
    boolean a -> a
    java.lang.String b -> b
    void a(java.util.Locale,java.lang.String,java.lang.Object[]) -> a
    void b(java.util.Locale,java.lang.String,java.lang.Object[]) -> b
    void c(java.util.Locale,java.lang.String,java.lang.Object[]) -> c
    void d(java.util.Locale,java.lang.String,java.lang.Object[]) -> d
    void e(java.util.Locale,java.lang.String,java.lang.Object[]) -> e
    void a(java.lang.String,java.lang.Object[]) -> a
    void b(java.lang.String,java.lang.Object[]) -> b
    void c(java.lang.String,java.lang.Object[]) -> c
    void d(java.lang.String,java.lang.Object[]) -> d
    void e(java.lang.String,java.lang.Object[]) -> e
    void a(java.lang.Throwable) -> a
    void b(java.lang.Throwable) -> b
    void c(java.lang.Throwable) -> c
    void d(java.lang.Throwable) -> d
    void e(java.lang.Throwable) -> e
    void a(java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.Throwable) -> b
    void c(java.lang.String,java.lang.Throwable) -> c
    void d(java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.Throwable) -> e
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void c(java.lang.String,java.lang.String,java.lang.Throwable) -> c
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
u.aly.bw -> u.aly.bw:
    void a(int,byte[]) -> a
    void a(int,byte[],int) -> a
    int a(byte[]) -> a
    int a(byte[],int) -> a
    boolean a(byte,int) -> a
    boolean a(short,int) -> a
    boolean a(int,int) -> a
    boolean a(long,int) -> a
    byte b(byte,int) -> b
    short b(short,int) -> b
    int b(int,int) -> b
    long b(long,int) -> b
    byte a(byte,int,boolean) -> a
    short a(short,int,boolean) -> a
    int a(int,int,boolean) -> a
    long a(long,int,boolean) -> a
u.aly.bx -> u.aly.bx:
    short[] a -> a
    int b -> b
    short a() -> a
    void a(short) -> a
    void d() -> d
    short b() -> b
    void c() -> c
    java.lang.String toString() -> toString
u.aly.by -> u.aly.by:
    u.aly.dd j -> j
    u.aly.ct k -> k
    u.aly.ct l -> l
    long m -> m
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int a() -> a
    u.aly.by a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
u.aly.bz -> u.aly.bz:
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    u.aly.cg b(int) -> b
    u.aly.bz g() -> g
    void b() -> b
u.aly.c -> u.aly.c:
    byte[] a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    byte[] f -> f
    byte[] g -> g
    byte[] h -> h
    int i -> i
    int j -> j
    int k -> k
    byte[] l -> l
    byte[] m -> m
    boolean n -> n
    java.lang.String a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void a(int) -> a
    void a(boolean) -> a
    u.aly.c a(android.content.Context,java.lang.String,byte[]) -> a
    u.aly.c b(android.content.Context,java.lang.String,byte[]) -> b
    void b() -> b
    byte[] a(byte[],int) -> a
    byte[] d() -> d
    byte[] e() -> e
    byte[] c() -> c
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
u.aly.ca -> u.aly.ca:
    java.util.Comparator a -> a
    int a(java.lang.Object,java.lang.Object) -> a
    int a(boolean,boolean) -> a
    int a(byte,byte) -> a
    int a(short,short) -> a
    int a(int,int) -> a
    int a(long,long) -> a
    int a(double,double) -> a
    int a(java.lang.String,java.lang.String) -> a
    int a(byte[],byte[]) -> a
    int a(java.lang.Comparable,java.lang.Comparable) -> a
    int a(java.util.List,java.util.List) -> a
    int a(java.util.Set,java.util.Set) -> a
    int a(java.util.Map,java.util.Map) -> a
    void a(java.nio.ByteBuffer,java.lang.StringBuilder) -> a
    java.lang.String a(byte) -> a
    byte[] a(java.nio.ByteBuffer) -> a
    boolean b(java.nio.ByteBuffer) -> b
    int a(java.nio.ByteBuffer,byte[],int) -> a
    java.nio.ByteBuffer c(java.nio.ByteBuffer) -> c
    java.nio.ByteBuffer d(java.nio.ByteBuffer) -> d
    byte[] a(byte[]) -> a
u.aly.ca$1 -> u.aly.ca$1:
u.aly.ca$a -> u.aly.ca$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
u.aly.cb -> u.aly.cb:
    byte[] a() -> a
    int b() -> b
u.aly.cc -> u.aly.cc:
    u.aly.cy a -> a
    u.aly.dl b -> b
    void a(u.aly.bz,byte[]) -> a
    void a(u.aly.bz,java.lang.String,java.lang.String) -> a
    void a(u.aly.bz,byte[],u.aly.cg,u.aly.cg[]) -> a
    java.lang.Boolean a(byte[],u.aly.cg,u.aly.cg[]) -> a
    java.lang.Byte b(byte[],u.aly.cg,u.aly.cg[]) -> b
    java.lang.Double c(byte[],u.aly.cg,u.aly.cg[]) -> c
    java.lang.Short d(byte[],u.aly.cg,u.aly.cg[]) -> d
    java.lang.Integer e(byte[],u.aly.cg,u.aly.cg[]) -> e
    java.lang.Long f(byte[],u.aly.cg,u.aly.cg[]) -> f
    java.lang.String g(byte[],u.aly.cg,u.aly.cg[]) -> g
    java.nio.ByteBuffer h(byte[],u.aly.cg,u.aly.cg[]) -> h
    java.lang.Short i(byte[],u.aly.cg,u.aly.cg[]) -> i
    java.lang.Object a(byte,byte[],u.aly.cg,u.aly.cg[]) -> a
    u.aly.ct j(byte[],u.aly.cg,u.aly.cg[]) -> j
    void a(u.aly.bz,java.lang.String) -> a
u.aly.cd -> u.aly.cd:
    int a() -> a
u.aly.ce -> u.aly.ce:
    u.aly.cd a(java.lang.Class,int) -> a
u.aly.cf -> u.aly.cf:
    long a -> a
u.aly.cg -> u.aly.cg:
    short a() -> a
    java.lang.String b() -> b
u.aly.ch -> u.aly.ch:
    byte a -> a
    byte b -> b
    byte c -> c
u.aly.ci -> u.aly.ci:
    java.io.ByteArrayOutputStream a -> a
    u.aly.dk b -> b
    u.aly.cy c -> c
    byte[] a(u.aly.bz) -> a
    java.lang.String a(u.aly.bz,java.lang.String) -> a
    java.lang.String b(u.aly.bz) -> b
u.aly.cj -> u.aly.cj:
    java.lang.Object b -> b
    u.aly.cg c -> c
    java.util.Map a -> a
    java.lang.Object a(java.lang.Object) -> a
    java.util.Map a(java.util.Map) -> a
    java.util.Set a(java.util.Set) -> a
    java.util.List a(java.util.List) -> a
    u.aly.cg i() -> i
    java.lang.Object j() -> j
    java.lang.Object b(u.aly.cg) -> b
    java.lang.Object c(int) -> c
    boolean k() -> k
    boolean c(u.aly.cg) -> c
    boolean d(int) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cg,java.lang.Object) -> b
    void a(int,java.lang.Object) -> a
    void b(u.aly.cy) -> b
    void a(u.aly.cg,java.lang.Object) -> a
    java.lang.Object a(u.aly.cy,u.aly.ct) -> a
    void c(u.aly.cy) -> c
    java.lang.Object a(u.aly.cy,short) -> a
    void d(u.aly.cy) -> d
    u.aly.dd c() -> c
    u.aly.ct a(u.aly.cg) -> a
    u.aly.cg b(short) -> b
    java.lang.String toString() -> toString
    void b() -> b
u.aly.cj$1 -> u.aly.cj$1:
u.aly.cj$a -> u.aly.cj$a:
    void a(u.aly.cy,u.aly.cj) -> a
    void b(u.aly.cy,u.aly.cj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.cj$b -> u.aly.cj$b:
    u.aly.cj$a a() -> a
    u.aly.dg b() -> b
u.aly.cj$c -> u.aly.cj$c:
    void a(u.aly.cy,u.aly.cj) -> a
    void b(u.aly.cy,u.aly.cj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.cj$d -> u.aly.cj$d:
    u.aly.cj$c a() -> a
    u.aly.dg b() -> b
u.aly.ck -> u.aly.ck:
    java.lang.Class a -> a
u.aly.cl -> u.aly.cl:
    java.lang.String a -> a
    byte b -> b
    u.aly.cm c -> c
    java.util.Map d -> d
    void a(java.lang.Class,java.util.Map) -> a
    java.util.Map a(java.lang.Class) -> a
u.aly.cm -> u.aly.cm:
    byte b -> b
    boolean a -> a
    java.lang.String c -> c
    boolean d -> d
    boolean a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
u.aly.cn -> u.aly.cn:
    u.aly.cm a -> a
u.aly.co -> u.aly.co:
    u.aly.cm a -> a
    u.aly.cm c -> c
u.aly.cp -> u.aly.cp:
    u.aly.cm a -> a
u.aly.cq -> u.aly.cq:
    java.lang.Class a -> a
u.aly.cr -> u.aly.cr:
    u.aly.dd h -> h
    int a -> a
    int b -> b
    boolean c -> c
    boolean d -> d
    int e -> e
    boolean f -> f
    byte[] i -> i
    byte[] j -> j
    byte[] k -> k
    byte[] l -> l
    byte[] m -> m
    byte[] n -> n
    byte[] o -> o
    byte[] p -> p
    void a(u.aly.cw) -> a
    void a() -> a
    void a(u.aly.dd) -> a
    void b() -> b
    void a(u.aly.ct) -> a
    void c() -> c
    void d() -> d
    void a(u.aly.cv) -> a
    void e() -> e
    void a(u.aly.cu) -> a
    void f() -> f
    void a(u.aly.dc) -> a
    void g() -> g
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.cw h() -> h
    void i() -> i
    u.aly.dd j() -> j
    void k() -> k
    u.aly.ct l() -> l
    void m() -> m
    u.aly.cv n() -> n
    void o() -> o
    u.aly.cu p() -> p
    void q() -> q
    u.aly.dc r() -> r
    void s() -> s
    boolean t() -> t
    byte u() -> u
    short v() -> v
    int w() -> w
    long x() -> x
    double y() -> y
    java.lang.String z() -> z
    java.lang.String b(int) -> b
    java.nio.ByteBuffer A() -> A
    int a(byte[],int,int) -> a
    void c(int) -> c
    void d(int) -> d
u.aly.cr$a -> u.aly.cr$a:
    boolean a -> a
    boolean b -> b
    int c -> c
    u.aly.cy a(u.aly.dm) -> a
u.aly.cs -> u.aly.cs:
    u.aly.dd d -> d
    u.aly.ct e -> e
    byte[] f -> f
    byte h -> h
    byte i -> i
    byte j -> j
    byte k -> k
    int l -> l
    u.aly.bx m -> m
    short n -> n
    u.aly.ct o -> o
    java.lang.Boolean p -> p
    long q -> q
    byte[] a -> a
    byte[] b -> b
    byte[] r -> r
    byte[] c -> c
    void B() -> B
    void a(u.aly.cw) -> a
    void a(u.aly.dd) -> a
    void b() -> b
    void a(u.aly.ct) -> a
    void a(u.aly.ct,byte) -> a
    void d() -> d
    void a(u.aly.cv) -> a
    void a(u.aly.cu) -> a
    void a(u.aly.dc) -> a
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    void a(byte[],int,int) -> a
    void a() -> a
    void e() -> e
    void f() -> f
    void g() -> g
    void c() -> c
    void a(byte,int) -> a
    void b(int) -> b
    void b(long) -> b
    long c(long) -> c
    int c(int) -> c
    void a(long,byte[],int) -> a
    void b(byte) -> b
    void d(int) -> d
    u.aly.cw h() -> h
    u.aly.dd j() -> j
    void k() -> k
    u.aly.ct l() -> l
    u.aly.cv n() -> n
    u.aly.cu p() -> p
    u.aly.dc r() -> r
    boolean t() -> t
    byte u() -> u
    short v() -> v
    int w() -> w
    long x() -> x
    double y() -> y
    java.lang.String z() -> z
    java.nio.ByteBuffer A() -> A
    byte[] e(int) -> e
    void f(int) -> f
    void i() -> i
    void m() -> m
    void o() -> o
    void q() -> q
    void s() -> s
    int E() -> E
    long F() -> F
    int g(int) -> g
    long d(long) -> d
    long a(byte[]) -> a
    boolean c(byte) -> c
    byte d(byte) -> d
    byte e(byte) -> e
u.aly.cs$a -> u.aly.cs$a:
    long a -> a
    u.aly.cy a(u.aly.dm) -> a
u.aly.cs$b -> u.aly.cs$b:
    byte a -> a
    byte b -> b
    byte c -> c
    byte d -> d
    byte e -> e
    byte f -> f
    byte g -> g
    byte h -> h
    byte i -> i
    byte j -> j
    byte k -> k
    byte l -> l
u.aly.ct -> u.aly.ct:
    java.lang.String a -> a
    byte b -> b
    short c -> c
    java.lang.String toString() -> toString
    boolean a(u.aly.ct) -> a
u.aly.cu -> u.aly.cu:
    byte a -> a
    int b -> b
u.aly.cv -> u.aly.cv:
    byte a -> a
    byte b -> b
    int c -> c
u.aly.cw -> u.aly.cw:
    java.lang.String a -> a
    byte b -> b
    int c -> c
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean a(u.aly.cw) -> a
u.aly.cx -> u.aly.cx:
    byte a -> a
    byte b -> b
    byte c -> c
    byte d -> d
u.aly.cy -> u.aly.cy:
    u.aly.dm g -> g
    u.aly.dm C() -> C
    void a(u.aly.cw) -> a
    void a() -> a
    void a(u.aly.dd) -> a
    void b() -> b
    void a(u.aly.ct) -> a
    void c() -> c
    void d() -> d
    void a(u.aly.cv) -> a
    void e() -> e
    void a(u.aly.cu) -> a
    void f() -> f
    void a(u.aly.dc) -> a
    void g() -> g
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.cw h() -> h
    void i() -> i
    u.aly.dd j() -> j
    void k() -> k
    u.aly.ct l() -> l
    void m() -> m
    u.aly.cv n() -> n
    void o() -> o
    u.aly.cu p() -> p
    void q() -> q
    u.aly.dc r() -> r
    void s() -> s
    boolean t() -> t
    byte u() -> u
    short v() -> v
    int w() -> w
    long x() -> x
    double y() -> y
    java.lang.String z() -> z
    java.nio.ByteBuffer A() -> A
    void B() -> B
    java.lang.Class D() -> D
u.aly.cz -> u.aly.cz:
    long h -> h
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int a() -> a
u.aly.d -> u.aly.d:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String f() -> f
u.aly.da -> u.aly.da:
    u.aly.cy a(u.aly.dm) -> a
u.aly.db -> u.aly.db:
    int a -> a
    void a(int) -> a
    void a(u.aly.cy,byte) -> a
    void a(u.aly.cy,byte,int) -> a
    u.aly.da a(byte[],u.aly.da) -> a
u.aly.dc -> u.aly.dc:
    byte a -> a
    int b -> b
u.aly.dd -> u.aly.dd:
    java.lang.String a -> a
u.aly.de -> u.aly.de:
    java.lang.Class D() -> D
    void a(java.util.BitSet,int) -> a
    java.util.BitSet b(int) -> b
    java.util.BitSet a(byte[]) -> a
    byte[] b(java.util.BitSet,int) -> b
u.aly.de$a -> u.aly.de$a:
    u.aly.cy a(u.aly.dm) -> a
u.aly.df -> u.aly.df:
    byte a -> a
    byte b -> b
    byte c -> c
    byte d -> d
    byte e -> e
    byte f -> f
    byte g -> g
    byte h -> h
    byte i -> i
    byte j -> j
    byte k -> k
    byte l -> l
    byte m -> m
    byte n -> n
u.aly.dg -> u.aly.dg:
    void b(u.aly.cy,u.aly.bz) -> b
    void a(u.aly.cy,u.aly.bz) -> a
u.aly.dh -> u.aly.dh:
    u.aly.dg b() -> b
u.aly.di -> u.aly.di:
u.aly.dj -> u.aly.dj:
u.aly.dk -> u.aly.dk:
    java.io.InputStream a -> a
    java.io.OutputStream b -> b
    boolean a() -> a
    void b() -> b
    void c() -> c
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    void d() -> d
u.aly.dl -> u.aly.dl:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
    void c(byte[],int,int) -> c
    void e() -> e
    void c() -> c
    boolean a() -> a
    void b() -> b
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    byte[] f() -> f
    int g() -> g
    int h() -> h
    void a(int) -> a
u.aly.dm -> u.aly.dm:
    boolean a() -> a
    boolean i() -> i
    void b() -> b
    void c() -> c
    int a(byte[],int,int) -> a
    int d(byte[],int,int) -> d
    void b(byte[]) -> b
    void b(byte[],int,int) -> b
    void d() -> d
    byte[] f() -> f
    int g() -> g
    int h() -> h
    void a(int) -> a
u.aly.dn -> u.aly.dn:
    long g -> g
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int a() -> a
u.aly.do -> u.aly.do:
    u.aly.dm a(u.aly.dm) -> a
u.aly.e -> u.aly.e:
    java.lang.String b -> b
    java.io.File c -> c
    u.aly.bb d -> d
    long e -> e
    long f -> f
    java.util.Set g -> g
    u.aly.e$a h -> h
    u.aly.e a -> a
    u.aly.e a(android.content.Context) -> a
    boolean a(u.aly.a) -> a
    void a(long) -> a
    void a() -> a
    u.aly.bb b() -> b
    void g() -> g
    java.lang.String c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    u.aly.bb h() -> h
    void a(u.aly.bb) -> a
u.aly.e$a -> u.aly.e$a:
    android.content.Context a -> a
    java.util.Set b -> b
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a() -> a
    void b() -> b
u.aly.f -> u.aly.f:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String f() -> f
u.aly.g -> u.aly.g:
    java.lang.String a -> a
    byte[] b -> b
    u.aly.x c -> c
    u.aly.g$a d -> d
    u.aly.bc e -> e
    u.aly.g f -> f
    android.content.Context g -> g
    u.aly.g a(android.content.Context) -> a
    void a(u.aly.x) -> a
    java.lang.String a(u.aly.bc) -> a
    boolean c(u.aly.bc) -> c
    byte[] a(u.aly.bd) -> a
    void b(u.aly.bc) -> b
    boolean a(java.lang.String,java.lang.String) -> a
    u.aly.bc a(u.aly.bc,u.aly.bc) -> a
    u.aly.bc d(u.aly.bc) -> d
    u.aly.bc a() -> a
    u.aly.g$a b() -> b
    void c() -> c
    void d() -> d
    boolean e() -> e
u.aly.g$a -> u.aly.g$a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    int i -> i
    int j -> j
    void a(u.aly.bc) -> a
    int a(int) -> a
    int b(int) -> b
    int c(int) -> c
    int[] a(int,int) -> a
    java.lang.String a(java.lang.String) -> a
    int d(int) -> d
    boolean a() -> a
    java.lang.String b(java.lang.String) -> b
    boolean b() -> b
    long a(long) -> a
    int a(u.aly.bc,java.lang.String) -> a
    java.lang.String b(u.aly.bc,java.lang.String) -> b
u.aly.h -> u.aly.h:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String f() -> f
u.aly.i -> u.aly.i:
    java.lang.String a -> a
    java.lang.String f() -> f
u.aly.j -> u.aly.j:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String f() -> f
u.aly.k -> u.aly.k:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.regex.Pattern c -> c
    android.content.Context d -> d
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String b(java.lang.String) -> b
    java.io.File h() -> h
u.aly.l -> u.aly.l:
    long a -> a
    int b -> b
    u.aly.t c -> c
    com.umeng.analytics.h d -> d
    u.aly.ab e -> e
    u.aly.am f -> f
    u.aly.al g -> g
    u.aly.an h -> h
    u.aly.l$a i -> i
    u.aly.g$a j -> j
    int k -> k
    long l -> l
    int m -> m
    int n -> n
    android.content.Context o -> o
    void a() -> a
    void a(u.aly.r) -> a
    void b(u.aly.r) -> b
    void b() -> b
    void c() -> c
    void a(boolean) -> a
    void a(int) -> a
    void a(u.aly.bp) -> a
    u.aly.bp a(int[]) -> a
    u.aly.bp a(byte[]) -> a
    byte[] b(u.aly.bp) -> b
    boolean b(boolean) -> b
    boolean d() -> d
    void e() -> e
    boolean c(u.aly.bp) -> c
    u.aly.bp d(u.aly.bp) -> d
    void a(int,int,java.util.List) -> a
    boolean f() -> f
    void b(int) -> b
    void a(u.aly.g$a) -> a
    u.aly.g$a a(u.aly.l) -> a
    u.aly.am b(u.aly.l) -> b
    u.aly.ab c(u.aly.l) -> c
    u.aly.an d(u.aly.l) -> d
    void a(u.aly.l,int) -> a
    u.aly.al e(u.aly.l) -> e
    android.content.Context f(u.aly.l) -> f
u.aly.l$1 -> u.aly.l$1:
    u.aly.l a -> a
    void a() -> a
u.aly.l$a -> u.aly.l$a:
    com.umeng.analytics.ReportPolicy$i b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    u.aly.l a -> a
    void a(boolean) -> a
    com.umeng.analytics.ReportPolicy$i b(boolean) -> b
    com.umeng.analytics.ReportPolicy$i b(int,int) -> b
    void a(int,int) -> a
    void a(u.aly.g$a) -> a
u.aly.m -> u.aly.m:
    u.aly.q a -> a
    android.content.Context b -> b
    u.aly.m c -> c
    u.aly.m a(android.content.Context) -> a
    void a(u.aly.q) -> a
    void a(u.aly.r) -> a
    void b(u.aly.r) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    u.aly.q a(u.aly.m) -> a
u.aly.m$1 -> u.aly.m$1:
    u.aly.r a -> a
    u.aly.m b -> b
    void a() -> a
u.aly.m$2 -> u.aly.m$2:
    u.aly.m a -> a
    void a() -> a
u.aly.m$3 -> u.aly.m$3:
    u.aly.m a -> a
    void a() -> a
u.aly.m$4 -> u.aly.m$4:
    u.aly.m a -> a
    void a() -> a
u.aly.n -> u.aly.n:
    java.lang.String a -> a
    boolean b -> b
    android.content.SharedPreferences c -> c
    java.util.Map d -> d
    void a(boolean) -> a
    int a(java.lang.String) -> a
    void a(java.lang.String,u.aly.af) -> a
    u.aly.af b(java.lang.String) -> b
    void c(java.lang.String) -> c
    boolean d(java.lang.String) -> d
u.aly.o -> u.aly.o:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    u.aly.w b -> b
    void a(u.aly.w) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable) -> a
u.aly.p -> u.aly.p:
    int a -> a
    int b -> b
    u.aly.n c -> c
    android.content.Context d -> d
    u.aly.m e -> e
    void a(java.lang.String,java.util.Map,long) -> a
    void a(java.lang.String,java.lang.String,long,int) -> a
    void a(java.lang.String,java.util.Map) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.util.Map,java.lang.String) -> a
    void c(java.lang.String,java.lang.String) -> c
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean a(java.util.Map) -> a
u.aly.q -> u.aly.q:
    void b(u.aly.r) -> b
    void a(u.aly.r) -> a
    void b() -> b
    void a() -> a
    void c() -> c
u.aly.r -> u.aly.r:
    void a(u.aly.bp,java.lang.String) -> a
u.aly.s -> u.aly.s:
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
u.aly.t -> u.aly.t:
    java.util.List a -> a
    u.aly.ap b -> b
    u.aly.ar c -> c
    u.aly.au d -> d
    u.aly.bh e -> e
    android.content.Context f -> f
    android.content.Context a() -> a
    boolean a(int) -> a
    int b() -> b
    void a(u.aly.r) -> a
    void a(u.aly.bp) -> a
    void a(u.aly.ap) -> a
    u.aly.ar c() -> c
    u.aly.au d() -> d
    u.aly.bh e() -> e
    u.aly.bc f() -> f
    u.aly.bb g() -> g
    u.aly.as h() -> h
    java.util.Map i() -> i
    u.aly.aq j() -> j
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
u.aly.u -> u.aly.u:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    android.content.Context d -> d
    u.aly.s e -> e
    void a(u.aly.s) -> a
    byte[] a(byte[]) -> a
    boolean a() -> a
    byte[] a(byte[],java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
u.aly.v -> u.aly.v:
    java.lang.String a(java.io.Serializable) -> a
    java.lang.Object a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] b(java.lang.String) -> b
u.aly.w -> u.aly.w:
    void a(java.lang.Throwable) -> a
u.aly.x -> u.aly.x:
    void a(u.aly.g$a) -> a
u.aly.y -> u.aly.y:
    java.lang.String a -> a
    android.content.SharedPreferences a(android.content.Context,java.lang.String) -> a
    android.content.SharedPreferences a(android.content.Context) -> a
u.aly.z -> u.aly.z:
    int a -> a
    int b -> b
    int c -> c
    u.aly.e d -> d
    u.aly.g e -> e
    int f -> f
    android.content.Context g -> g
    u.aly.ab h -> h
    u.aly.u i -> i
    u.aly.bp j -> j
    boolean k -> k
    boolean l -> l
    void a(u.aly.bp) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void a(u.aly.x) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    int a(byte[]) -> a
    byte[] b(u.aly.bp) -> b
    u.aly.u a(u.aly.z) -> a
    int a(u.aly.z,byte[]) -> a
    u.aly.ab b(u.aly.z) -> b
    boolean c(u.aly.z) -> c
u.aly.z$1 -> u.aly.z$1:
    u.aly.z a -> a
    void a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
vi.com.gdi.bgl.android.java.EnvDrawText -> vi.com.gdi.bgl.android.java.EnvDrawText:
    java.lang.String a -> a
    android.graphics.Paint pt -> pt
    int iWordWidthMax -> iWordWidthMax
    int iWordHightMax -> iWordHightMax
    boolean bBmpChange -> bBmpChange
    android.graphics.Bitmap bmp -> bmp
    android.graphics.Canvas canvasTemp -> canvasTemp
    int[] buffer -> buffer
    android.util.SparseArray fontCache -> fontCache
    int[] drawText(java.lang.String,int,int,int[],int,int,int,int) -> drawText
    short[] getTextSize(java.lang.String,int) -> getTextSize
    void registFontCache(int,android.graphics.Typeface) -> registFontCache
    void removeFontCache(int) -> removeFontCache
vi.com.gdi.bgl.android.java.a -> vi.com.gdi.bgl.android.java.a:
    android.graphics.Typeface a -> a
    int b -> b
